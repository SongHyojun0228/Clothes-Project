(()=>{var r={7781:(r,t,a)=>{"use strict";a(7941),a(2526),a(7327),a(5003),a(4747),a(9337),a(8309),a(2222),a(1817),a(6992),a(1539),a(8783),a(3948),a(285),a(1637),a(1249),a(6699),a(2023),a(2165),a(1038),a(7042);function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!==typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function _unsupportedIterableToArray(r,t){if(!r)return;if("string"===typeof r)return _arrayLikeToArray(r,t);var a=Object.prototype.toString.call(r).slice(8,-1);"Object"===a&&r.constructor&&(a=r.constructor.name);if("Map"===a||"Set"===a)return Array.from(r);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return _arrayLikeToArray(r,t)}(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var a=0,o=new Array(t);a<t;a++)o[a]=r[a];return o}var o=function isAndroid(){return!!window.MusinsaAppInterface},i=function isIOS(){var r,t;return!(null===(r=window.webkit)||void 0===r||null===(t=r.messageHandlers)||void 0===t||!t.MusinsaAppInterface)},c=function deviceCallApp(r,t){var a={android:function android(t){var a,o,i=null===r||void 0===r?void 0:r.android(t);if((null===i||void 0===i||!i.name)&&!Array.isArray(null===i||void 0===i?void 0:i.param))throw"Invalid argument value for android function in deviceCallApp.";return null===(a=window.MusinsaAppInterface)||void 0===a||null===(o=a[i.name])||void 0===o?void 0:o.call.apply(o,[a].concat(_toConsumableArray(i.param)))},ios:function ios(t){var a,o,i=null===r||void 0===r?void 0:r.ios(t);return null===(a=window.webkit.messageHandlers)||void 0===a||null===(o=a.MusinsaAppInterface)||void 0===o?void 0:o.postMessage(i)},notMobile:function notMobile(t){return null===r||void 0===r?void 0:r.notMobile(t)},router:function router(t){var a,c=function deviceCheck(){var r;switch(!0){case o():r="android";break;case i():r="ios";break;case!o()&&!i():r="notMobile"}return r}();if("function"===typeof r[c])return null===(a=this[c])||void 0===a?void 0:a.call(this,t)}};return a.router(t)},l=function(){try{var r=new URL(location.href).origin;return!["alpha","dev","local"].map((function(t){return r.includes(t)})).filter((function(r){return r})).length}catch(r){console.warn(r)}return!0}();function _defineProperty(r,t,a){return t in r?Object.defineProperty(r,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[t]=a,r}const p={default:{isStringify:!0,validation:[],beforeCallback:void 0,android:function android(r){return{name:r.name,param:[r.param]}},ios:function ios(r){return{command:r.name,name:null,parameters:r.param}},notMobile:!1},eventBanner:{isStringify:!1,beforeCallback:function beforeCallback(){return window.AppInterface.getEventBanner()},android:function android(r){return{name:r.name,param:[JSON.stringify(r.param)]}},ios:function ios(r){return{command:r.name,name:null,parameters:r.param}},notMobile:!1},sendTransitionGlobalFilterView:{isStringify:!1,android:!1,ios:function ios(){return{command:"transitionGlobalFilterView",name:null,parameters:null}}},setGlobalFilter:{isStringify:!1,validation:[{validate:function validate(r){var t;return _AppInfo.validateGf(null===r||void 0===r||null===(t=r.param)||void 0===t?void 0:t.type)},result:function result(){}}],android:function android(r){return{name:r.name,param:[r.param.type]}},ios:function ios(r){return{command:r.name,name:null,parameters:{type:r.param.type}}}},popOpened:{isStringify:!1,android:function android(r){return{name:r.name,param:[r.param.messageName]}},ios:function ios(r){return{command:r.name,name:r.param.messageName,value:null}},notMobile:function notMobile(){console.log("No native APIs found.")}},popClosed:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,value:null}},notMobile:function notMobile(){console.log("No native APIs found.")}},popClosedV2:{isStringify:!0,android:function android(r){return{name:r.name,param:[""]}},ios:function ios(r){return{command:r.name,name:null,parameters:JSON.stringify({currentUrl:"".concat(window.location.host).concat(window.location.pathname)})}},notMobile:function notMobile(){console.log("No native APIs found.")}},historyBack:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,value:null}},notMobile:function notMobile(){1!==window.history.length?window.history.back():window.close()}},selfClose:{isStringify:!1,android:function android(r){return{name:"historyBack",param:[]}},ios:function ios(r){return{command:"historyBack",name:null,value:null}},notMobile:function notMobile(){self.close()}},closePopup:{isStringify:!1,android:function android(r){return{name:r.name,param:[r.param.refresh,r.param.referer]}},ios:function ios(r){return{command:r.name,name:null,parameters:{refresh:r.param.refresh,referer:r.param.referer}}},notMobile:!1},clearWithUrl:{isStringify:!1,android:function android(r){return{name:r.name,param:[r.param.url,r.param.logouted]}},ios:function ios(r){return{command:r.name,name:null,parameters:{url:r.param.url,logouted:r.param.logouted}}},notMobile:function notMobile(r){window.location.href=r.param.url}},showShare:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}},notMobile:function notMobile(){console.log("No native APIs found.")}},showAppRating:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}},notMobile:function notMobile(){console.log("No native APIs found.")}},vibrate:{isStringify:!1,validation:[{validate:function validate(){return _AppInfo._isApp},result:function result(){}}],android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}},appsflyerCall:{isStringify:!1,android:function android(r){var t=JSON.stringify(r.param.params);return{name:r.name,param:[r.param.eventId,t]}},ios:function ios(r){return{command:r.name,name:null,parameters:{eventId:r.param.eventId,params:r.param.params}}}},showNative:{isStringify:!1,android:function android(r){return{name:r.name,param:[r.param.appScheme]}},ios:function ios(r){return{command:r.name,name:null,parameters:{appScheme:r.param.appScheme}}},notMobile:!1},showShareMeta:{beforeCallback:function beforeCallback(r){var t,a,o,i,c;return{title:null!==(t=r.param.title)&&void 0!==t?t:"",image:null!==(a=r.param.image)&&void 0!==a?a:"",url:null!==(o=r.param.url)&&void 0!==o?o:"",description:null!==(i=r.param.description)&&void 0!==i?i:"",type:null!==(c=r.param.type)&&void 0!==c?c:""}},android:function android(r){return{name:r.name,param:[r.param]}},ios:function ios(r){return{command:r.name,name:null,parameters:{jsonString:r.param}}}},setCookies:{isStringify:!1,android:!1,ios:function ios(r){return{command:r.name,name:null,parameters:{jsonString:r.param.jsonString}}}},amplitudeEventLog:{isStringify:!0,android:function android(r){return{name:r.name,param:[r.param]}},ios:function ios(r){return{command:r.name,name:null,parameters:r.param}},notMobile:function notMobile(r){if(!l){var t=r.param,a=JSON.parse(t);console.log("========================================================================================"),console.log("event name: %c".concat(a.eventName),"color: red;"),console.log("properties:",a.log.properties),console.log("log:",a.log),console.log("========================================================================================")}console.log("No native APIs found.")}},amplitudeUserIdentify:{isStringify:!1,android:function android(r){var t=r.name,a=r.param,o=a.type,i=a.key,c=a.value;return{name:t,param:[JSON.stringify(_defineProperty({},o,_defineProperty({},i,c)))]}},ios:function ios(r){var t=r.name,a=r.param,o=a.type,i=a.key,c=a.value;return{command:t,name:null,parameters:JSON.stringify(_defineProperty({},o,_defineProperty({},i,c)))}},notMobile:function notMobile(r){l||(console.log("========================================================================================"),console.log("properties:",r.param),console.log("========================================================================================")),console.log("No native APIs found.")}},checkNotifications:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}},moveDeviceNotifications:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}},showToast:{isStringify:!1,android:function android(r){return{name:r.name,param:[JSON.stringify(r.param)]}},ios:function ios(r){return{command:r.name,name:null,parameters:JSON.stringify(r.param)}}},requestAppsFlyerClientData:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}},myPhoneNumbers:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}},requestAmplitudeVariant:{isStringify:!1,android:function android(r){return{name:r.name,param:[JSON.stringify(r.param)]}},ios:function ios(r){return{command:r.name,name:null,parameters:JSON.stringify(r.param)}}},showOfflineEditorialShopQRScanView:{isStringify:!1,android:function android(r){return{name:r.name,param:[]}},ios:function ios(r){return{command:r.name,name:null,parameters:null}}}};a(6833);const u=function checkAddons(r,t,a){var o;return Array.isArray(a)||(a=[]),null!==(o=window.AppInterfaceAddons)&&void 0!==o&&o[r]&&"function"===typeof window.AppInterfaceAddons[r]?(a.unshift(t),window.AppInterfaceAddons[r].apply(this,a)):t.apply(this,a)};const d={setBottomMenu:function setBottomMenu(){},eventBanner:function eventBanner(){u("eventBanner",(function(){AppInterface.callApp({name:"eventBanner"})}),Object.values(arguments))},eventBannerV2:function eventBannerV2(){u("eventBannerV2",(function(){AppInterface.callApp({name:"eventBanner"})}),Object.values(arguments))},sendTransitionGlobalFilterView:function sendTransitionGlobalFilterView(){u("sendTransitionGlobalFilterView",(function(){AppInterface.callApp({name:"sendTransitionGlobalFilterView"})}),Object.values(arguments))},setGlobalFilter:function setGlobalFilter(r){u("setGlobalFilter",(function(){AppInterface.callApp({name:"setGlobalFilter",param:{type:r}})}),Object.values(arguments))},popOpened:function popOpened(r){AppInterface.callApp({name:"popOpened",param:{messageName:r}})},popClosed:function popClosed(){_AppInfo.UpperVersion("4.3.0")?this.popClosedV2(""):("ios"===_AppInfo._os&&this.popClosedV2(""),AppInterface.callApp({name:"popClosed"}))},popClosedV2:function popClosedV2(){AppInterface.callApp({name:"popClosedV2"})},historyBack:function historyBack(){AppInterface.callApp({name:"historyBack"})},selfClose:function selfClose(){AppInterface.callApp({name:"selfClose"})},closePopup:function closePopup(r,t){u("closePopup",(function(){AppInterface.callApp({name:"closePopup",param:{refresh:r,referer:t}})}),Object.values(arguments))},clearWithUrl:function clearWithUrl(r,t){AppInterface.callApp({name:"clearWithUrl",param:{url:r,logouted:t}})},showShare:function showShare(){AppInterface.callApp({name:"showShare"})},showAppRating:function showAppRating(){AppInterface.callApp({name:"showAppRating"})},vibrate:function vibrate(){AppInterface.callApp({name:"vibrate"})},appsflyerCall:function appsflyerCall(r,t){AppInterface.callApp({name:"appsflyerCall",param:{eventId:r,params:t}})},showNative:function showNative(r){u("showNative",(function(){AppInterface.callApp({name:"showNative",param:{appScheme:r}})}),Object.values(arguments))},showShareMeta:function showShareMeta(r,t,a,o,i){AppInterface.callApp({name:"showShareMeta",param:{title:r,image:t,url:a,description:o,type:i}})},setCookies:function setCookies(r){u("setCookies",(function(){AppInterface.callApp({name:"setCookies",param:{jsonString:r}})}),Object.values(arguments))},sendEvent:function sendEvent(r,t){AppInterface.callApp({name:"amplitudeEventLog",param:{eventName:r,log:{properties:t}}})},sendPurchaseEvent:function sendPurchaseEvent(r){AppInterface.callApp({name:"amplitudeEventLog",param:{eventName:"purchase",log:r}})},sendScreenEvent:function sendScreenEvent(r,t){AppInterface.callApp({name:"amplitudeEventLog",param:{eventName:r,log:{properties:t}}})},identifyUser:function identifyUser(r,t,a){AppInterface.callApp({name:"amplitudeUserIdentify",param:{type:r,key:t,value:a}})},checkNotifications:function checkNotifications(){return AppInterface.callApp({name:"checkNotifications"})},moveDeviceNotifications:function moveDeviceNotifications(){AppInterface.callApp({name:"moveDeviceNotifications"})},showToast:function showToast(r){AppInterface.callApp({name:"showToast",param:{message:r}})},requestAppsFlyerClientData:function requestAppsFlyerClientData(){AppInterface.callApp({name:"requestAppsFlyerClientData"})},requestAmplitudeVariant:function requestAmplitudeVariant(r){AppInterface.callApp({name:"requestAmplitudeVariant",param:{key:r}})},myPhoneNumbers:function myPhoneNumbers(){AppInterface.callApp({name:"myPhoneNumbers"})},showOfflineEditorialShopQRScanView:function showOfflineEditorialShopQRScanView(){AppInterface.callApp({name:"showOfflineEditorialShopQRScanView"})}};a(9601);var m=function objectMerge(r,t){return Object.assign({},r,t)};const _=function makeParameter(r,t,a){var o;return function rootParamMerge(r,t,a){return m(t,{param:r?JSON.stringify(a):a})}(a,r,t?t.call(this,r):null!==(o=r.param)&&void 0!==o?o:{})};const v=function interfaceValidator(r,t){for(var a=0;a<t.length;a++){var o=t[a],i=o.validate,c=o.result;if(!i.call(this,r))return c.call(this)}return!1};a(4603),a(4916),a(9714);const h=JSON.parse('{"F":[["^/main/345/?$","main_sale"],["^/app/?$","main_home"],["^/dp/menu/?$","menu"],["^/dp/newin/?$","newin"],["^/categories/item/(?<categoryItem>[0-9]*)/?$","category"],["^/brands/(?<brandId>[0-9a-zA-Z]*)/?","brands_brandshop"],["^/dp/flagship/(?<brandId>[0-9a-zA-Z]*)/?$","brands_flagship_main"],["^/dp/flagship/(?<brandId>[0-9a-zA-Z]*)/best/?$","brands_flagship_products"],["^/dp/flagship/(?<brandId>[0-9a-zA-Z]*)/products/?$","brands_flagship_products"],["^/app/goods/(?<goodsId>[0-9]*)/?$","detail"],["^/products/(?<goodsId>[0-9]*)/?$","detail"],["^/menu/?$","menu"],["^/spc/musinsaplus/?$","spc_musinsaplus"],["^/spc/musinsaplus/goods/?$","spc_musinsaplus_goods"],["^/spc/musinsaplus/events/?$","spc_musinsaplus_events"],["^/spc/musinsaplus/contents/?$","spc_musinsaplus_contents"],["^/spc/musinsaplus/navigation/?$","spc_musinsaplus_navigation"],["^/spc/boutique/?$","spc_boutique"],["^/spc/boutique/goods/?$","spc_boutique_goods"],["^/spc/boutique/events/?$","spc_boutique_events"],["^/spc/boutique/contents/?$","spc_boutique_contents"],["^/spc/golf/?$","spc_golf"],["^/spc/golf/goods/?$","spc_golf_goods"],["^/spc/golf/events?$","spc_golf_events"],["^/spc/golf/contents?$","spc_golf_contents"],["^/spc/beauty/?$","spc_beauty"],["^/spc/beauty/goods/?$","spc_beauty_goods"],["^/spc/beauty/contents/?$","spc_beauty_contents"],["^/spc/kids/?$","spc_kids"],["^/spc/kids/goods/?$","spc_kids_goods"],["^/spc/kids/events/?$","spc_kids_events"],["^/spc/kids/contents/?$","spc_kids_contents"],["^/spc/outlet/?$","spc_outlet"],["^/spc/outlet/goods/?$","spc_outlet_goods"],["^/spc/outlet/events/?$","spc_outlet_events"],["^/spc/outlet/navigation/?$","spc_outlet_navigation"],["^/spc/player/?$","spc_player"],["^/spc/player/goods/?$","spc_player_goods"],["^/spc/player/events/?$","spc_player_events"],["^/spc/player/contents/?$","spc_player_contents"],["^/spc/player/navigation/?$","spc_player_navigation"],["^/spc/playerrun/?$","spc_playerrun"],["^/spc/playerrun/goods/?$","spc_playerrun_goods"],["^/spc/playerrun/events/?$","spc_playerrun_events"],["^/spc/playerrun/contents/?$","spc_playerrun_contents"],["^/spc/playersoccer/?$","spc_playersoccer"],["^/spc/playersoccer/goods/?$","spc_playersoccer_goods"],["^/spc/playersoccer/events/?$","spc_playersoccer_events"],["^/spc/playersoccer/contents/?$","spc_playersoccer_contents"],["^/spc/playerfitness/?$","spc_playerfitness"],["^/spc/playerfitness/goods/?$","spc_playerfitness_goods"],["^/spc/playerfitness/events/?$","spc_playerfitness_events"],["^/spc/playerfitness/contents/?$","spc_playerfitness_contents"],["^/spc/playeryoga/?$","spc_playeryoga"],["^/spc/playeryoga/goods/?$","spc_playeryoga_goods"],["^/spc/playeryoga/events/?$","spc_playeryoga_events"],["^/spc/playeryoga/contents/?$","spc_playeryoga_contents"],["^/spc/playercamp/?$","spc_playercamp"],["^/spc/playercamp/goods/?$","spc_playercamp_goods"],["^/spc/playercamp/events/?$","spc_playercamp_events"],["^/spc/playercamp/contents/?$","spc_playercamp_contents"],["^/spc/playeroutdoor/?$","spc_playeroutdoor"],["^/spc/playeroutdoor/goods/?$","spc_playeroutdoor_goods"],["^/spc/playeroutdoor/events/?$","spc_playeroutdoor_events"],["^/spc/playeroutdoor/contents/?$","spc_playeroutdoor_contents"],["^/spc/playerswim/?$","spc_playerswim"],["^/spc/playerswim/goods/?$","spc_playerswim_goods"],["^/spc/playerswim/events/?$","spc_playerswim_events"],["^/spc/playerswim/contents/?$","spc_playerswim_contents"],["^/spc/playercycle/?$","spc_playercycle"],["^/spc/playercycle/goods/?$","spc_playercycle_goods"],["^/spc/playercycle/events/?$","spc_playercycle_events"],["^/spc/playercycle/contents/?$","spc_playercycle_contents"],["^/spc/playertennis/?$","spc_playertennis"],["^/spc/playertennis/goods/?$","spc_playertennis_goods"],["^/spc/playertennis/events/?$","spc_playertennis_events"],["^/spc/playertennis/contents/?$","spc_playertennis_contents"],["^/spc/playerbadminton/?$","spc_playerbadminton"],["^/spc/playerbadminton/goods/?$","spc_playerbadminton_goods"],["^/spc/playerbadminton/events/?$","spc_playerbadminton_events"],["^/spc/playerbadminton/contents/?$","spc_playerbadminton_contents"],["^/spc/playerbaseball/?$","spc_playerbaseball"],["^/spc/playerbaseball/goods/?$","spc_playerbaseball_goods"],["^/spc/playerbaseball/events/?$","spc_playerbaseball_events"],["^/spc/playerbaseball/contents/?$","spc_playerbaseball_contents"],["^/spc/playerbasketball/?$","spc_playerbasketball"],["^/spc/playerbasketball/goods/?$","spc_playerbasketball_goods"],["^/spc/playerbasketball/events/?$","spc_playerbasketball_events"],["^/spc/playerbasketball/contents/?$","spc_playerbasketball_contents"],["^/spc/playersnow/?$","spc_playersnow"],["^/spc/playersnow/goods/?$","spc_playersnow_goods"],["^/spc/playersnow/events/?$","spc_playersnow_events"],["^/spc/playersnow/contents/?$","spc_playersnow_contents"],["^/spc/playerothers/?$","spc_playerothers"],["^/spc/playerothers/goods/?$","spc_playerothers_goods"],["^/spc/playerothers/events/?$","spc_playerothers_events"],["^/spc/playerothers/contents/?$","spc_playerothers_contents"],["^/spc/beautyman/?$","spc_beautyman"],["^/spc/beautyman/goods/?$","spc_beautyman_goods"],["^/spc/beautyman/events/?$","spc_beautyman_events"],["^/spc/beautyman/contents/?$","spc_beautyman_contents"],["^/spc/earth/?$","spc_earth"],["^/spc/earth/goods/?$","spc_earth_goods"],["^/spc/earth/contents/?$","spc_earth_contents"],["^/spc/earth/events/?$","spc_earth_events"],["^/spc/earthmaterials/?$","spc_earthmaterials"],["^/spc/earthmaterials/goods/?$","spc_earthmaterials_goods"],["^/spc/earthcircular/?$","spc_earthcircular"],["^/spc/earthcircular/goods/?$","spc_earthcircular_goods"],["^/spc/earthnature/?$","spc_earthnature"],["^/spc/earthnature/goods/?$","spc_earthnature_goods"],["^/spc/earthanimal/?$","spc_earthanimal"],["^/spc/earthanimal/goods?$","spc_earthanimal_goods"],["^/spc/earthsocial/?$","spc_earthsocial"],["^/spc/earthsocial/goods?$","spc_earthsocial_goods"],["^/spc/playerfishing/?$","spc_playerfishing"],["^/spc/playerfishing/goods?$","spc_playerfishing_goods"],["^/spc/travel/?$","spc_travel"],["^/spc/travel/goods/?$","spc_travel_goods"],["^/spc/travel/events/?$","spc_travel_events"],["^/spc/travel/contents/?$","spc_travel_contents"],["^/spc/travel/navigation/?$","spc_travel_navigation"],["^/search/musinsa/integration/?$","search_results_integration"],["^/search/musinsa/goods/?$","search_results_goods"],["^/search/musinsa/coordi/?$","search_results_coordi"],["^/search/musinsa/snap/?$","search_results_snap"],["^/search/musinsa/event/?$","search_results_event"],["^/search/musinsa/coupon/?$","search_results_coupon"],["^/search/musinsa/issue/?$","search_results_issue"],["^/search/musinsa/uptodate/?$","search_results_update"],["^/search/musinsa/lookbook/?$","search_results_lookbook"],["^/search/musinsa/special/?$","search_results_special"],["^/search/musinsa/contents/?$","search_results_contents"],["^/search/musinsa/magazine/?$","search_results_magazine"],["^/search/musinsa/community/?$","search_results_community"],["^/ranking/best/?$","ranking_product"],["^/ranking/brand/?$","ranking_brand"],["^/ranking/keyword/?$","ranking_search"],["^/ranking/theme/?$","ranking_theme"],["^/app/styles/lists/?$","contentslist_codishop"],["^/app/styles/views/(?<codShopId>[0-9]*)/?$","contentsdetail_codishop"],["^/app/codimap/lists/?$","contentslist_codimap"],["^/app/codimap/views/(?<codeMapId>[0-9]*)/?$","contentsdetail_codimap"],["^/mz/brandsnap/?$","contentslist_brandsnap"],["^/mz/brandsnap/view/(?<brandSnapId>[0-9]*)/?$","contentsdetail_brandsnap"],["^/mz/streetsnap/?$","contentslist_streetsnap"],["^/mz/streetsnap/view/(?<streetSnapId>[0-9]*)/?$","contentsdetail_streetsnap"],["^/app/showcase/lists/?$","contentslist_showcase"],["^/cms/showcases/view/(?<showcaseId>[0-9]*)/?","contentsdetail_showcase"],["^/mz/showcases/view/(?<showcaseId>[0-9]*)/?","contentsdetail_showcase"],["^/mz/showcases/?","contentslist_showcase"],["^/app/specialissue/lists/?$","contentslist_specialissue"],["^/cms/specialissue/view/(?<specialissueId>[0-9]*)/?$","contentsdetail_specialissue"],["^/app/specialissue/views/(?<specialissueId>[0-9]*)/?","contentsdetail_specialissue"],["^/app/curating/views/(?<curatingId>[0-9]*)/?","contents_curating_detail"],["^/cms/micro/view/(?<microId>[0-9]*)/?$","contentsdetail_micro"],["^/cms/news/view/(?<newsId>[0-9]*)/?$","contentsdetail_news"],["^/mz/news/view/(?<newsId>[0-9]*)/?$","contentsdetail_news"],["^/mz/news","contentslist_news"],["^/app/news/views/?$","contentsdetail_news"],["^/cms/magazine/view/(?<magazineId>[0-9]*)/?","contentsdetail_magazine"],["^/mz/magazine/view/(?<magazineId>[0-9]*)/?","contentsdetail_magazine"],["^/mz/magazine/?","contentslist_magazine"],["^/cms/tv/view/(?<tvId>[0-9]*)/?$","contentsdetail_tv"],["^/mz/tv/view/(?<tvId>[0-9]*)/?$","contentsdetail_tv"],["^/mz/tv/?","contentslist_tv"],["^/mz/community-experience/view/(?<communityId>[0-9]*)/?","mz_community-experience"],["^/mz/community-event-notice/view/(?<communityId>[0-9]*)/?","magazine_community_eventnotice"],["^/app/video/views/(?<videoId>[0-9]*)/?$","contentsdetail_video"],["^/app/video/lists/?$","contentslist_video"],["^/app/plan/views/(?<planId>[0-9]*)/?$","contentsdetail_plan"],["^/app/plan/lists/?$","contentslist_plan"],["^/app/liveshop/campaign/(?<liveCampaignId>[0-9a-zA-Z]*)/?$","liveshop_campaign"],["^/app/liveshop/views/(?<liveCampaignId>[0-9a-zA-Z]*)/?$","liveshop_views"],["^/app/campaign/index/(?<urlCode>[0-9a-zA-Z_-]*)/?","eventdetail_cpcms"],["^/app/brand_event/lists/?$","eventlist_newbrand"],["^/app/brand_event/views/(?<brandName>[0-9a-zA-Z]*)/(?<brandEventId>[0-9]*)/?$","eventdetail_newbrand"],["^/preuser/main/?$","eventlist_preuser"],["^/preuser/history/?$","preuser_history"],["^/preuser/history/(?<preuserHistoryId>[0-9]*)/?$","preuser_history_detail"],["^/preuser/events/(?<preuserEventId>[0-9]*)/?$","eventdetail_preuser"],["^/event/raffles/(?<raffleEventId>[0-9]*)/?$","eventdetail_raffle"],["^/event/raffles/?$","eventlist_raffle"],["^/app/event_random/lists/?$","eventlist_random"],["^/app/event_random/views/(?<randomEventId>[0-9]*)/?$","eventdetail_random"],["^/app/event_brand_show/?$","eventdetail_brandshow"],["^/app/contents/coupon_products/?$","sale_coupon_product"],["^/dp/saleshop/?$","dp_saleshop"],["^/app/content/s/usr/membership/?$","eventdetail_membership_990"],["^/app/stylecontents/lists/?$","contentslist_stylecontents"],["^/contents/short-tv/?.*$","shorttv"],["^/app/reviews/views/(?<reviewId>[0-9]*)/?$","members_reivew"],["^/app/reviews/lists/?$","review_members"],["^/app/reviews/views/(?<reviewId>[0-9]*)/?$","review_members_detail"],["^/app/cs/report_pop/EST(?<reportId>[0-9]*)/?$","review_report"],["^/goods/picture-reviews/?$","review_photo"],["^/snap/?$","snap"],["^/snap/(?<snapId>[0-9]{1,})/?$","snap_detail"],["^/snap/recommend/?$","snap_recommend"],["^/snap/web-to-app/?$","snap_webtoapp"],["^/snap/ranking/?$","snap_ranking"],["^/snap/category/?$","snap_category"],["^/snap/profile/?$","snap_profile_mypage"],["^/snap/search/?$","snap_search"],["^/snap/search/result/?$","snap_search_result"],["^/snap/main/recommend/?$","snap_main_recommend"],["^/snap/main/following/?$","snap_main_following"],["^/snap/main/keyword/(?<keyword>[0-9a-zA-Z_-]*)/?$","snap_main_keyword"],["^/snap/main/events/(?<eventSlug>[0-9a-zA-Z_-]*)/?$","snap_main_campaign"],["^/snap/main/campaign/(?<campaignId>[0-9a-zA-Z_-]*)/?$","snap_main_campaign"],["^/snap/main/fashiontalk/total/?$","snap_main_fashiontalk"],["^/snap/main/fashiontalk/?$","snap_main_fashiontalk"],["^/snap/main/ranking/?$","snap_main_ranking"],["^/snap/main/ranking/snap/?$","snap_main_ranking"],["^/snap/main/ranking/member/?$","snap_main_ranking"],["^/snap/main/ranking/brand/?$","snap_main_ranking"],["^/snap/crew/apply/?$","snap_crew_apply"],["^/snap/style-survey/start/?$","snap_onboarding"],["^/snap/style-survey/select/?$","snap_onboarding_select"],["^/snap/style-survey/result/?$","snap_onboarding_result"],["^/snap/comment/(?<commentId>[0-9]*)/?$","snap_comment"],["^/snap/brand/(?<brandId>[0-9a-zA-Z]*)/?$","snap_search_brand"],["^/snap/tag/(?<tagId>[0-9a-zA-Z\u3131-\u314e\u314f-\u3163\uac00-\ud7a3]*)/?$","snap_search_tag"],["^/snap/(?<snapId>[0-9]*)/like/?$","snap_detail_like"],["^/snap/message/newsfeed/?$","snap_message_newsfeed"],["^/snap/profile/(?<profileId>[0-9a-zA-Z]*)/snaps/?$","snap_profile_snaps"],["^/snap/profile/(?<profileId>[0-9a-zA-Z]*)/follow/?$","snap_profile_follow"],["^/snap/brand/(?<brandId>[0-9a-zA-Z]*)/snaps/?$","snap_search_brand_snaps"],["^/snap/tag/(?<tagId>[0-9a-zA-Z\u3131-\u314e\u314f-\u3163\uac00-\ud7a3]*)/snaps/?$","snap_search_tag_snaps"],["^/snap/profile/modify-bodyspec/?$","snap_modify_bodyspec"],["^/snap/feed/filter/(?<filterId>[0-9a-zA-Z]*)/?$","snap_feed_filter"],["^/snap/write/style/?$","snap_write_style"],["^/snap/write/review/?$","snap_write_review"],["^/snap/write/fashiontalk/?$","snap_write_fashiontalk"],["^/snap/edit/style/?$","snap_edit_style"],["^/snap/edit/review/?$","snap_edit_review"],["^/snap/profile/modify/?$","snap_profile_modify"],["^/snap/profile/follow/?$","snap_profile_follow"],["^/snap/profile/(?<profileId>[0-9a-zA-Z]*)/?$","snap_profile"],["^/snap/tag/?$","snap_tag"],["^/snap/goods/?$","snap_goods"],["^/snap/fashiontalk/post/(?<id>[0-9a-zA-Z]*)/?$","snap_fashiontalk_post"],["^/snap/shorts/feed/?$","snap_shorts_feed"],["^/app/cart/?$","cart"],["^/orders/cart/?$","cart"],["^/app/order/order_form/?$","order_form"],["^/orders/order/order_form/?$","order_form"],["^/app/order/order_result/?$","order_result"],["^/orders/order/order_result/?$","order_result"],["^/app/mypage/order_exchange/(?<orderDate>[0-9]*)/(?<orderId>[0-9]*)/?$","order_exchange"],["^/app/mypage/order_refund/(?<orderDate>[0-9]*)/(?<orderId>[0-9]*)/?$","order_refund"],["^/app/mypage/order_list_opt/?$","order_list_opt"],["^/member/join/?$","member_join"],["^/member/join/form/?$","member_join_form"],["^/member/join/complete/?$","join_complete"],["^/member/join/complete/offline/?$","member_join_complete_offline"],["^/member/leave-cancel/?$","leave_cancel"],["^/member/leave/complete/?$","leave_cancel"],["^/member/leave/?$","leave"],["^/member/mypage/?$","mypage"],["^/member/mypage/myinfo/?$","mypage_setting"],["^/mypage/myinfo/?$","mypage_setting"],["^/member/mypage/mysize/?$","member_mypage_mysize"],["^/member/benefit/?$","member_benefit"],["^/member/point/?$","mypage_point"],["^/member/find/password/?$","find_password"],["^/member/find/id/?$","find_id"],["^/message/newsfeed/?$","message_newsfeed"],["^/member/sleep/email/?$","member_sleep_email"],["^/member/sleep/password/?$","member_sleep_password"],["^/mypage/benefit/?$","mypage_benefit"],["^/mypage/grade/?$","mypage_grade"],["^/billing/point/?$","mypage_billing_point"],["^/app/contents/coupon_online/my/?$","mypage_coupon"],["^/app/mypage/clm_list_opt/?$","mypage_cer_list"],["^/app/mypage/shop_order_list/?$","mypage_shop_order_list"],["^/app/mypage/restock/?$","mypage_restock"],["^/app/mypage/raffle/?$","mypage_raffle"],["^/app/mypage/mysize_new/?$","mypage_mysize"],["^/billing/musinsacard/?$","musinsa_hyndai_card"],["^/app/mypage/counsel/?$","mypage_counsel"],["^/app/mypage/qa/?$","mypage_product_qa"],["^/app/cs/faq/?$","cs_faq"],["^/app/cs/notice_list/?$","cs_notice_list"],["^/member/gate-password/?$","mypage_member_gate_password"],["^/member/modify/password/?$","mypage_modify_password"],["^/member/modify-nickname/?$","mypage_modify_nickname"],["^/member/modify-introduce/?$","mypage_modify_introduce"],["^/member/onboarding/brands/?$","member_onboarding_brands"],["^/member/onboarding/brands/tutorial/?$","member_onboarding_brands_tutorial"],["^/member/mypage/sns-setting/?$","mypage_sns_setting"],["^/app/mypage/delivery/?$","mypage_delivery"],["^/app/member/refund_account/?$","mypage_refund_account"],["^/preuser/apply/(?<applyId>[0-9]*)/?$","eventdetail_preuser_apply"],["^/member/personal-sns/settings/?$","mypage_sns_connect"],["^/member/selfcertify/fail/duplicate/?$","selfcertify_fail_duplicate"],["^/member/selfcertify/fail/inexact-member/?$","selfcertify_fail_inexactmember"],["^/member/selfcertify/fail/limit/?$","selfcertify_fail_limit"],["^/member/selfcertify/fail/re-join/?$","selfcertify_fail_rejoin"],["^/member/selfcertify/fail/leave-progress/?$","selfcertify_fail_leaveprogress"],["^/app/mypage/wishlist/?$","like"],["^/like/front/recommend/?$","like_front_recommend"],["^/like/front/shared/?$","like_front_shared"],["^/member/mission/?$","member_mission"],["^/member/mission/woman/?$","member_mission_woman"],["^/auth/login/?$","login"],["^/member/event/friend/?$","member_event_friend"],["^/member/mission/new-brand/?$","member_mission_new_brand"],["^/member/mission/snap-daily-like/?$","member_mission_snap"],["^/member/mission/attendance/?$","member_event_attendance"],["^/member/mission/mujinjang/?$","member_event_mujinjang"],["^/member/mission/beauty-detail/?$","member_mission_tutorial"],["^/member/mission/beauty-tutorial/?$","member_mission_beauty_tutorial"],["^/member/mission/mpay/?$","member_mission_mpay"],["^/goods/mypage/review/write-review/?$","mypage_write_review"],["^/goods/mypage/review/review-history/?$","mypage_review_history"],["^/fashiontalk/main/(?<tabId>[0-9a-zA-Z_-]*)/?$","fashiontalk"],["^/fashiontalk/post/(?<postId>[0-9a-zA-Z]*)/?$","fashiontalk_post"],["^/fashiontalk/write/?$","fashiontalk_write"],["^/fashiontalk/edit/?$","fashiontalk_edit"],["^/fashiontalk/tag/(?<tagId>[0-9a-zA-Z]*)/?$","fashiontalk_tag"],["^/fashiontalk/mypage/?$","fashiontalk_mypage"],["^/fashiontalk/search/?$","fashiontalk_search"],["^/fashiontalk/search/post/?$","fashiontalk_search_post"],["^/fashiontalk/search/user/?$","fashiontalk_search_user"],["^/fashiontalk/search/goods/?$","fashiontalk_search_goods"],["^/fashiontalk/goods/(?<id>[0-9a-zA-Z:]*)/posts/?$","fashiontalk_search_goods_posts"],["^/fashiontalk/mykeyword/?$","fashiontalk_mykeyword"],["^/fashiontalk/point-guide/?$","fashiontalk_pointguide"],["^/onboarding/tutorial/challenge-mission/?$","onboarding_tutorial_challengemission"],["^/onboarding/tutorial/challenge-mission/(?<testType>[0-9a-zA-Z:]*)/?$","onboarding_tutorial_challengemission"],["^/onboarding/firstbuy/?$","onboarding_firstbuy"],["^/onboarding/firstbuy-return/?$","onboarding_firstbuy_return"],["^/onboarding/curation/?$","onboarding_curation"],["^/onboarding/hello-sleeper/?$","onboarding_hellosleeper"],["^/onboarding/hello-sleeper/invitation/?$","onboarding_hellosleeper_invitation"],["^/onboarding/tutorial/brand?$","onboarding_tutorial_brand"],["^/onboarding/welcome/?$","member_onboarding_welcome"],["^/onboarding/guide-mission/?$","onboarding_guidemission"],["^/onboarding/event/coupon-letter/?$","onboarding_event_couponletter"],["^/onboarding/event/coupon-letter/invite/?$","onboarding_event_couponletter_invite"],["^/onboarding/event/coupon-letter/list/?$","onboarding_event_couponletter_list"],["^/onboarding/event/coupon-letter/select/?$","onboarding_event_couponletter_select"],["^/onboarding/event/coupon-letter/(?<inviteCode>[0-9a-zA-Z]*)/?$","onboarding_event_couponletter_detail"],["^/onboarding/event/survey/(?<surveyId>[0-9a-zA-Z]*)/?$","onboarding_event_survey"],["^/onboarding/event/survey/(?<surveyId>[0-9a-zA-Z]*)/(?<userUuid>[0-9a-zA-Z]*)/?$","onboarding_event_survey_result"],["^/onboarding/event/quiz/(?<quizId>[0-9a-zA-Z]*)/?$","onboarding_event_quiz"],["^/onboarding/event/quiz/(?<quizId>[0-9a-zA-Z]*)/question?$","onboarding_event_quiz_question"],["^/onboarding/event/quiz/(?<quizId>[0-9a-zA-Z]*)/(?<userUuid>[0-9a-zA-Z]*)/?$","onboarding_event_quiz_result"],["^/onboarding/firstbuy/?$","onboarding_firstbuy"],["^/onboarding/firstbuy-return/?$","onboarding_firstbuy_return"],["^/onboarding/curation/?$","onboarding_curation"],["^/onboarding/curation/musinsastandard/?$","onboarding_curation_musinsastandard"],["^/onboarding/codinote/?$","onboarding_codinote"],["^/onboarding/codinote/subscribe/?$","onboarding_codinote_subscribe"],["^/onboarding/codinote/feedback/?$","onboarding_codinote_feedback"],["^/onboarding/codinote/setting/?$","onboarding_codinote_setting"],["^/onboarding/coupon/?$","onboarding_coupon"],["^/onboarding/coupon/brand/?$","onboarding_coupon_brand"],["^/onboarding/coupon/brand/result/?$","onboarding_coupon_brand_result"],["^/onboarding/coupon/product/result/?$","onboarding_coupon_product_result"],["^/onboarding/benefit/?$","onboarding_benefit"],["^/app/event/presentation_ss_2023/?$","ss23pt_index"],["^/app/event/presentation_ss_2023/main/?$","ss23pt_main"],["^/app/event/presentation_ss_2023/curation/?$","ss23pt_curation"],["^/app/event/summer23pt/?$","event_summer23pt"],["^/app/event/summer23pt/main/?$","event_summer23pt_main"],["^/app/event/summer23pt/sale/?$","event_summer23pt_sale"],["^/app/event/recommerce/?$","event_recommerce_main"],["^/app/event/recommerce/list/?$","event_recommerce_detail"],["^/app/event/recommerce/delivery/?$","event_recommerce_apply"],["^/app/mujinjangsale/benefit/?$","mujinjangsale_benefit"],["^/mypage/mystyle/?$","mypage_mystyle"],["^/mypage/leave/reason/?$","leave_reason"],["^/mypage/leave/benefit/?$","leave_benefit"],["^/mypage/leave/agree/?$","leave_agree"],["^/mypage/leave/cancel/?$","leave_cancel"],["^/like/goods/?$","like"],["^/like/brand/?$","like_brand"],["^/like/snap/?$","like_snap"],["^/like/folder/?$","like_folder_list"],["^/like/folder/(?<folderId>[0-9a-zA-Z]*)/?$","like_folder"],["^/like/folder/share/(?<folderId>[0-9a-zA-Z]*)/?$","share_like_folder"],["^/curator/intro/pro/?$","curator_apply"],["^/curator/join/pro/?$","curator_apply_join"],["^/curator/me/pro/?$","curator_mypage"],["^/curator/myshop/(?<snsId>[0-9a-zA-Z]*)/?$","curator_shop_my"],["^/curator/s/(?<snsId>[0-9a-zA-Z]*)/?$","curator_shop_visit"],["^/curator/search/?$","curator_mypage_search"],["^/curator/events/?$","curator_events"],["^/order-service/mypage/order_exchange/(?<orderDate>[0-9]*)/(?<orderId>[0-9]*)/?$","order_exchange"],["^/order-service/mypage/order_refund/(?<orderDate>[0-9]*)/(?<orderId>[0-9]*)/?$","order_refund"],["^/order-service/mypage/order_list_opt/?$","order_list_opt"],["^/order-service/mypage/clm_list_opt/?$","mypage_cer_list"],["^/order-service/member/refund_account/?$","mypage_refund_account"],["^/order-service/mypage/shop_order_list/?$","mypage_shop_order_list"],["^/order-service/my/claim/refund_account/?$","refund_account"],["^/order-service/my/addresses/update/(?<key>[0-9a-zA-Z]*)/?$","addresses_update"],["^/order-service/my/addresses/add/?$","addresses_add"],["^/order-service/my/addresses/order/?$","addresses_order"],["^/order-service/my/addresses/manage/?$","addresses_manage"],["^/order-service/my/order/list","mypage_order_list_opt"],["^/order-service/my/order/order_view/(?<orderId>[0-9]*)","mypage/order_view/"],["^/order-service/my/claim/list","mypage/clm_list_opt"],["^/order-service/my/claim/cancel_detail/(?<cancelId>[0-9]*)/ORDER_OPTION","my/claim/cancel_detail"],["^/order-service/my/claim/return_detail/(?<returnId>[0-9]*)/RETURN_GROUP","my/claim/return_detail"],["^/order-service/my/claim/exchange_detail/(?<returnId>[0-9]*)/RETURN_GROUP","my/claim/exchange_detail"],["^/events/?$","eventlist"],["^/main/musinsa/recommend/?$","main_musinsa_recommend"],["^/main/musinsa/ranking/?$","main_musinsa_ranking"],["^/main/musinsa/sale/?$","main_musinsa_sale"],["^/main/musinsa/brand/?$","main_musinsa_brand"],["^/main/musinsa/release/?$","main_musinsa_release"],["^/main/musinsa/custom/?$","main_musinsa_custom"],["^/main/beauty/recommend/?$","main_beauty_recommend"],["^/main/beauty/ranking/?$","main_beauty_ranking"],["^/main/beauty/sale/?$","main_beauty_sale"],["^/main/beauty/brand/?$","main_beauty_brand"],["^/main/beauty/release/?$","main_beauty_release"],["^/main/beauty/custom/?$","main_beauty_custom"],["^/main/player/recommend/?$","main_player_recommend"],["^/main/player/ranking/?$","main_player_ranking"],["^/main/player/sale/?$","main_player_sale"],["^/main/player/brand/?$","main_player_brand"],["^/main/player/release/?$","main_player_release"],["^/main/player/custom/?$","main_player_custom"],["^/main/outlet/recommend/?$","main_outlet_recommend"],["^/main/outlet/ranking/?$","main_outlet_ranking"],["^/main/outlet/sale/?$","main_outlet_sale"],["^/main/outlet/brand/?$","main_outlet_brand"],["^/main/outlet/release/?$","main_outlet_release"],["^/main/outlet/custom/?$","main_outlet_custom"],["^/main/boutique/recommend/?$","main_boutique_recommend"],["^/main/boutique/ranking/?$","main_boutique_ranking"],["^/main/boutique/sale/?$","main_boutique_sale"],["^/main/boutique/brand/?$","main_boutique_brand"],["^/main/boutique/release/?$","main_boutique_release"],["^/main/boutique/custom/?$","main_boutique_custom"],["^/main/sneaker/recommend/?$","main_sneaker_recommend"],["^/main/sneaker/ranking/?$","main_sneaker_ranking"],["^/main/sneaker/sale/?$","main_sneaker_sale"],["^/main/sneaker/brand/?$","main_sneaker_brand"],["^/main/sneaker/release/?$","main_sneaker_release"],["^/main/sneaker/custom/?$","main_sneaker_custom"],["^/main/kids/recommend/?$","main_kids_recommend"],["^/main/kids/ranking/?$","main_kids_ranking"],["^/main/kids/sale/?$","main_kids_sale"],["^/main/kids/brand/?$","main_kids_brand"],["^/main/kids/release/?$","main_kids_release"],["^/main/kids/custom/?$","main_kids_custom"],["^/gateway/?$","gateway"],["^/category/(?<categoryCode>[0-9a-zA-Z]*)/?$","category"],["^/release/view/(?<contentId>[0-9a-zA-Z]*)/?$","release_view"],["^/ranking/archive/?$","ranking_archive"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/snap/codishop/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/snap/snap/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/snap/tag/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/snap/codimap/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/lookbook/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/plan/(?<id>[0-9a-zA-Z]*)/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/contents/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/review/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/products/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/best/?$","brandshop"],["^/brand/(?<brandId>[0-9a-zA-Z]*)/new/?$","brandshop"],["^/search/goods/?$","search_results_goods"],["^/search/snap/?$","search_results_snap"],["^/search/benefit/?$","search_results_benefit"],["^/search/lookbook/?$","search_results_lookbook"],["^/search/contents/?$","search_results_contents"],["^/search/release/?$","search_results_release"],["^/products/(?<productId>[0-9a-zA-Z]*)/?$","detail"],["^/review/boosting/?$","review_boosting"],["^/review/image-gallery/(?<goodsNo>[0-9a-zA-Z]*)/?$","review_gallery"],["^/review/goods/(?<goodsNo>[0-9a-zA-Z]*)/?$","review_goods"],["^/review/(?<reviewNo>[0-9a-zA-Z]*)/?$","review_detail"],["^/review/user/(?<userHashId>[0-9a-zA-Z]*)/?$","review_user"],["^/mypage/myreview/?$","myreview"],["^/mypage/myreview/write/(?<reviewType>[0-9a-zA-Z]*)/(?<orderOptionNo>[0-9a-zA-Z]*)/?$","review_write"],["^/mypage/myreview/edit/(?<reviewNo>[0-9a-zA-Z]*)/?$","review_edit"],["^/mypage/myreview/done/(?<reviewNo>[0-9a-zA-Z]*)/?$","review_write_done"],["^/review/history/(?<reviewNo>[0-9a-zA-Z]*)/?$","donereview_detail"],["^/recommend/comeback/?$","recommend_comeback"],["^/recommend/explicit/?$","recommend_explicit"],["^/recommend/personal/?$","recommend_personal"],["^/recommend/similar/?$","recommend_similar"],["^/recommend/attribute/?$","recommend_attribute"],["^/recommend/together/?$","recommend_together"],["^/mypage/?$","mypage"],["^/notification/?$","message_newsfeed"],["^/mypage/myinfo/notice/?$","mypage_setting_notice"],["^/recently-viewed/?$","recentlyviewed"],["^/mypage/savings/?$","mypage_savings"],["^/mypage/leave/?$","leave"],["^/mypage/mybrand/?$","mypage_mybrand"],["^/promotion/creatormarketplace/creator/?$","creatormarketplace_creator"],["^/promotion/creatormarketplace/campaign/?$","creatormarketplace_campaign"],["^/promotion/creatormarketplace/campaign/create/?$","creatormarketplace_campaigncreate"],["^/promotion/creatormarketplace/campaign/(?<campaignId>[0-9a-zA-Z]*)/?$","creatormarketplace_campaigninfo"],["^/promotion/creatormarketplace/campaign/(?<campaignId>[0-9a-zA-Z]*)/creatorsearch/?$","creatormarketplace_offer"],["^/promotion/creatormarketplace/campaign/(?<campaignId>[0-9a-zA-Z]*)/result/?$","creatormarketplace_result"],["^/creatormarketplace/apply/?$","creatormarketplace_creator_apply"],["^/creatormarketplace/apply/join/?$","creatormarketplace_creator_apply"],["^/creatormarketplace/apply/complete/?$","creatormarketplace_creator_apply"],["^/creatormarketplace/mycampaign/proposed/?$","creatormarketplace_creator_mycampaign"],["^/creatormarketplace/mycampaign/apply/?$","creatormarketplace_creator_mycampaign"],["^/creatormarketplace/mycampaign/detail/(?<campaignId>[0-9a-zA-Z]*)/?$","creatormarketplace_campaigndetail"],["^/creatormarketplace/mycampaign/proposed/detail/(?<campaignId>[0-9a-zA-Z]*)/?$","creatormarketplace_campaigndetail"],["^/creatormarketplace/mycampaign/apply/detail/(?<campaignId>[0-9a-zA-Z]*)/?$","creatormarketplace_campaigndetail"],["^/creatormarketplace/recruitment/detail/(?<campaignId>[0-9a-zA-Z]*)/?$","creatormarketplace_recruitment_campaigndetail"],["^/creatormarketplace/mypage/?$","creatormarketplace_creator_my"],["^/offline/?$","offline"],["^/offline/(?<shopId>[0-9a-zA-Z]*)/?$","offline"],["^/order/claim/order-cancel/complete/(?<orderNo>[0-9a-zA-Z]*)/?$","order_claim_cancel_complete"],["^/order/claim/order-cancel/(?<orderNo>[0-9a-zA-Z]*)/(?<orderOptionNo>[0-9a-zA-Z]*)/?$","order_claim_cancel"],["^/order/claim/return/complete/(?<returnMasterNo>[0-9a-zA-Z]*)/?$","order_claim_return_complete"],["^/order/claim/return/(?<orderNo>[0-9a-zA-Z]*)/(?<orderOptionNo>[0-9a-zA-Z]*)/?$","order_claim_return"],["^/order/claim/exchange/complete/(?<returnMasterNo>[0-9a-zA-Z]*)/?$","order_claim_exchange_complete"],["^/order/claim/exchange/(?<orderNo>[0-9a-zA-Z]*)/(?<orderOptionNo>[0-9a-zA-Z]*)/?$","order_claim_exchange"]]}');function ownKeys(r,t){var a=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),a.push.apply(a,o)}return a}function _objectSpread(r){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(a),!0).forEach((function(t){screenHelper_defineProperty(r,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(a)):ownKeys(Object(a)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(a,t))}))}return r}function screenHelper_defineProperty(r,t,a){return t in r?Object.defineProperty(r,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[t]=a,r}function _createForOfIteratorHelper(r,t){var a="undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!a){if(Array.isArray(r)||(a=screenHelper_unsupportedIterableToArray(r))||t&&r&&"number"===typeof r.length){a&&(r=a);var o=0,i=function F(){};return{s:i,n:function n(){return o>=r.length?{done:!0}:{done:!1,value:r[o++]}},e:function e(r){throw r},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var c,l=!0,p=!1;return{s:function s(){a=a.call(r)},n:function n(){var r=a.next();return l=r.done,r},e:function e(r){p=!0,c=r},f:function f(){try{l||null==a.return||a.return()}finally{if(p)throw c}}}}function _slicedToArray(r,t){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,t){var a=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null==a)return;var o,i,c=[],l=!0,p=!1;try{for(a=a.call(r);!(l=(o=a.next()).done)&&(c.push(o.value),!t||c.length!==t);l=!0);}catch(r){p=!0,i=r}finally{try{l||null==a.return||a.return()}finally{if(p)throw i}}return c}(r,t)||screenHelper_unsupportedIterableToArray(r,t)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function screenHelper_unsupportedIterableToArray(r,t){if(r){if("string"===typeof r)return screenHelper_arrayLikeToArray(r,t);var a=Object.prototype.toString.call(r).slice(8,-1);return"Object"===a&&r.constructor&&(a=r.constructor.name),"Map"===a||"Set"===a?Array.from(r):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?screenHelper_arrayLikeToArray(r,t):void 0}}function screenHelper_arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var a=0,o=new Array(t);a<t;a++)o[a]=r[a];return o}const y=function getScreenName(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.location.href,t="none";try{for(var a=new URL(r),o=a.pathname,i=a.searchParams,c=h.F,l=0;l<c.length;l++){var p=_slicedToArray(c[l],2),u=p[0],d=void 0===u?"":u,m=p[1],_=void 0===m?"":m,v=new RegExp(d).exec(decodeURIComponent(o));if(v){t={name:"screen_".concat(_)},(null===v||void 0===v?void 0:v.groups)&&(t.groups=v.groups);var y,g=_createForOfIteratorHelper(i);try{for(g.s();!(y=g.n()).done;){var b=_slicedToArray(y.value,2),w=b[0],$=b[1];t.params=_objectSpread(_objectSpread({},t.params),{},screenHelper_defineProperty({},w,$))}}catch(r){g.e(r)}finally{g.f()}break}}}catch(r){console.warn(r)}return t};a(4723);var g=function setCookie(r,t,a){var o=new Date;o.setDate(o.getDate()+parseInt(a)),document.cookie="".concat(r,"=").concat(escape(t),"; expires=").concat(o.toUTCString(),"; path=/; domain=.musinsa.com")},b=function getCookie(r){var t;return(null===(t=document.cookie.match("(^|;) ?"+r+"=([^;]*)(;|$)"))||void 0===t?void 0:t[2])||null},w=(a(9600),a(5306),function getMeta(r){var t,a;return(null===(t=document.querySelector("meta[property='".concat(r,"']")))||void 0===t||null===(a=t.getAttribute)||void 0===a?void 0:a.call(t,"content"))||""}),$=function snsActionGetTitle(){var r;return w("og:title")||(null===(r=document.querySelector("title"))||void 0===r?void 0:r.textContent)||"\ubb34\uc2e0\uc0ac \uc2a4\ud1a0\uc5b4"},A=function snsActionGetImageUrl(){return w("og:image")||"//image.msscdn.net/mfile_s01/fb/share_musinsa.png"},k=function getAbsURL(r,t){return r.indexOf("//")<0?["image"===t?[location.protocol,"image.msscdn.net"].join("//"):location.origin,r.replace(/^\/+/,"")].join("/"):/^http(s?):\/\//.test(r)?r:[location.protocol,r].join("")},I=function getExpires(r){var t=/(\d{4})(\d{2})(\d{2})(\d{2})/.exec(r);return new Date(+t[1],+t[2]-1,+t[3],+t[4],0,0).getTime()};const S={getOpenGraphInfo:function getOpenGraphInfo(){var r,t,a,o=w("product:price:amount"),i=!!o;return{type:i?"product":"default",title:$(),image:A(),url:window.AppInterface.commonSnsActionGetUrl(),description:w("og:description"),brand:i?w("product:brand"):"",currency:i?w("product:price:currency"):"",price:o,normal_price:i?w("product:price:normal_price"):"",sale_rate:i?w("product:price:sale_rate"):"",show_share_button_yn:null!==(r=window.commonLayout)&&void 0!==r&&null!==(t=r.shareOptions)&&void 0!==t&&null!==(a=t.setBottomMenu)&&void 0!==a&&a.isShowShareButton?"Y":"N",send_share_analytics_yn:w("og:send_share_analytics_yn")||"N",isNeedShortLink:"false"!==w("og:need_short_link")}},changeGlobalFilterType:function changeGlobalFilterType(r){var t=r.gf;_AppInfo.validateGf(t),g("_gf",t,365),_AppInfo.setGf(t),window.AppInterface.reloadForChangeFilterType()},sendCurrentGlobalFilterType:function sendCurrentGlobalFilterType(r){var t=r.currentGf;""===_AppInfo.getGf()?window.dispatchEvent(new CustomEvent("appWebLoad")):_AppInfo.getGf()!==t?(g("_gf",t,365),_AppInfo.setGf(t),window.AppInterface.reloadForChangeFilterType()):(window.AppInterface.eventBanner(),window.dispatchEvent(new CustomEvent("appWebLoad")))},sendDeviceNotification:function sendDeviceNotification(r){var t=r.status;window.dispatchEvent(new CustomEvent("sendDeviceNotification",{detail:{status:t}}))},sendAppsFlyerClientData:function sendAppsFlyerClientData(r){var t=r.clientData;window.dispatchEvent(new CustomEvent("sendAppsFlyerClientData",{detail:JSON.parse(t)}))},sendAmplitudeVariant:function sendAmplitudeVariant(r){var t=r.key,a=r.value,o=r.payload,i=o?JSON.parse(o):null;window.dispatchEvent(new CustomEvent("sendAmplitudeVariant",{detail:{key:t,value:a,payload:i}}))},uploadMyPhoneNumbers:function uploadMyPhoneNumbers(r){var t=r.phoneInfo;window.dispatchEvent(new CustomEvent("uploadMyPhoneNumbers",{detail:JSON.parse(t)}))},didPressSendMessageButton:function didPressSendMessageButton(){window.dispatchEvent(new CustomEvent("didPressSendMessageButton"))}};const x={getOpenGraphInfo:function getOpenGraphInfo(){return AppInterface.callWeb({name:"getOpenGraphInfo"})},changeGlobalFilterType:function changeGlobalFilterType(r){u("changeGlobalFilterType",(function(){AppInterface.callWeb({name:"changeGlobalFilterType",param:{gf:r}})}),Object.values(arguments))},sendCurrentGlobalFilterType:function sendCurrentGlobalFilterType(r){u("sendCurrentGlobalFilterType",(function(){AppInterface.callWeb({name:"sendCurrentGlobalFilterType",param:{currentGf:r}})}),Object.values(arguments))},sendDeviceNotification:function sendDeviceNotification(r){return AppInterface.callWeb({name:"sendDeviceNotification",param:{status:r}})},sendAppsFlyerClientData:function sendAppsFlyerClientData(r){return AppInterface.callWeb({name:"sendAppsFlyerClientData",param:{clientData:r}})},sendAmplitudeVariant:function sendAmplitudeVariant(r,t,a){return AppInterface.callWeb({name:"sendAmplitudeVariant",param:{key:r,value:t,payload:a}})},uploadMyPhoneNumbers:function uploadMyPhoneNumbers(r){return AppInterface.callWeb({name:"uploadMyPhoneNumbers",param:{phoneInfo:r}})},didPressSendMessageButton:function didPressSendMessageButton(){AppInterface.callWeb({name:"didPressSendMessageButton"})}};a(3123),a(9653);function appInfo_slicedToArray(r,t){return function appInfo_arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function appInfo_iterableToArrayLimit(r,t){var a=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null==a)return;var o,i,c=[],l=!0,p=!1;try{for(a=a.call(r);!(l=(o=a.next()).done)&&(c.push(o.value),!t||c.length!==t);l=!0);}catch(r){p=!0,i=r}finally{try{l||null==a.return||a.return()}finally{if(p)throw i}}return c}(r,t)||function appInfo_unsupportedIterableToArray(r,t){if(!r)return;if("string"===typeof r)return appInfo_arrayLikeToArray(r,t);var a=Object.prototype.toString.call(r).slice(8,-1);"Object"===a&&r.constructor&&(a=r.constructor.name);if("Map"===a||"Set"===a)return Array.from(r);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return appInfo_arrayLikeToArray(r,t)}(r,t)||function appInfo_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function appInfo_arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var a=0,o=new Array(t);a<t;a++)o[a]=r[a];return o}function _defineProperties(r,t){for(var a=0;a<t.length;a++){var o=t[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(r,o.key,o)}}function appInfo_defineProperty(r,t,a){return t in r?Object.defineProperty(r,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[t]=a,r}const O=function(){function AppInfo(){!function _classCallCheck(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,AppInfo),appInfo_defineProperty(this,"_isApp",!1),appInfo_defineProperty(this,"_os",""),appInfo_defineProperty(this,"_version",""),appInfo_defineProperty(this,"_validGfs",["A","F","M"]),appInfo_defineProperty(this,"_gf",""),"undefined"===typeof window.THIS_PAGE_GF&&(window.THIS_PAGE_GF=""),this.setGf(THIS_PAGE_GF||b("_gf"));var r=navigator.userAgent.toLowerCase(),t=r.indexOf(";app_ver=");if(this._isApp=t>=0,this._isApp){var a=appInfo_slicedToArray(r.substr(t+9,r.length-t).split(";")[0].split(" "),2),o=a[0],i=a[1];this._os=o,this._version=i}}return function _createClass(r,t,a){return t&&_defineProperties(r.prototype,t),a&&_defineProperties(r,a),r}(AppInfo,[{key:"setGf",value:function setGf(r){this._gf=this.isValidGf(r)?r:""}},{key:"getGf",value:function getGf(){return this._gf}},{key:"isValidGf",value:function isValidGf(r){return this._validGfs.indexOf(r)>=0}},{key:"validateGf",value:function validateGf(r){if(!this.isValidGf(r))throw["'",r,"'"," is invalid value for GlobalFilter"].join("")}},{key:"versionCompare",value:function versionCompare(r,t,a){var o=a&&a.lexicographical,i=a&&a.zeroExtend,c=r.split("."),l=t.split(".");function isValidPart(r){return(o?/^\d+[A-Za-z]*$/:/^\d+$/).test(r)}if(!c.every(isValidPart)||!l.every(isValidPart))return NaN;if(i){for(;c.length<l.length;)c.push("0");for(;l.length<c.length;)l.push("0")}o||(c=c.map(Number),l=l.map(Number));for(var p=0;p<c.length;++p){if(l.length===p)return 1;if(c[p]!==l[p])return c[p]>l[p]?1:-1}return c.length!==l.length?-1:0}},{key:"UpperVersion",value:function UpperVersion(r){return this.versionCompare(this._version,r)>=0}},{key:"LowerVersion",value:function LowerVersion(r){return this.versionCompare(this._version,r)<0}}]),AppInfo}();a(3210),a(4765);const E={setEventBanner:function setEventBanner(r){var t=r.idx,a=r.linkURL,o=r.imageURL,i=r.subject,c=r.content,l=r.expires,p=r.visible;this.eventBannerData={idx:t?String(t):"",linkURL:a?k(a).trim():"",imageURL:o?k(o).trim():"",subject:i||"",content:c||"",expires:I(l)||0,visible:"Y"===p}},getEventBanner:function getEventBanner(){var r=this.eventBannerData?this.eventBannerData.idx:"";return r&&r==b("musinsa_event_banner_".concat(r))&&this.clearEventBanner(),this.eventBannerData||{idx:"",linkURL:"",imageURL:"",subject:"",content:"",expires:0,visible:!1}},clearEventBanner:function clearEventBanner(){this.eventBannerData={idx:"",linkURL:"",imageURL:"",subject:"",content:"",expires:"",visible:this.eventBannerData.visible||"N"}},reloadForChangeFilterType:function reloadForChangeFilterType(r){var t=r.withAppLoadingStartEvent;this.isReloadWorking||(this.isReloadWorking=!0,t&&window.AppInterface.sendTransitionGlobalFilterView(),window.scrollTo({top:0}),window.location.reload())},checkReloadForGlobalFilter:function checkReloadForGlobalFilter(){var r=_AppInfo.getGf();""!==r&&(AppInterface.callUtils({name:"isIOS"})||r===b("_gf")||window.AppInterface.reloadForChangeFilterType())},isIOS:function isIOS(){var r,t;return!(null===(r=window.webkit)||void 0===r||null===(t=r.messageHandlers)||void 0===t||!t.MusinsaAppInterface)},isAndroid:function isAndroid(){return!!window.MusinsaAppInterface},commonSnsActionGetUrl:function commonSnsActionGetUrl(){return w("og:url")||document.location.href},removeGfParameter:function removeGfParameter(){var r=function replaceQueryParam(r,t,a){var o=new RegExp("([?;&])(".concat(r,"=)([^&;]*)"));return null===a.match(o)?a:a.replace(o,(function(r,a,o){return t?[a,o,t].join(""):""})).replace(/^\&/,"?")}("_gf","",window.location.search);window.location.search!==r&&(""===r&&(r=window.location.pathname),history.replaceState(null,"",r+window.location.hash))},openWebview:function openWebview(r){var t=r.ev||window.event;"android"===window._AppInfo._os&&"_blank"!==t.currentTarget.getAttribute("target")&&t.currentTarget.setAttribute("target","_blank")}};const j={eventBannerData:null,isReloadWorking:!1,setEventBanner:function setEventBanner(r,t,a,o,i,c,l){u("setEventBanner",(function(r,t,a,o,i,c,l){window.AppInterface.callUtils({name:"setEventBanner",param:{idx:r,linkURL:t,imageURL:a,subject:o,content:i,expires:c,visible:l}})}),Object.values(arguments))},getEventBanner:function getEventBanner(){return u("getEventBanner",(function(){return window.AppInterface.callUtils({name:"getEventBanner"})}),Object.values(arguments))},clearEventBanner:function clearEventBanner(){u("clearEventBanner",(function(){window.AppInterface.callUtils({name:"clearEventBanner"})}),Object.values(arguments))},reloadForChangeFilterType:function reloadForChangeFilterType(r){u("reloadForChangeFilterType",(function(){window.AppInterface.callUtils({name:"reloadForChangeFilterType",param:{withAppLoadingStartEvent:r}})}),Object.values(arguments))},checkReloadForGlobalFilter:function checkReloadForGlobalFilter(){window.AppInterface.callUtils({name:"checkReloadForGlobalFilter"})},isIOS:function isIOS(){return window.AppInterface.callUtils({name:"isIOS"})},isAndroid:function isAndroid(){return window.AppInterface.callUtils({name:"isAndroid"})},commonSnsActionGetUrl:function commonSnsActionGetUrl(){return u("commonSnsActionGetUrl",(function(){return window.AppInterface.callUtils({name:"commonSnsActionGetUrl"})}),Object.values(arguments))}};a(6755);const P=function throwError(r){throw new Error(r)};function amplitude_ownKeys(r,t){var a=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),a.push.apply(a,o)}return a}function amplitude_objectSpread(r){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?amplitude_ownKeys(Object(a),!0).forEach((function(t){amplitude_defineProperty(r,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(a)):amplitude_ownKeys(Object(a)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(a,t))}))}return r}function amplitude_toConsumableArray(r){return function amplitude_arrayWithoutHoles(r){if(Array.isArray(r))return amplitude_arrayLikeToArray(r)}(r)||function amplitude_iterableToArray(r){if("undefined"!==typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||amplitude_unsupportedIterableToArray(r)||function amplitude_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function amplitude_slicedToArray(r,t){return function amplitude_arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function amplitude_iterableToArrayLimit(r,t){var a=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null==a)return;var o,i,c=[],l=!0,p=!1;try{for(a=a.call(r);!(l=(o=a.next()).done)&&(c.push(o.value),!t||c.length!==t);l=!0);}catch(r){p=!0,i=r}finally{try{l||null==a.return||a.return()}finally{if(p)throw i}}return c}(r,t)||amplitude_unsupportedIterableToArray(r,t)||function amplitude_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function amplitude_unsupportedIterableToArray(r,t){if(r){if("string"===typeof r)return amplitude_arrayLikeToArray(r,t);var a=Object.prototype.toString.call(r).slice(8,-1);return"Object"===a&&r.constructor&&(a=r.constructor.name),"Map"===a||"Set"===a?Array.from(r):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?amplitude_arrayLikeToArray(r,t):void 0}}function amplitude_arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var a=0,o=new Array(t);a<t;a++)o[a]=r[a];return o}function amplitude_defineProperties(r,t){for(var a=0;a<t.length;a++){var o=t[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(r,o.key,o)}}function amplitude_defineProperty(r,t,a){return t in r?Object.defineProperty(r,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[t]=a,r}var T,R=function(){function Amplitude(){var r=this;!function amplitude_classCallCheck(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,Amplitude),amplitude_defineProperty(this,"PREFIX","data-amp"),amplitude_defineProperty(this,"mutationConfig",{subtree:!0,childList:!0,attributes:!0}),amplitude_defineProperty(this,"sendClickEvent",(function(t){var a,o=t.currentTarget,i=o.dataset,c=i.ampEventType,l=i.ampEventName,p=i.ampProperties;try{a=JSON.parse(p||"{}")}catch(t){P('Failed to parse attribute.("'.concat(r.PREFIX,'-properties")\n').concat(t))}if(!a.from){var u=window.AppInterface.getScreenName();(null===u||void 0===u?void 0:u.name)&&(a.from=u.name)}var d=o.tagName,m=o.href;if(!a.to&&"A"===d&&!new URL(m).pathname.startsWith("#")){var _=window.AppInterface.getScreenName(m);(null===_||void 0===_?void 0:_.name)&&(a.to=_.name)}r.sendEvent(c,l,a)}))}return function amplitude_createClass(r,t,a){return t&&amplitude_defineProperties(r.prototype,t),a&&amplitude_defineProperties(r,a),r}(Amplitude,[{key:"init",value:function init(){this.bindClickEvent(),this.bindMutationObserver()}},{key:"bindMutationObserver",value:function bindMutationObserver(){new MutationObserver(this.cbMutation.bind(this)).observe(document.body,this.mutationConfig)}},{key:"cbMutation",value:function cbMutation(r){var t=this,a=amplitude_slicedToArray(r,1)[0],o=a.addedNodes,i=a.type,c=a.target;switch(i){case"childList":amplitude_toConsumableArray(o).forEach((function(r){r instanceof HTMLElement&&!r.dataset.ampEventType||t.bindClickEvent(r)}));break;case"attributes":var l=c.dataset,p=l.ampEventType,u=l.ampDirty;if(c instanceof HTMLElement&&!p||"true"===u)return;this.bindClickEvent(c)}}},{key:"bindClickEvent",value:function bindClickEvent(r){var t=this,a=r instanceof HTMLElement?[r]:document.body.querySelectorAll("[".concat(this.PREFIX,'-event-type*="click"]'));(a||a.length)&&amplitude_toConsumableArray(a).forEach((function(r){r.removeEventListener("click",t.sendClickEvent),r.addEventListener("click",t.sendClickEvent),r.dataset.ampDirty="true"}))}},{key:"getDataset",value:function getDataset(r){var t=this;return amplitude_toConsumableArray(r.attributes).reduce((function(r,a){var o=a.name,i=a.value;return o.startsWith(t.PREFIX)?amplitude_objectSpread(amplitude_objectSpread({},r),{},amplitude_defineProperty({},o.replace("".concat(t.PREFIX,"-"),"").replace(/-/g,"_"),i)):r}),{})}},{key:"sendEvent",value:function sendEvent(r,t,a){r.includes("click")&&window.AppInterface.sendEvent(t,a)}}]),Amplitude}(),C="gf",q="_gf",L={A:"A",M:"M",F:"F"},N=function setGender(r){!function setCookieToUnderBarGlobalFilterGf(r){g(q,r,365)}(r),function setAppInfoGf(r){_AppInfo.validateGf(r),_AppInfo.setGf(r)}(r)},U=function setInvalidGlobalFilterToGenderValue(r){return function isInvalidGender(r){return r in L}(r)?r:"A"};function syncGenderQueryToCookie(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:location.search,t=function getGf(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:location.search,t=new URLSearchParams(r);if(t.has(C))return t.get(C)}(r),a=new URLSearchParams(r),o=function getQueryUnderBarGlobalFilterGf(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:location.search,t=new URLSearchParams(r);if(t.has(q))return t.get(q)}(r),i=b(q),c=L.A;o?(c=U(o),a.delete(q)):t?c=U(t):i&&i!==a.get(C)&&(c=U(i)),a.set(C,c),N(c),history.replaceState(null,"","?".concat(a.toString()))}function js_ownKeys(r,t){var a=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),a.push.apply(a,o)}return a}function js_objectSpread(r){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?js_ownKeys(Object(a),!0).forEach((function(t){js_defineProperty(r,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(a)):js_ownKeys(Object(a)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(a,t))}))}return r}function js_defineProperty(r,t,a){return t in r?Object.defineProperty(r,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[t]=a,r}window.AppInterface=m(null!==(T=window.AppInterface)&&void 0!==T?T:{},js_objectSpread(js_objectSpread(js_objectSpread({},d),x),j)),window.AppInterface.callApp=function(){var r=function _callApp(r){var t=m(p.default,p[r.name]),a=t.validation,o=t.beforeCallback,i=t.android,l=t.ios,u=t.notMobile,d=t.isStringify;if(!v.call(this,r,a)){var h=_.call(this,r,o,d);return c({android:i,ios:l,notMobile:u},h)}};return function callApp(t){if(!p[t.name])throw"".concat(t.name," is undefined.");return r.call(this,t)}}(),window.AppInterface.callWeb=function callWeb(r){var t;if(!S[r.name])throw"".concat(r.name," is undefined.");return S[r.name].call(this,null!==(t=r.param)&&void 0!==t?t:{})},window.AppInterface.callUtils=function callUtils(r){var t;if(!E[r.name])throw"".concat(r.name," is undefined.");return E[r.name].call(this,null!==(t=r.param)&&void 0!==t?t:{})},window._AppInfo=new O,function(){var r,t,a,o;null!==(r=window)&&void 0!==r&&null!==(t=r.__MSS_FE__)&&void 0!==t&&null!==(a=t.config)&&void 0!==a&&null!==(o=a.gender)&&void 0!==o&&o.syncQueryToCookie?syncGenderQueryToCookie():(AppInterface.callUtils({name:"removeGfParameter"}),AppInterface.callUtils({name:"checkReloadForGlobalFilter"}))}(),window.AppInterface.openWebview=function(r){AppInterface.callUtils({name:"openWebview",param:{ev:r}})},window.AppInterface.getScreenName=y;var z=new R;window.addEventListener("DOMContentLoaded",(function(){z.init()}))},9662:(r,t,a)=>{var o=a(614),i=a(6330);r.exports=function(r){if(o(r))return r;throw TypeError(i(r)+" is not a function")}},9483:(r,t,a)=>{var o=a(4411),i=a(6330);r.exports=function(r){if(o(r))return r;throw TypeError(i(r)+" is not a constructor")}},6077:(r,t,a)=>{var o=a(614);r.exports=function(r){if("object"===typeof r||o(r))return r;throw TypeError("Can't set "+String(r)+" as a prototype")}},1223:(r,t,a)=>{var o=a(5112),i=a(30),c=a(3070),l=o("unscopables"),p=Array.prototype;void 0==p[l]&&c.f(p,l,{configurable:!0,value:i(null)}),r.exports=function(r){p[l][r]=!0}},1530:(r,t,a)=>{"use strict";var o=a(8710).charAt;r.exports=function(r,t,a){return t+(a?o(r,t).length:1)}},5787:r=>{r.exports=function(r,t,a){if(r instanceof t)return r;throw TypeError("Incorrect "+(a?a+" ":"")+"invocation")}},9670:(r,t,a)=>{var o=a(111);r.exports=function(r){if(o(r))return r;throw TypeError(String(r)+" is not an object")}},8533:(r,t,a)=>{"use strict";var o=a(2092).forEach,i=a(9341)("forEach");r.exports=i?[].forEach:function forEach(r){return o(this,r,arguments.length>1?arguments[1]:void 0)}},8457:(r,t,a)=>{"use strict";var o=a(9974),i=a(7908),c=a(3411),l=a(7659),p=a(4411),u=a(6244),d=a(6135),m=a(8554),_=a(1246);r.exports=function from(r){var t=i(r),a=p(this),v=arguments.length,h=v>1?arguments[1]:void 0,y=void 0!==h;y&&(h=o(h,v>2?arguments[2]:void 0,2));var g,b,w,$,A,k,I=_(t),S=0;if(!I||this==Array&&l(I))for(g=u(t),b=a?new this(g):Array(g);g>S;S++)k=y?h(t[S],S):t[S],d(b,S,k);else for(A=($=m(t,I)).next,b=a?new this:[];!(w=A.call($)).done;S++)k=y?c($,h,[w.value,S],!0):w.value,d(b,S,k);return b.length=S,b}},1318:(r,t,a)=>{var o=a(5656),i=a(1400),c=a(6244),createMethod=function(r){return function(t,a,l){var p,u=o(t),d=c(u),m=i(l,d);if(r&&a!=a){for(;d>m;)if((p=u[m++])!=p)return!0}else for(;d>m;m++)if((r||m in u)&&u[m]===a)return r||m||0;return!r&&-1}};r.exports={includes:createMethod(!0),indexOf:createMethod(!1)}},2092:(r,t,a)=>{var o=a(9974),i=a(8361),c=a(7908),l=a(6244),p=a(5417),u=[].push,createMethod=function(r){var t=1==r,a=2==r,d=3==r,m=4==r,_=6==r,v=7==r,h=5==r||_;return function(y,g,b,w){for(var $,A,k=c(y),I=i(k),S=o(g,b,3),x=l(I),O=0,E=w||p,j=t?E(y,x):a||v?E(y,0):void 0;x>O;O++)if((h||O in I)&&(A=S($=I[O],O,k),r))if(t)j[O]=A;else if(A)switch(r){case 3:return!0;case 5:return $;case 6:return O;case 2:u.call(j,$)}else switch(r){case 4:return!1;case 7:u.call(j,$)}return _?-1:d||m?m:j}};r.exports={forEach:createMethod(0),map:createMethod(1),filter:createMethod(2),some:createMethod(3),every:createMethod(4),find:createMethod(5),findIndex:createMethod(6),filterReject:createMethod(7)}},1194:(r,t,a)=>{var o=a(7293),i=a(5112),c=a(7392),l=i("species");r.exports=function(r){return c>=51||!o((function(){var t=[];return(t.constructor={})[l]=function(){return{foo:1}},1!==t[r](Boolean).foo}))}},9341:(r,t,a)=>{"use strict";var o=a(7293);r.exports=function(r,t){var a=[][r];return!!a&&o((function(){a.call(null,t||function(){throw 1},1)}))}},7475:(r,t,a)=>{var o=a(3157),i=a(4411),c=a(111),l=a(5112)("species");r.exports=function(r){var t;return o(r)&&(t=r.constructor,(i(t)&&(t===Array||o(t.prototype))||c(t)&&null===(t=t[l]))&&(t=void 0)),void 0===t?Array:t}},5417:(r,t,a)=>{var o=a(7475);r.exports=function(r,t){return new(o(r))(0===t?0:t)}},3411:(r,t,a)=>{var o=a(9670),i=a(9212);r.exports=function(r,t,a,c){try{return c?t(o(a)[0],a[1]):t(a)}catch(t){i(r,"throw",t)}}},7072:(r,t,a)=>{var o=a(5112)("iterator"),i=!1;try{var c=0,l={next:function(){return{done:!!c++}},return:function(){i=!0}};l[o]=function(){return this},Array.from(l,(function(){throw 2}))}catch(r){}r.exports=function(r,t){if(!t&&!i)return!1;var a=!1;try{var c={};c[o]=function(){return{next:function(){return{done:a=!0}}}},r(c)}catch(r){}return a}},4326:r=>{var t={}.toString;r.exports=function(r){return t.call(r).slice(8,-1)}},648:(r,t,a)=>{var o=a(1694),i=a(614),c=a(4326),l=a(5112)("toStringTag"),p="Arguments"==c(function(){return arguments}());r.exports=o?c:function(r){var t,a,o;return void 0===r?"Undefined":null===r?"Null":"string"==typeof(a=function(r,t){try{return r[t]}catch(r){}}(t=Object(r),l))?a:p?c(t):"Object"==(o=c(t))&&i(t.callee)?"Arguments":o}},9920:(r,t,a)=>{var o=a(2597),i=a(3887),c=a(1236),l=a(3070);r.exports=function(r,t){for(var a=i(t),p=l.f,u=c.f,d=0;d<a.length;d++){var m=a[d];o(r,m)||p(r,m,u(t,m))}}},4964:(r,t,a)=>{var o=a(5112)("match");r.exports=function(r){var t=/./;try{"/./"[r](t)}catch(a){try{return t[o]=!1,"/./"[r](t)}catch(r){}}return!1}},8544:(r,t,a)=>{var o=a(7293);r.exports=!o((function(){function F(){}return F.prototype.constructor=null,Object.getPrototypeOf(new F)!==F.prototype}))},4994:(r,t,a)=>{"use strict";var o=a(3383).IteratorPrototype,i=a(30),c=a(9114),l=a(8003),p=a(7497),returnThis=function(){return this};r.exports=function(r,t,a){var u=t+" Iterator";return r.prototype=i(o,{next:c(1,a)}),l(r,u,!1,!0),p[u]=returnThis,r}},8880:(r,t,a)=>{var o=a(9781),i=a(3070),c=a(9114);r.exports=o?function(r,t,a){return i.f(r,t,c(1,a))}:function(r,t,a){return r[t]=a,r}},9114:r=>{r.exports=function(r,t){return{enumerable:!(1&r),configurable:!(2&r),writable:!(4&r),value:t}}},6135:(r,t,a)=>{"use strict";var o=a(4948),i=a(3070),c=a(9114);r.exports=function(r,t,a){var l=o(t);l in r?i.f(r,l,c(0,a)):r[l]=a}},654:(r,t,a)=>{"use strict";var o=a(2109),i=a(1913),c=a(6530),l=a(614),p=a(4994),u=a(9518),d=a(7674),m=a(8003),_=a(8880),v=a(1320),h=a(5112),y=a(7497),g=a(3383),b=c.PROPER,w=c.CONFIGURABLE,$=g.IteratorPrototype,A=g.BUGGY_SAFARI_ITERATORS,k=h("iterator"),I="keys",S="values",x="entries",returnThis=function(){return this};r.exports=function(r,t,a,c,h,g,O){p(a,t,c);var E,j,P,getIterationMethod=function(r){if(r===h&&L)return L;if(!A&&r in C)return C[r];switch(r){case I:return function keys(){return new a(this,r)};case S:return function values(){return new a(this,r)};case x:return function entries(){return new a(this,r)}}return function(){return new a(this)}},T=t+" Iterator",R=!1,C=r.prototype,q=C[k]||C["@@iterator"]||h&&C[h],L=!A&&q||getIterationMethod(h),N="Array"==t&&C.entries||q;if(N&&(E=u(N.call(new r)))!==Object.prototype&&E.next&&(i||u(E)===$||(d?d(E,$):l(E[k])||v(E,k,returnThis)),m(E,T,!0,!0),i&&(y[T]=returnThis)),b&&h==S&&q&&q.name!==S&&(!i&&w?_(C,"name",S):(R=!0,L=function values(){return q.call(this)})),h)if(j={values:getIterationMethod(S),keys:g?L:getIterationMethod(I),entries:getIterationMethod(x)},O)for(P in j)(A||R||!(P in C))&&v(C,P,j[P]);else o({target:t,proto:!0,forced:A||R},j);return i&&!O||C[k]===L||v(C,k,L,{name:h}),y[t]=L,j}},7235:(r,t,a)=>{var o=a(857),i=a(2597),c=a(6061),l=a(3070).f;r.exports=function(r){var t=o.Symbol||(o.Symbol={});i(t,r)||l(t,r,{value:c.f(r)})}},9781:(r,t,a)=>{var o=a(7293);r.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},317:(r,t,a)=>{var o=a(7854),i=a(111),c=o.document,l=i(c)&&i(c.createElement);r.exports=function(r){return l?c.createElement(r):{}}},8324:r=>{r.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:(r,t,a)=>{var o=a(317)("span").classList,i=o&&o.constructor&&o.constructor.prototype;r.exports=i===Object.prototype?void 0:i},8113:(r,t,a)=>{var o=a(5005);r.exports=o("navigator","userAgent")||""},7392:(r,t,a)=>{var o,i,c=a(7854),l=a(8113),p=c.process,u=c.Deno,d=p&&p.versions||u&&u.version,m=d&&d.v8;m?i=(o=m.split("."))[0]<4?1:o[0]+o[1]:l&&(!(o=l.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=l.match(/Chrome\/(\d+)/))&&(i=o[1]),r.exports=i&&+i},748:r=>{r.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},2109:(r,t,a)=>{var o=a(7854),i=a(1236).f,c=a(8880),l=a(1320),p=a(3505),u=a(9920),d=a(4705);r.exports=function(r,t){var a,m,_,v,h,y=r.target,g=r.global,b=r.stat;if(a=g?o:b?o[y]||p(y,{}):(o[y]||{}).prototype)for(m in t){if(v=t[m],_=r.noTargetGet?(h=i(a,m))&&h.value:a[m],!d(g?m:y+(b?".":"#")+m,r.forced)&&void 0!==_){if(typeof v===typeof _)continue;u(v,_)}(r.sham||_&&_.sham)&&c(v,"sham",!0),l(a,m,v,r)}}},7293:r=>{r.exports=function(r){try{return!!r()}catch(r){return!0}}},7007:(r,t,a)=>{"use strict";a(4916);var o=a(1320),i=a(2261),c=a(7293),l=a(5112),p=a(8880),u=l("species"),d=RegExp.prototype;r.exports=function(r,t,a,m){var _=l(r),v=!c((function(){var t={};return t[_]=function(){return 7},7!=""[r](t)})),h=v&&!c((function(){var t=!1,a=/a/;return"split"===r&&((a={}).constructor={},a.constructor[u]=function(){return a},a.flags="",a[_]=/./[_]),a.exec=function(){return t=!0,null},a[_](""),!t}));if(!v||!h||a){var y=/./[_],g=t(_,""[r],(function(r,t,a,o,c){var l=t.exec;return l===i||l===d.exec?v&&!c?{done:!0,value:y.call(t,a,o)}:{done:!0,value:r.call(a,t,o)}:{done:!1}}));o(String.prototype,r,g[0]),o(d,_,g[1])}m&&p(d[_],"sham",!0)}},9974:(r,t,a)=>{var o=a(9662);r.exports=function(r,t,a){if(o(r),void 0===t)return r;switch(a){case 0:return function(){return r.call(t)};case 1:return function(a){return r.call(t,a)};case 2:return function(a,o){return r.call(t,a,o)};case 3:return function(a,o,i){return r.call(t,a,o,i)}}return function(){return r.apply(t,arguments)}}},6530:(r,t,a)=>{var o=a(9781),i=a(2597),c=Function.prototype,l=o&&Object.getOwnPropertyDescriptor,p=i(c,"name"),u=p&&"something"===function something(){}.name,d=p&&(!o||o&&l(c,"name").configurable);r.exports={EXISTS:p,PROPER:u,CONFIGURABLE:d}},5005:(r,t,a)=>{var o=a(7854),i=a(614);r.exports=function(r,t){return arguments.length<2?(a=o[r],i(a)?a:void 0):o[r]&&o[r][t];var a}},1246:(r,t,a)=>{var o=a(648),i=a(8173),c=a(7497),l=a(5112)("iterator");r.exports=function(r){if(void 0!=r)return i(r,l)||i(r,"@@iterator")||c[o(r)]}},8554:(r,t,a)=>{var o=a(9662),i=a(9670),c=a(1246);r.exports=function(r,t){var a=arguments.length<2?c(r):t;if(o(a))return i(a.call(r));throw TypeError(String(r)+" is not iterable")}},8173:(r,t,a)=>{var o=a(9662);r.exports=function(r,t){var a=r[t];return null==a?void 0:o(a)}},647:(r,t,a)=>{var o=a(7908),i=Math.floor,c="".replace,l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,p=/\$([$&'`]|\d{1,2})/g;r.exports=function(r,t,a,u,d,m){var _=a+r.length,v=u.length,h=p;return void 0!==d&&(d=o(d),h=l),c.call(m,h,(function(o,c){var l;switch(c.charAt(0)){case"$":return"$";case"&":return r;case"`":return t.slice(0,a);case"'":return t.slice(_);case"<":l=d[c.slice(1,-1)];break;default:var p=+c;if(0===p)return o;if(p>v){var m=i(p/10);return 0===m?o:m<=v?void 0===u[m-1]?c.charAt(1):u[m-1]+c.charAt(1):o}l=u[p-1]}return void 0===l?"":l}))}},7854:r=>{var check=function(r){return r&&r.Math==Math&&r};r.exports=check("object"==typeof globalThis&&globalThis)||check("object"==typeof window&&window)||check("object"==typeof self&&self)||check("object"==typeof global&&global)||function(){return this}()||Function("return this")()},2597:(r,t,a)=>{var o=a(7908),i={}.hasOwnProperty;r.exports=Object.hasOwn||function hasOwn(r,t){return i.call(o(r),t)}},3501:r=>{r.exports={}},490:(r,t,a)=>{var o=a(5005);r.exports=o("document","documentElement")},4664:(r,t,a)=>{var o=a(9781),i=a(7293),c=a(317);r.exports=!o&&!i((function(){return 7!=Object.defineProperty(c("div"),"a",{get:function(){return 7}}).a}))},8361:(r,t,a)=>{var o=a(7293),i=a(4326),c="".split;r.exports=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(r){return"String"==i(r)?c.call(r,""):Object(r)}:Object},9587:(r,t,a)=>{var o=a(614),i=a(111),c=a(7674);r.exports=function(r,t,a){var l,p;return c&&o(l=t.constructor)&&l!==a&&i(p=l.prototype)&&p!==a.prototype&&c(r,p),r}},2788:(r,t,a)=>{var o=a(614),i=a(5465),c=Function.toString;o(i.inspectSource)||(i.inspectSource=function(r){return c.call(r)}),r.exports=i.inspectSource},9909:(r,t,a)=>{var o,i,c,l=a(8536),p=a(7854),u=a(111),d=a(8880),m=a(2597),_=a(5465),v=a(6200),h=a(3501),y="Object already initialized",g=p.WeakMap;if(l||_.state){var b=_.state||(_.state=new g),w=b.get,$=b.has,A=b.set;o=function(r,t){if($.call(b,r))throw new TypeError(y);return t.facade=r,A.call(b,r,t),t},i=function(r){return w.call(b,r)||{}},c=function(r){return $.call(b,r)}}else{var k=v("state");h[k]=!0,o=function(r,t){if(m(r,k))throw new TypeError(y);return t.facade=r,d(r,k,t),t},i=function(r){return m(r,k)?r[k]:{}},c=function(r){return m(r,k)}}r.exports={set:o,get:i,has:c,enforce:function(r){return c(r)?i(r):o(r,{})},getterFor:function(r){return function(t){var a;if(!u(t)||(a=i(t)).type!==r)throw TypeError("Incompatible receiver, "+r+" required");return a}}}},7659:(r,t,a)=>{var o=a(5112),i=a(7497),c=o("iterator"),l=Array.prototype;r.exports=function(r){return void 0!==r&&(i.Array===r||l[c]===r)}},3157:(r,t,a)=>{var o=a(4326);r.exports=Array.isArray||function isArray(r){return"Array"==o(r)}},614:r=>{r.exports=function(r){return"function"===typeof r}},4411:(r,t,a)=>{var o=a(7293),i=a(614),c=a(648),l=a(5005),p=a(2788),u=[],d=l("Reflect","construct"),m=/^\s*(?:class|function)\b/,_=m.exec,v=!m.exec((function(){})),isConstructorModern=function(r){if(!i(r))return!1;try{return d(Object,u,r),!0}catch(r){return!1}};r.exports=!d||o((function(){var r;return isConstructorModern(isConstructorModern.call)||!isConstructorModern(Object)||!isConstructorModern((function(){r=!0}))||r}))?function(r){if(!i(r))return!1;switch(c(r)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return v||!!_.call(m,p(r))}:isConstructorModern},4705:(r,t,a)=>{var o=a(7293),i=a(614),c=/#|\.prototype\./,isForced=function(r,t){var a=p[l(r)];return a==d||a!=u&&(i(t)?o(t):!!t)},l=isForced.normalize=function(r){return String(r).replace(c,".").toLowerCase()},p=isForced.data={},u=isForced.NATIVE="N",d=isForced.POLYFILL="P";r.exports=isForced},111:(r,t,a)=>{var o=a(614);r.exports=function(r){return"object"===typeof r?null!==r:o(r)}},1913:r=>{r.exports=!1},7850:(r,t,a)=>{var o=a(111),i=a(4326),c=a(5112)("match");r.exports=function(r){var t;return o(r)&&(void 0!==(t=r[c])?!!t:"RegExp"==i(r))}},2190:(r,t,a)=>{var o=a(614),i=a(5005),c=a(3307);r.exports=c?function(r){return"symbol"==typeof r}:function(r){var t=i("Symbol");return o(t)&&Object(r)instanceof t}},9212:(r,t,a)=>{var o=a(9670),i=a(8173);r.exports=function(r,t,a){var c,l;o(r);try{if(!(c=i(r,"return"))){if("throw"===t)throw a;return a}c=c.call(r)}catch(r){l=!0,c=r}if("throw"===t)throw a;if(l)throw c;return o(c),a}},3383:(r,t,a)=>{"use strict";var o,i,c,l=a(7293),p=a(614),u=a(30),d=a(9518),m=a(1320),_=a(5112),v=a(1913),h=_("iterator"),y=!1;[].keys&&("next"in(c=[].keys())?(i=d(d(c)))!==Object.prototype&&(o=i):y=!0),void 0==o||l((function(){var r={};return o[h].call(r)!==r}))?o={}:v&&(o=u(o)),p(o[h])||m(o,h,(function(){return this})),r.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:y}},7497:r=>{r.exports={}},6244:(r,t,a)=>{var o=a(7466);r.exports=function(r){return o(r.length)}},133:(r,t,a)=>{var o=a(7392),i=a(7293);r.exports=!!Object.getOwnPropertySymbols&&!i((function(){var r=Symbol();return!String(r)||!(Object(r)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},590:(r,t,a)=>{var o=a(7293),i=a(5112),c=a(1913),l=i("iterator");r.exports=!o((function(){var r=new URL("b?a=1&b=2&c=3","http://a"),t=r.searchParams,a="";return r.pathname="c%20d",t.forEach((function(r,o){t.delete("b"),a+=o+r})),c&&!r.toJSON||!t.sort||"http://a/c%20d?a=1&c=3"!==r.href||"3"!==t.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!t[l]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://\u0442\u0435\u0441\u0442").host||"#%D0%B1"!==new URL("http://a#\u0431").hash||"a1c3"!==a||"x"!==new URL("http://x",void 0).host}))},8536:(r,t,a)=>{var o=a(7854),i=a(614),c=a(2788),l=o.WeakMap;r.exports=i(l)&&/native code/.test(c(l))},3929:(r,t,a)=>{var o=a(7850);r.exports=function(r){if(o(r))throw TypeError("The method doesn't accept regular expressions");return r}},1574:(r,t,a)=>{"use strict";var o=a(9781),i=a(7293),c=a(1956),l=a(5181),p=a(5296),u=a(7908),d=a(8361),m=Object.assign,_=Object.defineProperty;r.exports=!m||i((function(){if(o&&1!==m({b:1},m(_({},"a",{enumerable:!0,get:function(){_(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var r={},t={},a=Symbol(),i="abcdefghijklmnopqrst";return r[a]=7,i.split("").forEach((function(r){t[r]=r})),7!=m({},r)[a]||c(m({},t)).join("")!=i}))?function assign(r,t){for(var a=u(r),i=arguments.length,m=1,_=l.f,v=p.f;i>m;)for(var h,y=d(arguments[m++]),g=_?c(y).concat(_(y)):c(y),b=g.length,w=0;b>w;)h=g[w++],o&&!v.call(y,h)||(a[h]=y[h]);return a}:m},30:(r,t,a)=>{var o,i=a(9670),c=a(6048),l=a(748),p=a(3501),u=a(490),d=a(317),m=a(6200),_="prototype",v="script",h=m("IE_PROTO"),EmptyConstructor=function(){},scriptTag=function(r){return"<"+v+">"+r+"</"+v+">"},NullProtoObjectViaActiveX=function(r){r.write(scriptTag("")),r.close();var t=r.parentWindow.Object;return r=null,t},NullProtoObject=function(){try{o=new ActiveXObject("htmlfile")}catch(r){}NullProtoObject="undefined"!=typeof document?document.domain&&o?NullProtoObjectViaActiveX(o):function(){var r,t=d("iframe"),a="java"+v+":";return t.style.display="none",u.appendChild(t),t.src=String(a),(r=t.contentWindow.document).open(),r.write(scriptTag("document.F=Object")),r.close(),r.F}():NullProtoObjectViaActiveX(o);for(var r=l.length;r--;)delete NullProtoObject[_][l[r]];return NullProtoObject()};p[h]=!0,r.exports=Object.create||function create(r,t){var a;return null!==r?(EmptyConstructor[_]=i(r),a=new EmptyConstructor,EmptyConstructor[_]=null,a[h]=r):a=NullProtoObject(),void 0===t?a:c(a,t)}},6048:(r,t,a)=>{var o=a(9781),i=a(3070),c=a(9670),l=a(1956);r.exports=o?Object.defineProperties:function defineProperties(r,t){c(r);for(var a,o=l(t),p=o.length,u=0;p>u;)i.f(r,a=o[u++],t[a]);return r}},3070:(r,t,a)=>{var o=a(9781),i=a(4664),c=a(9670),l=a(4948),p=Object.defineProperty;t.f=o?p:function defineProperty(r,t,a){if(c(r),t=l(t),c(a),i)try{return p(r,t,a)}catch(r){}if("get"in a||"set"in a)throw TypeError("Accessors not supported");return"value"in a&&(r[t]=a.value),r}},1236:(r,t,a)=>{var o=a(9781),i=a(5296),c=a(9114),l=a(5656),p=a(4948),u=a(2597),d=a(4664),m=Object.getOwnPropertyDescriptor;t.f=o?m:function getOwnPropertyDescriptor(r,t){if(r=l(r),t=p(t),d)try{return m(r,t)}catch(r){}if(u(r,t))return c(!i.f.call(r,t),r[t])}},1156:(r,t,a)=>{var o=a(5656),i=a(8006).f,c={}.toString,l="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];r.exports.f=function getOwnPropertyNames(r){return l&&"[object Window]"==c.call(r)?function(r){try{return i(r)}catch(r){return l.slice()}}(r):i(o(r))}},8006:(r,t,a)=>{var o=a(6324),i=a(748).concat("length","prototype");t.f=Object.getOwnPropertyNames||function getOwnPropertyNames(r){return o(r,i)}},5181:(r,t)=>{t.f=Object.getOwnPropertySymbols},9518:(r,t,a)=>{var o=a(2597),i=a(614),c=a(7908),l=a(6200),p=a(8544),u=l("IE_PROTO"),d=Object.prototype;r.exports=p?Object.getPrototypeOf:function(r){var t=c(r);if(o(t,u))return t[u];var a=t.constructor;return i(a)&&t instanceof a?a.prototype:t instanceof Object?d:null}},6324:(r,t,a)=>{var o=a(2597),i=a(5656),c=a(1318).indexOf,l=a(3501);r.exports=function(r,t){var a,p=i(r),u=0,d=[];for(a in p)!o(l,a)&&o(p,a)&&d.push(a);for(;t.length>u;)o(p,a=t[u++])&&(~c(d,a)||d.push(a));return d}},1956:(r,t,a)=>{var o=a(6324),i=a(748);r.exports=Object.keys||function keys(r){return o(r,i)}},5296:(r,t)=>{"use strict";var a={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!a.call({1:2},1);t.f=i?function propertyIsEnumerable(r){var t=o(this,r);return!!t&&t.enumerable}:a},7674:(r,t,a)=>{var o=a(9670),i=a(6077);r.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var r,t=!1,a={};try{(r=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(a,[]),t=a instanceof Array}catch(r){}return function setPrototypeOf(a,c){return o(a),i(c),t?r.call(a,c):a.__proto__=c,a}}():void 0)},4699:(r,t,a)=>{var o=a(9781),i=a(1956),c=a(5656),l=a(5296).f,createMethod=function(r){return function(t){for(var a,p=c(t),u=i(p),d=u.length,m=0,_=[];d>m;)a=u[m++],o&&!l.call(p,a)||_.push(r?[a,p[a]]:p[a]);return _}};r.exports={entries:createMethod(!0),values:createMethod(!1)}},288:(r,t,a)=>{"use strict";var o=a(1694),i=a(648);r.exports=o?{}.toString:function toString(){return"[object "+i(this)+"]"}},2140:(r,t,a)=>{var o=a(614),i=a(111);r.exports=function(r,t){var a,c;if("string"===t&&o(a=r.toString)&&!i(c=a.call(r)))return c;if(o(a=r.valueOf)&&!i(c=a.call(r)))return c;if("string"!==t&&o(a=r.toString)&&!i(c=a.call(r)))return c;throw TypeError("Can't convert object to primitive value")}},3887:(r,t,a)=>{var o=a(5005),i=a(8006),c=a(5181),l=a(9670);r.exports=o("Reflect","ownKeys")||function ownKeys(r){var t=i.f(l(r)),a=c.f;return a?t.concat(a(r)):t}},857:(r,t,a)=>{var o=a(7854);r.exports=o},2248:(r,t,a)=>{var o=a(1320);r.exports=function(r,t,a){for(var i in t)o(r,i,t[i],a);return r}},1320:(r,t,a)=>{var o=a(7854),i=a(614),c=a(2597),l=a(8880),p=a(3505),u=a(2788),d=a(9909),m=a(6530).CONFIGURABLE,_=d.get,v=d.enforce,h=String(String).split("String");(r.exports=function(r,t,a,u){var d,_=!!u&&!!u.unsafe,y=!!u&&!!u.enumerable,g=!!u&&!!u.noTargetGet,b=u&&void 0!==u.name?u.name:t;i(a)&&("Symbol("===String(b).slice(0,7)&&(b="["+String(b).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!c(a,"name")||m&&a.name!==b)&&l(a,"name",b),(d=v(a)).source||(d.source=h.join("string"==typeof b?b:""))),r!==o?(_?!g&&r[t]&&(y=!0):delete r[t],y?r[t]=a:l(r,t,a)):y?r[t]=a:p(t,a)})(Function.prototype,"toString",(function toString(){return i(this)&&_(this).source||u(this)}))},7651:(r,t,a)=>{var o=a(9670),i=a(614),c=a(4326),l=a(2261);r.exports=function(r,t){var a=r.exec;if(i(a)){var p=a.call(r,t);return null!==p&&o(p),p}if("RegExp"===c(r))return l.call(r,t);throw TypeError("RegExp#exec called on incompatible receiver")}},2261:(r,t,a)=>{"use strict";var o=a(1340),i=a(7066),c=a(2999),l=a(2309),p=a(30),u=a(9909).get,d=a(9441),m=a(7168),_=RegExp.prototype.exec,v=l("native-string-replace",String.prototype.replace),h=_,y=function(){var r=/a/,t=/b*/g;return _.call(r,"a"),_.call(t,"a"),0!==r.lastIndex||0!==t.lastIndex}(),g=c.UNSUPPORTED_Y||c.BROKEN_CARET,b=void 0!==/()??/.exec("")[1];(y||b||g||d||m)&&(h=function exec(r){var t,a,c,l,d,m,w,$=this,A=u($),k=o(r),I=A.raw;if(I)return I.lastIndex=$.lastIndex,t=h.call(I,k),$.lastIndex=I.lastIndex,t;var S=A.groups,x=g&&$.sticky,O=i.call($),E=$.source,j=0,P=k;if(x&&(-1===(O=O.replace("y","")).indexOf("g")&&(O+="g"),P=k.slice($.lastIndex),$.lastIndex>0&&(!$.multiline||$.multiline&&"\n"!==k.charAt($.lastIndex-1))&&(E="(?: "+E+")",P=" "+P,j++),a=new RegExp("^(?:"+E+")",O)),b&&(a=new RegExp("^"+E+"$(?!\\s)",O)),y&&(c=$.lastIndex),l=_.call(x?a:$,P),x?l?(l.input=l.input.slice(j),l[0]=l[0].slice(j),l.index=$.lastIndex,$.lastIndex+=l[0].length):$.lastIndex=0:y&&l&&($.lastIndex=$.global?l.index+l[0].length:c),b&&l&&l.length>1&&v.call(l[0],a,(function(){for(d=1;d<arguments.length-2;d++)void 0===arguments[d]&&(l[d]=void 0)})),l&&S)for(l.groups=m=p(null),d=0;d<S.length;d++)m[(w=S[d])[0]]=l[w[1]];return l}),r.exports=h},7066:(r,t,a)=>{"use strict";var o=a(9670);r.exports=function(){var r=o(this),t="";return r.global&&(t+="g"),r.ignoreCase&&(t+="i"),r.multiline&&(t+="m"),r.dotAll&&(t+="s"),r.unicode&&(t+="u"),r.sticky&&(t+="y"),t}},2999:(r,t,a)=>{var o=a(7293),i=a(7854).RegExp;t.UNSUPPORTED_Y=o((function(){var r=i("a","y");return r.lastIndex=2,null!=r.exec("abcd")})),t.BROKEN_CARET=o((function(){var r=i("^r","gy");return r.lastIndex=2,null!=r.exec("str")}))},9441:(r,t,a)=>{var o=a(7293),i=a(7854).RegExp;r.exports=o((function(){var r=i(".","s");return!(r.dotAll&&r.exec("\n")&&"s"===r.flags)}))},7168:(r,t,a)=>{var o=a(7293),i=a(7854).RegExp;r.exports=o((function(){var r=i("(?<a>b)","g");return"b"!==r.exec("b").groups.a||"bc"!=="b".replace(r,"$<a>c")}))},4488:r=>{r.exports=function(r){if(void 0==r)throw TypeError("Can't call method on "+r);return r}},1150:r=>{r.exports=Object.is||function is(r,t){return r===t?0!==r||1/r===1/t:r!=r&&t!=t}},3505:(r,t,a)=>{var o=a(7854);r.exports=function(r,t){try{Object.defineProperty(o,r,{value:t,configurable:!0,writable:!0})}catch(a){o[r]=t}return t}},6340:(r,t,a)=>{"use strict";var o=a(5005),i=a(3070),c=a(5112),l=a(9781),p=c("species");r.exports=function(r){var t=o(r),a=i.f;l&&t&&!t[p]&&a(t,p,{configurable:!0,get:function(){return this}})}},8003:(r,t,a)=>{var o=a(3070).f,i=a(2597),c=a(5112)("toStringTag");r.exports=function(r,t,a){r&&!i(r=a?r:r.prototype,c)&&o(r,c,{configurable:!0,value:t})}},6200:(r,t,a)=>{var o=a(2309),i=a(9711),c=o("keys");r.exports=function(r){return c[r]||(c[r]=i(r))}},5465:(r,t,a)=>{var o=a(7854),i=a(3505),c="__core-js_shared__",l=o[c]||i(c,{});r.exports=l},2309:(r,t,a)=>{var o=a(1913),i=a(5465);(r.exports=function(r,t){return i[r]||(i[r]=void 0!==t?t:{})})("versions",[]).push({version:"3.18.3",mode:o?"pure":"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"})},6707:(r,t,a)=>{var o=a(9670),i=a(9483),c=a(5112)("species");r.exports=function(r,t){var a,l=o(r).constructor;return void 0===l||void 0==(a=o(l)[c])?t:i(a)}},8710:(r,t,a)=>{var o=a(9303),i=a(1340),c=a(4488),createMethod=function(r){return function(t,a){var l,p,u=i(c(t)),d=o(a),m=u.length;return d<0||d>=m?r?"":void 0:(l=u.charCodeAt(d))<55296||l>56319||d+1===m||(p=u.charCodeAt(d+1))<56320||p>57343?r?u.charAt(d):l:r?u.slice(d,d+2):p-56320+(l-55296<<10)+65536}};r.exports={codeAt:createMethod(!1),charAt:createMethod(!0)}},3197:r=>{"use strict";var t=2147483647,a=/[^\0-\u007E]/,o=/[.\u3002\uFF0E\uFF61]/g,i="Overflow: input needs wider integers to process",c=Math.floor,l=String.fromCharCode,digitToBasic=function(r){return r+22+75*(r<26)},adapt=function(r,t,a){var o=0;for(r=a?c(r/700):r>>1,r+=c(r/t);r>455;o+=36)r=c(r/35);return c(o+36*r/(r+38))},encode=function(r){var a=[];r=function(r){for(var t=[],a=0,o=r.length;a<o;){var i=r.charCodeAt(a++);if(i>=55296&&i<=56319&&a<o){var c=r.charCodeAt(a++);56320==(64512&c)?t.push(((1023&i)<<10)+(1023&c)+65536):(t.push(i),a--)}else t.push(i)}return t}(r);var o,p,u=r.length,d=128,m=0,_=72;for(o=0;o<r.length;o++)(p=r[o])<128&&a.push(l(p));var v=a.length,h=v;for(v&&a.push("-");h<u;){var y=t;for(o=0;o<r.length;o++)(p=r[o])>=d&&p<y&&(y=p);var g=h+1;if(y-d>c((t-m)/g))throw RangeError(i);for(m+=(y-d)*g,d=y,o=0;o<r.length;o++){if((p=r[o])<d&&++m>t)throw RangeError(i);if(p==d){for(var b=m,w=36;;w+=36){var $=w<=_?1:w>=_+26?26:w-_;if(b<$)break;var A=b-$,k=36-$;a.push(l(digitToBasic($+A%k))),b=c(A/k)}a.push(l(digitToBasic(b))),_=adapt(m,g,h==v),m=0,++h}}++m,++d}return a.join("")};r.exports=function(r){var t,i,c=[],l=r.toLowerCase().replace(o,".").split(".");for(t=0;t<l.length;t++)i=l[t],c.push(a.test(i)?"xn--"+encode(i):i);return c.join(".")}},6091:(r,t,a)=>{var o=a(6530).PROPER,i=a(7293),c=a(1361);r.exports=function(r){return i((function(){return!!c[r]()||"\u200b\x85\u180e"!=="\u200b\x85\u180e"[r]()||o&&c[r].name!==r}))}},3111:(r,t,a)=>{var o=a(4488),i=a(1340),c="["+a(1361)+"]",l=RegExp("^"+c+c+"*"),p=RegExp(c+c+"*$"),createMethod=function(r){return function(t){var a=i(o(t));return 1&r&&(a=a.replace(l,"")),2&r&&(a=a.replace(p,"")),a}};r.exports={start:createMethod(1),end:createMethod(2),trim:createMethod(3)}},863:r=>{var t=1..valueOf;r.exports=function(r){return t.call(r)}},1400:(r,t,a)=>{var o=a(9303),i=Math.max,c=Math.min;r.exports=function(r,t){var a=o(r);return a<0?i(a+t,0):c(a,t)}},5656:(r,t,a)=>{var o=a(8361),i=a(4488);r.exports=function(r){return o(i(r))}},9303:r=>{var t=Math.ceil,a=Math.floor;r.exports=function(r){var o=+r;return o!==o||0===o?0:(o>0?a:t)(o)}},7466:(r,t,a)=>{var o=a(9303),i=Math.min;r.exports=function(r){return r>0?i(o(r),9007199254740991):0}},7908:(r,t,a)=>{var o=a(4488);r.exports=function(r){return Object(o(r))}},7593:(r,t,a)=>{var o=a(111),i=a(2190),c=a(8173),l=a(2140),p=a(5112)("toPrimitive");r.exports=function(r,t){if(!o(r)||i(r))return r;var a,u=c(r,p);if(u){if(void 0===t&&(t="default"),a=u.call(r,t),!o(a)||i(a))return a;throw TypeError("Can't convert object to primitive value")}return void 0===t&&(t="number"),l(r,t)}},4948:(r,t,a)=>{var o=a(7593),i=a(2190);r.exports=function(r){var t=o(r,"string");return i(t)?t:String(t)}},1694:(r,t,a)=>{var o={};o[a(5112)("toStringTag")]="z",r.exports="[object z]"===String(o)},1340:(r,t,a)=>{var o=a(648);r.exports=function(r){if("Symbol"===o(r))throw TypeError("Cannot convert a Symbol value to a string");return String(r)}},6330:r=>{r.exports=function(r){try{return String(r)}catch(r){return"Object"}}},9711:r=>{var t=0,a=Math.random();r.exports=function(r){return"Symbol("+String(void 0===r?"":r)+")_"+(++t+a).toString(36)}},3307:(r,t,a)=>{var o=a(133);r.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},6061:(r,t,a)=>{var o=a(5112);t.f=o},5112:(r,t,a)=>{var o=a(7854),i=a(2309),c=a(2597),l=a(9711),p=a(133),u=a(3307),d=i("wks"),m=o.Symbol,_=u?m:m&&m.withoutSetter||l;r.exports=function(r){return c(d,r)&&(p||"string"==typeof d[r])||(p&&c(m,r)?d[r]=m[r]:d[r]=_("Symbol."+r)),d[r]}},1361:r=>{r.exports="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"},2222:(r,t,a)=>{"use strict";var o=a(2109),i=a(7293),c=a(3157),l=a(111),p=a(7908),u=a(6244),d=a(6135),m=a(5417),_=a(1194),v=a(5112),h=a(7392),y=v("isConcatSpreadable"),g=9007199254740991,b="Maximum allowed index exceeded",w=h>=51||!i((function(){var r=[];return r[y]=!1,r.concat()[0]!==r})),$=_("concat"),isConcatSpreadable=function(r){if(!l(r))return!1;var t=r[y];return void 0!==t?!!t:c(r)};o({target:"Array",proto:!0,forced:!w||!$},{concat:function concat(r){var t,a,o,i,c,l=p(this),_=m(l,0),v=0;for(t=-1,o=arguments.length;t<o;t++)if(isConcatSpreadable(c=-1===t?l:arguments[t])){if(v+(i=u(c))>g)throw TypeError(b);for(a=0;a<i;a++,v++)a in c&&d(_,v,c[a])}else{if(v>=g)throw TypeError(b);d(_,v++,c)}return _.length=v,_}})},7327:(r,t,a)=>{"use strict";var o=a(2109),i=a(2092).filter;o({target:"Array",proto:!0,forced:!a(1194)("filter")},{filter:function filter(r){return i(this,r,arguments.length>1?arguments[1]:void 0)}})},1038:(r,t,a)=>{var o=a(2109),i=a(8457);o({target:"Array",stat:!0,forced:!a(7072)((function(r){Array.from(r)}))},{from:i})},6699:(r,t,a)=>{"use strict";var o=a(2109),i=a(1318).includes,c=a(1223);o({target:"Array",proto:!0},{includes:function includes(r){return i(this,r,arguments.length>1?arguments[1]:void 0)}}),c("includes")},6992:(r,t,a)=>{"use strict";var o=a(5656),i=a(1223),c=a(7497),l=a(9909),p=a(654),u="Array Iterator",d=l.set,m=l.getterFor(u);r.exports=p(Array,"Array",(function(r,t){d(this,{type:u,target:o(r),index:0,kind:t})}),(function(){var r=m(this),t=r.target,a=r.kind,o=r.index++;return!t||o>=t.length?(r.target=void 0,{value:void 0,done:!0}):"keys"==a?{value:o,done:!1}:"values"==a?{value:t[o],done:!1}:{value:[o,t[o]],done:!1}}),"values"),c.Arguments=c.Array,i("keys"),i("values"),i("entries")},9600:(r,t,a)=>{"use strict";var o=a(2109),i=a(8361),c=a(5656),l=a(9341),p=[].join,u=i!=Object,d=l("join",",");o({target:"Array",proto:!0,forced:u||!d},{join:function join(r){return p.call(c(this),void 0===r?",":r)}})},1249:(r,t,a)=>{"use strict";var o=a(2109),i=a(2092).map;o({target:"Array",proto:!0,forced:!a(1194)("map")},{map:function map(r){return i(this,r,arguments.length>1?arguments[1]:void 0)}})},7042:(r,t,a)=>{"use strict";var o=a(2109),i=a(3157),c=a(4411),l=a(111),p=a(1400),u=a(6244),d=a(5656),m=a(6135),_=a(5112),v=a(1194)("slice"),h=_("species"),y=[].slice,g=Math.max;o({target:"Array",proto:!0,forced:!v},{slice:function slice(r,t){var a,o,_,v=d(this),b=u(v),w=p(r,b),$=p(void 0===t?b:t,b);if(i(v)&&(a=v.constructor,(c(a)&&(a===Array||i(a.prototype))||l(a)&&null===(a=a[h]))&&(a=void 0),a===Array||void 0===a))return y.call(v,w,$);for(o=new(void 0===a?Array:a)(g($-w,0)),_=0;w<$;w++,_++)w in v&&m(o,_,v[w]);return o.length=_,o}})},8309:(r,t,a)=>{var o=a(9781),i=a(6530).EXISTS,c=a(3070).f,l=Function.prototype,p=l.toString,u=/^\s*function ([^ (]*)/;o&&!i&&c(l,"name",{configurable:!0,get:function(){try{return p.call(this).match(u)[1]}catch(r){return""}}})},9653:(r,t,a)=>{"use strict";var o=a(9781),i=a(7854),c=a(4705),l=a(1320),p=a(2597),u=a(9587),d=a(2190),m=a(7593),_=a(7293),v=a(8006).f,h=a(1236).f,y=a(3070).f,g=a(863),b=a(3111).trim,w="Number",$=i[w],A=$.prototype,toNumber=function(r){var t,a,o,i,c,l,p,u,_=m(r,"number");if(d(_))throw TypeError("Cannot convert a Symbol value to a number");if("string"==typeof _&&_.length>2)if(43===(t=(_=b(_)).charCodeAt(0))||45===t){if(88===(a=_.charCodeAt(2))||120===a)return NaN}else if(48===t){switch(_.charCodeAt(1)){case 66:case 98:o=2,i=49;break;case 79:case 111:o=8,i=55;break;default:return+_}for(l=(c=_.slice(2)).length,p=0;p<l;p++)if((u=c.charCodeAt(p))<48||u>i)return NaN;return parseInt(c,o)}return+_};if(c(w,!$(" 0o1")||!$("0b1")||$("+0x1"))){for(var k,I=function Number(r){var t=arguments.length<1?0:$(function(r){var t=m(r,"number");return"bigint"===typeof t?t:toNumber(t)}(r)),a=this;return a instanceof I&&_((function(){g(a)}))?u(Object(t),a,I):t},S=o?v($):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),x=0;S.length>x;x++)p($,k=S[x])&&!p(I,k)&&y(I,k,h($,k));I.prototype=A,A.constructor=I,l(i,w,I)}},9601:(r,t,a)=>{var o=a(2109),i=a(1574);o({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},5003:(r,t,a)=>{var o=a(2109),i=a(7293),c=a(5656),l=a(1236).f,p=a(9781),u=i((function(){l(1)}));o({target:"Object",stat:!0,forced:!p||u,sham:!p},{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(r,t){return l(c(r),t)}})},9337:(r,t,a)=>{var o=a(2109),i=a(9781),c=a(3887),l=a(5656),p=a(1236),u=a(6135);o({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function getOwnPropertyDescriptors(r){for(var t,a,o=l(r),i=p.f,d=c(o),m={},_=0;d.length>_;)void 0!==(a=i(o,t=d[_++]))&&u(m,t,a);return m}})},7941:(r,t,a)=>{var o=a(2109),i=a(7908),c=a(1956);o({target:"Object",stat:!0,forced:a(7293)((function(){c(1)}))},{keys:function keys(r){return c(i(r))}})},1539:(r,t,a)=>{var o=a(1694),i=a(1320),c=a(288);o||i(Object.prototype,"toString",c,{unsafe:!0})},6833:(r,t,a)=>{var o=a(2109),i=a(4699).values;o({target:"Object",stat:!0},{values:function values(r){return i(r)}})},4603:(r,t,a)=>{var o=a(9781),i=a(7854),c=a(4705),l=a(9587),p=a(8880),u=a(3070).f,d=a(8006).f,m=a(7850),_=a(1340),v=a(7066),h=a(2999),y=a(1320),g=a(7293),b=a(2597),w=a(9909).enforce,$=a(6340),A=a(5112),k=a(9441),I=a(7168),S=A("match"),x=i.RegExp,O=x.prototype,E=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,j=/a/g,P=/a/g,T=new x(j)!==j,R=h.UNSUPPORTED_Y,C=o&&(!T||R||k||I||g((function(){return P[S]=!1,x(j)!=j||x(P)==P||"/a/i"!=x(j,"i")})));if(c("RegExp",C)){for(var q=function RegExp(r,t){var a,o,i,c,u,d,h=this instanceof q,y=m(r),g=void 0===t,$=[],A=r;if(!h&&y&&g&&r.constructor===q)return r;if((y||r instanceof q)&&(r=r.source,g&&(t="flags"in A?A.flags:v.call(A))),r=void 0===r?"":_(r),t=void 0===t?"":_(t),A=r,k&&"dotAll"in j&&(o=!!t&&t.indexOf("s")>-1)&&(t=t.replace(/s/g,"")),a=t,R&&"sticky"in j&&(i=!!t&&t.indexOf("y")>-1)&&(t=t.replace(/y/g,"")),I&&(c=function(r){for(var t,a=r.length,o=0,i="",c=[],l={},p=!1,u=!1,d=0,m="";o<=a;o++){if("\\"===(t=r.charAt(o)))t+=r.charAt(++o);else if("]"===t)p=!1;else if(!p)switch(!0){case"["===t:p=!0;break;case"("===t:E.test(r.slice(o+1))&&(o+=2,u=!0),i+=t,d++;continue;case">"===t&&u:if(""===m||b(l,m))throw new SyntaxError("Invalid capture group name");l[m]=!0,c.push([m,d]),u=!1,m="";continue}u?m+=t:i+=t}return[i,c]}(r),r=c[0],$=c[1]),u=l(x(r,t),h?this:O,q),(o||i||$.length)&&(d=w(u),o&&(d.dotAll=!0,d.raw=q(function(r){for(var t,a=r.length,o=0,i="",c=!1;o<=a;o++)"\\"!==(t=r.charAt(o))?c||"."!==t?("["===t?c=!0:"]"===t&&(c=!1),i+=t):i+="[\\s\\S]":i+=t+r.charAt(++o);return i}(r),a)),i&&(d.sticky=!0),$.length&&(d.groups=$)),r!==A)try{p(u,"source",""===A?"(?:)":A)}catch(r){}return u},proxy=function(r){r in q||u(q,r,{configurable:!0,get:function(){return x[r]},set:function(t){x[r]=t}})},L=d(x),N=0;L.length>N;)proxy(L[N++]);O.constructor=q,q.prototype=O,y(i,"RegExp",q)}$("RegExp")},4916:(r,t,a)=>{"use strict";var o=a(2109),i=a(2261);o({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},9714:(r,t,a)=>{"use strict";var o=a(6530).PROPER,i=a(1320),c=a(9670),l=a(1340),p=a(7293),u=a(7066),d="toString",m=RegExp.prototype,_=m[d],v=p((function(){return"/a/b"!=_.call({source:"a",flags:"b"})})),h=o&&_.name!=d;(v||h)&&i(RegExp.prototype,d,(function toString(){var r=c(this),t=l(r.source),a=r.flags;return"/"+t+"/"+l(void 0===a&&r instanceof RegExp&&!("flags"in m)?u.call(r):a)}),{unsafe:!0})},2023:(r,t,a)=>{"use strict";var o=a(2109),i=a(3929),c=a(4488),l=a(1340);o({target:"String",proto:!0,forced:!a(4964)("includes")},{includes:function includes(r){return!!~l(c(this)).indexOf(l(i(r)),arguments.length>1?arguments[1]:void 0)}})},8783:(r,t,a)=>{"use strict";var o=a(8710).charAt,i=a(1340),c=a(9909),l=a(654),p="String Iterator",u=c.set,d=c.getterFor(p);l(String,"String",(function(r){u(this,{type:p,string:i(r),index:0})}),(function next(){var r,t=d(this),a=t.string,i=t.index;return i>=a.length?{value:void 0,done:!0}:(r=o(a,i),t.index+=r.length,{value:r,done:!1})}))},4723:(r,t,a)=>{"use strict";var o=a(7007),i=a(9670),c=a(7466),l=a(1340),p=a(4488),u=a(8173),d=a(1530),m=a(7651);o("match",(function(r,t,a){return[function match(t){var a=p(this),o=void 0==t?void 0:u(t,r);return o?o.call(t,a):new RegExp(t)[r](l(a))},function(r){var o=i(this),p=l(r),u=a(t,o,p);if(u.done)return u.value;if(!o.global)return m(o,p);var _=o.unicode;o.lastIndex=0;for(var v,h=[],y=0;null!==(v=m(o,p));){var g=l(v[0]);h[y]=g,""===g&&(o.lastIndex=d(p,c(o.lastIndex),_)),y++}return 0===y?null:h}]}))},5306:(r,t,a)=>{"use strict";var o=a(7007),i=a(7293),c=a(9670),l=a(614),p=a(9303),u=a(7466),d=a(1340),m=a(4488),_=a(1530),v=a(8173),h=a(647),y=a(7651),g=a(5112)("replace"),b=Math.max,w=Math.min,$="$0"==="a".replace(/./,"$0"),A=!!/./[g]&&""===/./[g]("a","$0");o("replace",(function(r,t,a){var o=A?"$":"$0";return[function replace(r,a){var o=m(this),i=void 0==r?void 0:v(r,g);return i?i.call(r,o,a):t.call(d(o),r,a)},function(r,i){var m=c(this),v=d(r);if("string"===typeof i&&-1===i.indexOf(o)&&-1===i.indexOf("$<")){var g=a(t,m,v,i);if(g.done)return g.value}var $=l(i);$||(i=d(i));var A=m.global;if(A){var k=m.unicode;m.lastIndex=0}for(var I=[];;){var S=y(m,v);if(null===S)break;if(I.push(S),!A)break;""===d(S[0])&&(m.lastIndex=_(v,u(m.lastIndex),k))}for(var x,O="",E=0,j=0;j<I.length;j++){S=I[j];for(var P=d(S[0]),T=b(w(p(S.index),v.length),0),R=[],C=1;C<S.length;C++)R.push(void 0===(x=S[C])?x:String(x));var q=S.groups;if($){var L=[P].concat(R,T,v);void 0!==q&&L.push(q);var N=d(i.apply(void 0,L))}else N=h(P,v,T,R,q,i);T>=E&&(O+=v.slice(E,T)+N,E=T+P.length)}return O+v.slice(E)}]}),!!i((function(){var r=/./;return r.exec=function(){var r=[];return r.groups={a:"7"},r},"7"!=="".replace(r,"$<a>")}))||!$||A)},4765:(r,t,a)=>{"use strict";var o=a(7007),i=a(9670),c=a(4488),l=a(1150),p=a(1340),u=a(8173),d=a(7651);o("search",(function(r,t,a){return[function search(t){var a=c(this),o=void 0==t?void 0:u(t,r);return o?o.call(t,a):new RegExp(t)[r](p(a))},function(r){var o=i(this),c=p(r),u=a(t,o,c);if(u.done)return u.value;var m=o.lastIndex;l(m,0)||(o.lastIndex=0);var _=d(o,c);return l(o.lastIndex,m)||(o.lastIndex=m),null===_?-1:_.index}]}))},3123:(r,t,a)=>{"use strict";var o=a(7007),i=a(7850),c=a(9670),l=a(4488),p=a(6707),u=a(1530),d=a(7466),m=a(1340),_=a(8173),v=a(7651),h=a(2261),y=a(2999),g=a(7293),b=y.UNSUPPORTED_Y,w=[].push,$=Math.min,A=4294967295;o("split",(function(r,t,a){var o;return o="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(r,a){var o=m(l(this)),c=void 0===a?A:a>>>0;if(0===c)return[];if(void 0===r)return[o];if(!i(r))return t.call(o,r,c);for(var p,u,d,_=[],v=(r.ignoreCase?"i":"")+(r.multiline?"m":"")+(r.unicode?"u":"")+(r.sticky?"y":""),y=0,g=new RegExp(r.source,v+"g");(p=h.call(g,o))&&!((u=g.lastIndex)>y&&(_.push(o.slice(y,p.index)),p.length>1&&p.index<o.length&&w.apply(_,p.slice(1)),d=p[0].length,y=u,_.length>=c));)g.lastIndex===p.index&&g.lastIndex++;return y===o.length?!d&&g.test("")||_.push(""):_.push(o.slice(y)),_.length>c?_.slice(0,c):_}:"0".split(void 0,0).length?function(r,a){return void 0===r&&0===a?[]:t.call(this,r,a)}:t,[function split(t,a){var i=l(this),c=void 0==t?void 0:_(t,r);return c?c.call(t,i,a):o.call(m(i),t,a)},function(r,i){var l=c(this),_=m(r),h=a(o,l,_,i,o!==t);if(h.done)return h.value;var y=p(l,RegExp),g=l.unicode,w=(l.ignoreCase?"i":"")+(l.multiline?"m":"")+(l.unicode?"u":"")+(b?"g":"y"),k=new y(b?"^(?:"+l.source+")":l,w),I=void 0===i?A:i>>>0;if(0===I)return[];if(0===_.length)return null===v(k,_)?[_]:[];for(var S=0,x=0,O=[];x<_.length;){k.lastIndex=b?0:x;var E,j=v(k,b?_.slice(x):_);if(null===j||(E=$(d(k.lastIndex+(b?x:0)),_.length))===S)x=u(_,x,g);else{if(O.push(_.slice(S,x)),O.length===I)return O;for(var P=1;P<=j.length-1;P++)if(O.push(j[P]),O.length===I)return O;x=S=E}}return O.push(_.slice(S)),O}]}),!!g((function(){var r=/(?:)/,t=r.exec;r.exec=function(){return t.apply(this,arguments)};var a="ab".split(r);return 2!==a.length||"a"!==a[0]||"b"!==a[1]})),b)},6755:(r,t,a)=>{"use strict";var o=a(2109),i=a(1236).f,c=a(7466),l=a(1340),p=a(3929),u=a(4488),d=a(4964),m=a(1913),_="".startsWith,v=Math.min,h=d("startsWith");o({target:"String",proto:!0,forced:!(!m&&!h&&!!function(){var r=i(String.prototype,"startsWith");return r&&!r.writable}())&&!h},{startsWith:function startsWith(r){var t=l(u(this));p(r);var a=c(v(arguments.length>1?arguments[1]:void 0,t.length)),o=l(r);return _?_.call(t,o,a):t.slice(a,a+o.length)===o}})},3210:(r,t,a)=>{"use strict";var o=a(2109),i=a(3111).trim;o({target:"String",proto:!0,forced:a(6091)("trim")},{trim:function trim(){return i(this)}})},1817:(r,t,a)=>{"use strict";var o=a(2109),i=a(9781),c=a(7854),l=a(2597),p=a(614),u=a(111),d=a(3070).f,m=a(9920),_=c.Symbol;if(i&&p(_)&&(!("description"in _.prototype)||void 0!==_().description)){var v={},h=function Symbol(){var r=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof h?new _(r):void 0===r?_():_(r);return""===r&&(v[t]=!0),t};m(h,_);var y=h.prototype=_.prototype;y.constructor=h;var g=y.toString,b="Symbol(test)"==String(_("test")),w=/^Symbol\((.*)\)[^)]+$/;d(y,"description",{configurable:!0,get:function description(){var r=u(this)?this.valueOf():this,t=g.call(r);if(l(v,r))return"";var a=b?t.slice(7,-1):t.replace(w,"$1");return""===a?void 0:a}}),o({global:!0,forced:!0},{Symbol:h})}},2165:(r,t,a)=>{a(7235)("iterator")},2526:(r,t,a)=>{"use strict";var o=a(2109),i=a(7854),c=a(5005),l=a(1913),p=a(9781),u=a(133),d=a(7293),m=a(2597),_=a(3157),v=a(614),h=a(111),y=a(2190),g=a(9670),b=a(7908),w=a(5656),$=a(4948),A=a(1340),k=a(9114),I=a(30),S=a(1956),x=a(8006),O=a(1156),E=a(5181),j=a(1236),P=a(3070),T=a(5296),R=a(1320),C=a(2309),q=a(6200),L=a(3501),N=a(9711),U=a(5112),z=a(6061),M=a(7235),G=a(8003),D=a(9909),B=a(2092).forEach,Z=q("hidden"),H="Symbol",V="prototype",W=U("toPrimitive"),J=D.set,K=D.getterFor(H),Y=Object[V],Q=i.Symbol,X=c("JSON","stringify"),ee=j.f,re=P.f,ne=O.f,te=T.f,ae=C("symbols"),oe=C("op-symbols"),ie=C("string-to-symbol-registry"),se=C("symbol-to-string-registry"),ce=C("wks"),le=i.QObject,pe=!le||!le[V]||!le[V].findChild,ue=p&&d((function(){return 7!=I(re({},"a",{get:function(){return re(this,"a",{value:7}).a}})).a}))?function(r,t,a){var o=ee(Y,t);o&&delete Y[t],re(r,t,a),o&&r!==Y&&re(Y,t,o)}:re,wrap=function(r,t){var a=ae[r]=I(Q[V]);return J(a,{type:H,tag:r,description:t}),p||(a.description=t),a},de=function defineProperty(r,t,a){r===Y&&de(oe,t,a),g(r);var o=$(t);return g(a),m(ae,o)?(a.enumerable?(m(r,Z)&&r[Z][o]&&(r[Z][o]=!1),a=I(a,{enumerable:k(0,!1)})):(m(r,Z)||re(r,Z,k(1,{})),r[Z][o]=!0),ue(r,o,a)):re(r,o,a)},fe=function defineProperties(r,t){g(r);var a=w(t),o=S(a).concat(he(a));return B(o,(function(t){p&&!me.call(a,t)||de(r,t,a[t])})),r},me=function propertyIsEnumerable(r){var t=$(r),a=te.call(this,t);return!(this===Y&&m(ae,t)&&!m(oe,t))&&(!(a||!m(this,t)||!m(ae,t)||m(this,Z)&&this[Z][t])||a)},_e=function getOwnPropertyDescriptor(r,t){var a=w(r),o=$(t);if(a!==Y||!m(ae,o)||m(oe,o)){var i=ee(a,o);return!i||!m(ae,o)||m(a,Z)&&a[Z][o]||(i.enumerable=!0),i}},ve=function getOwnPropertyNames(r){var t=ne(w(r)),a=[];return B(t,(function(r){m(ae,r)||m(L,r)||a.push(r)})),a},he=function getOwnPropertySymbols(r){var t=r===Y,a=ne(t?oe:w(r)),o=[];return B(a,(function(r){!m(ae,r)||t&&!m(Y,r)||o.push(ae[r])})),o};(u||(R((Q=function Symbol(){if(this instanceof Q)throw TypeError("Symbol is not a constructor");var r=arguments.length&&void 0!==arguments[0]?A(arguments[0]):void 0,t=N(r),setter=function(r){this===Y&&setter.call(oe,r),m(this,Z)&&m(this[Z],t)&&(this[Z][t]=!1),ue(this,t,k(1,r))};return p&&pe&&ue(Y,t,{configurable:!0,set:setter}),wrap(t,r)})[V],"toString",(function toString(){return K(this).tag})),R(Q,"withoutSetter",(function(r){return wrap(N(r),r)})),T.f=me,P.f=de,j.f=_e,x.f=O.f=ve,E.f=he,z.f=function(r){return wrap(U(r),r)},p&&(re(Q[V],"description",{configurable:!0,get:function description(){return K(this).description}}),l||R(Y,"propertyIsEnumerable",me,{unsafe:!0}))),o({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:Q}),B(S(ce),(function(r){M(r)})),o({target:H,stat:!0,forced:!u},{for:function(r){var t=A(r);if(m(ie,t))return ie[t];var a=Q(t);return ie[t]=a,se[a]=t,a},keyFor:function keyFor(r){if(!y(r))throw TypeError(r+" is not a symbol");if(m(se,r))return se[r]},useSetter:function(){pe=!0},useSimple:function(){pe=!1}}),o({target:"Object",stat:!0,forced:!u,sham:!p},{create:function create(r,t){return void 0===t?I(r):fe(I(r),t)},defineProperty:de,defineProperties:fe,getOwnPropertyDescriptor:_e}),o({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:ve,getOwnPropertySymbols:he}),o({target:"Object",stat:!0,forced:d((function(){E.f(1)}))},{getOwnPropertySymbols:function getOwnPropertySymbols(r){return E.f(b(r))}}),X)&&o({target:"JSON",stat:!0,forced:!u||d((function(){var r=Q();return"[null]"!=X([r])||"{}"!=X({a:r})||"{}"!=X(Object(r))}))},{stringify:function stringify(r,t,a){for(var o,i=[r],c=1;arguments.length>c;)i.push(arguments[c++]);if(o=t,(h(t)||void 0!==r)&&!y(r))return _(t)||(t=function(r,t){if(v(o)&&(t=o.call(this,r,t)),!y(t))return t}),i[1]=t,X.apply(null,i)}});if(!Q[V][W]){var ye=Q[V].valueOf;R(Q[V],W,(function(){return ye.apply(this,arguments)}))}G(Q,H),L[Z]=!0},4747:(r,t,a)=>{var o=a(7854),i=a(8324),c=a(8509),l=a(8533),p=a(8880),handlePrototype=function(r){if(r&&r.forEach!==l)try{p(r,"forEach",l)}catch(t){r.forEach=l}};for(var u in i)i[u]&&handlePrototype(o[u]&&o[u].prototype);handlePrototype(c)},3948:(r,t,a)=>{var o=a(7854),i=a(8324),c=a(8509),l=a(6992),p=a(8880),u=a(5112),d=u("iterator"),m=u("toStringTag"),_=l.values,handlePrototype=function(r,t){if(r){if(r[d]!==_)try{p(r,d,_)}catch(t){r[d]=_}if(r[m]||p(r,m,t),i[t])for(var a in l)if(r[a]!==l[a])try{p(r,a,l[a])}catch(t){r[a]=l[a]}}};for(var v in i)handlePrototype(o[v]&&o[v].prototype,v);handlePrototype(c,"DOMTokenList")},1637:(r,t,a)=>{"use strict";a(6992);var o=a(2109),i=a(5005),c=a(590),l=a(1320),p=a(2248),u=a(8003),d=a(4994),m=a(9909),_=a(5787),v=a(614),h=a(2597),y=a(9974),g=a(648),b=a(9670),w=a(111),$=a(1340),A=a(30),k=a(9114),I=a(8554),S=a(1246),x=a(5112),O=i("fetch"),E=i("Request"),j=E&&E.prototype,P=i("Headers"),T=x("iterator"),R="URLSearchParams",C=R+"Iterator",q=m.set,L=m.getterFor(R),N=m.getterFor(C),U=/\+/g,z=Array(4),percentSequence=function(r){return z[r-1]||(z[r-1]=RegExp("((?:%[\\da-f]{2}){"+r+"})","gi"))},percentDecode=function(r){try{return decodeURIComponent(r)}catch(t){return r}},deserialize=function(r){var t=r.replace(U," "),a=4;try{return decodeURIComponent(t)}catch(r){for(;a;)t=t.replace(percentSequence(a--),percentDecode);return t}},M=/[!'()~]|%20/g,G={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},replacer=function(r){return G[r]},serialize=function(r){return encodeURIComponent(r).replace(M,replacer)},parseSearchParams=function(r,t){if(t)for(var a,o,i=t.split("&"),c=0;c<i.length;)(a=i[c++]).length&&(o=a.split("="),r.push({key:deserialize(o.shift()),value:deserialize(o.join("="))}))},updateSearchParams=function(r){this.entries.length=0,parseSearchParams(this.entries,r)},validateArgumentsLength=function(r,t){if(r<t)throw TypeError("Not enough arguments")},D=d((function Iterator(r,t){q(this,{type:C,iterator:I(L(r).entries),kind:t})}),"Iterator",(function next(){var r=N(this),t=r.kind,a=r.iterator.next(),o=a.value;return a.done||(a.value="keys"===t?o.key:"values"===t?o.value:[o.key,o.value]),a})),B=function URLSearchParams(){_(this,B,R);var r,t,a,o,i,c,l,p,u,d=arguments.length>0?arguments[0]:void 0,m=[];if(q(this,{type:R,entries:m,updateURL:function(){},updateSearchParams:updateSearchParams}),void 0!==d)if(w(d))if(r=S(d))for(a=(t=I(d,r)).next;!(o=a.call(t)).done;){if((l=(c=(i=I(b(o.value))).next).call(i)).done||(p=c.call(i)).done||!c.call(i).done)throw TypeError("Expected sequence with length 2");m.push({key:$(l.value),value:$(p.value)})}else for(u in d)h(d,u)&&m.push({key:u,value:$(d[u])});else parseSearchParams(m,"string"===typeof d?"?"===d.charAt(0)?d.slice(1):d:$(d))},Z=B.prototype;if(p(Z,{append:function append(r,t){validateArgumentsLength(arguments.length,2);var a=L(this);a.entries.push({key:$(r),value:$(t)}),a.updateURL()},delete:function(r){validateArgumentsLength(arguments.length,1);for(var t=L(this),a=t.entries,o=$(r),i=0;i<a.length;)a[i].key===o?a.splice(i,1):i++;t.updateURL()},get:function get(r){validateArgumentsLength(arguments.length,1);for(var t=L(this).entries,a=$(r),o=0;o<t.length;o++)if(t[o].key===a)return t[o].value;return null},getAll:function getAll(r){validateArgumentsLength(arguments.length,1);for(var t=L(this).entries,a=$(r),o=[],i=0;i<t.length;i++)t[i].key===a&&o.push(t[i].value);return o},has:function has(r){validateArgumentsLength(arguments.length,1);for(var t=L(this).entries,a=$(r),o=0;o<t.length;)if(t[o++].key===a)return!0;return!1},set:function set(r,t){validateArgumentsLength(arguments.length,1);for(var a,o=L(this),i=o.entries,c=!1,l=$(r),p=$(t),u=0;u<i.length;u++)(a=i[u]).key===l&&(c?i.splice(u--,1):(c=!0,a.value=p));c||i.push({key:l,value:p}),o.updateURL()},sort:function sort(){var r,t,a,o=L(this),i=o.entries,c=i.slice();for(i.length=0,a=0;a<c.length;a++){for(r=c[a],t=0;t<a;t++)if(i[t].key>r.key){i.splice(t,0,r);break}t===a&&i.push(r)}o.updateURL()},forEach:function forEach(r){for(var t,a=L(this).entries,o=y(r,arguments.length>1?arguments[1]:void 0,3),i=0;i<a.length;)o((t=a[i++]).value,t.key,this)},keys:function keys(){return new D(this,"keys")},values:function values(){return new D(this,"values")},entries:function entries(){return new D(this,"entries")}},{enumerable:!0}),l(Z,T,Z.entries,{name:"entries"}),l(Z,"toString",(function toString(){for(var r,t=L(this).entries,a=[],o=0;o<t.length;)r=t[o++],a.push(serialize(r.key)+"="+serialize(r.value));return a.join("&")}),{enumerable:!0}),u(B,R),o({global:!0,forced:!c},{URLSearchParams:B}),!c&&v(P)){var wrapRequestOptions=function(r){if(w(r)){var t,a=r.body;if(g(a)===R)return(t=r.headers?new P(r.headers):new P).has("content-type")||t.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),A(r,{body:k(0,String(a)),headers:k(0,t)})}return r};if(v(O)&&o({global:!0,enumerable:!0,forced:!0},{fetch:function fetch(r){return O(r,arguments.length>1?wrapRequestOptions(arguments[1]):{})}}),v(E)){var H=function Request(r){return _(this,H,"Request"),new E(r,arguments.length>1?wrapRequestOptions(arguments[1]):{})};j.constructor=H,H.prototype=j,o({global:!0,forced:!0},{Request:H})}}r.exports={URLSearchParams:B,getState:L}},285:(r,t,a)=>{"use strict";a(8783);var o,i=a(2109),c=a(9781),l=a(590),p=a(7854),u=a(6048),d=a(1320),m=a(5787),_=a(2597),v=a(1574),h=a(8457),y=a(8710).codeAt,g=a(3197),b=a(1340),w=a(8003),$=a(1637),A=a(9909),k=p.URL,I=$.URLSearchParams,S=$.getState,x=A.set,O=A.getterFor("URL"),E=Math.floor,j=Math.pow,P="Invalid scheme",T="Invalid host",R="Invalid port",C=/[a-z]/i,q=/[\d+-.a-z]/i,L=/\d/,N=/^0x/i,U=/^[0-7]+$/,z=/^\d+$/,M=/^[\da-f]+$/i,G=/[\0\t\n\r #%/:<>?@[\\\]^|]/,D=/[\0\t\n\r #/:<>?@[\\\]^|]/,B=/^[\u0000-\u0020]+|[\u0000-\u0020]+$/g,Z=/[\t\n\r]/g,parseHost=function(r,t){var a,o,i;if("["==t.charAt(0)){if("]"!=t.charAt(t.length-1))return T;if(!(a=parseIPv6(t.slice(1,-1))))return T;r.host=a}else if(isSpecial(r)){if(t=g(t),G.test(t))return T;if(null===(a=parseIPv4(t)))return T;r.host=a}else{if(D.test(t))return T;for(a="",o=h(t),i=0;i<o.length;i++)a+=percentEncode(o[i],H);r.host=a}},parseIPv4=function(r){var t,a,o,i,c,l,p,u=r.split(".");if(u.length&&""==u[u.length-1]&&u.pop(),(t=u.length)>4)return r;for(a=[],o=0;o<t;o++){if(""==(i=u[o]))return r;if(c=10,i.length>1&&"0"==i.charAt(0)&&(c=N.test(i)?16:8,i=i.slice(8==c?1:2)),""===i)l=0;else{if(!(10==c?z:8==c?U:M).test(i))return r;l=parseInt(i,c)}a.push(l)}for(o=0;o<t;o++)if(l=a[o],o==t-1){if(l>=j(256,5-t))return null}else if(l>255)return null;for(p=a.pop(),o=0;o<a.length;o++)p+=a[o]*j(256,3-o);return p},parseIPv6=function(r){var t,a,o,i,c,l,p,u=[0,0,0,0,0,0,0,0],d=0,m=null,_=0,chr=function(){return r.charAt(_)};if(":"==chr()){if(":"!=r.charAt(1))return;_+=2,m=++d}for(;chr();){if(8==d)return;if(":"!=chr()){for(t=a=0;a<4&&M.test(chr());)t=16*t+parseInt(chr(),16),_++,a++;if("."==chr()){if(0==a)return;if(_-=a,d>6)return;for(o=0;chr();){if(i=null,o>0){if(!("."==chr()&&o<4))return;_++}if(!L.test(chr()))return;for(;L.test(chr());){if(c=parseInt(chr(),10),null===i)i=c;else{if(0==i)return;i=10*i+c}if(i>255)return;_++}u[d]=256*u[d]+i,2!=++o&&4!=o||d++}if(4!=o)return;break}if(":"==chr()){if(_++,!chr())return}else if(chr())return;u[d++]=t}else{if(null!==m)return;_++,m=++d}}if(null!==m)for(l=d-m,d=7;0!=d&&l>0;)p=u[d],u[d--]=u[m+l-1],u[m+--l]=p;else if(8!=d)return;return u},serializeHost=function(r){var t,a,o,i;if("number"==typeof r){for(t=[],a=0;a<4;a++)t.unshift(r%256),r=E(r/256);return t.join(".")}if("object"==typeof r){for(t="",o=function(r){for(var t=null,a=1,o=null,i=0,c=0;c<8;c++)0!==r[c]?(i>a&&(t=o,a=i),o=null,i=0):(null===o&&(o=c),++i);return i>a&&(t=o,a=i),t}(r),a=0;a<8;a++)i&&0===r[a]||(i&&(i=!1),o===a?(t+=a?":":"::",i=!0):(t+=r[a].toString(16),a<7&&(t+=":")));return"["+t+"]"}return r},H={},V=v({},H,{" ":1,'"':1,"<":1,">":1,"`":1}),W=v({},V,{"#":1,"?":1,"{":1,"}":1}),J=v({},W,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),percentEncode=function(r,t){var a=y(r,0);return a>32&&a<127&&!_(t,r)?r:encodeURIComponent(r)},K={ftp:21,file:null,http:80,https:443,ws:80,wss:443},isSpecial=function(r){return _(K,r.scheme)},includesCredentials=function(r){return""!=r.username||""!=r.password},cannotHaveUsernamePasswordPort=function(r){return!r.host||r.cannotBeABaseURL||"file"==r.scheme},isWindowsDriveLetter=function(r,t){var a;return 2==r.length&&C.test(r.charAt(0))&&(":"==(a=r.charAt(1))||!t&&"|"==a)},startsWithWindowsDriveLetter=function(r){var t;return r.length>1&&isWindowsDriveLetter(r.slice(0,2))&&(2==r.length||"/"===(t=r.charAt(2))||"\\"===t||"?"===t||"#"===t)},shortenURLsPath=function(r){var t=r.path,a=t.length;!a||"file"==r.scheme&&1==a&&isWindowsDriveLetter(t[0],!0)||t.pop()},isSingleDot=function(r){return"."===r||"%2e"===r.toLowerCase()},Y={},Q={},X={},ee={},re={},ne={},te={},ae={},oe={},ie={},se={},ce={},le={},pe={},ue={},de={},fe={},me={},_e={},ve={},he={},parseURL=function(r,t,a,i){var c,l,p,u,d,m=a||Y,v=0,y="",g=!1,b=!1,w=!1;for(a||(r.scheme="",r.username="",r.password="",r.host=null,r.port=null,r.path=[],r.query=null,r.fragment=null,r.cannotBeABaseURL=!1,t=t.replace(B,"")),t=t.replace(Z,""),c=h(t);v<=c.length;){switch(l=c[v],m){case Y:if(!l||!C.test(l)){if(a)return P;m=X;continue}y+=l.toLowerCase(),m=Q;break;case Q:if(l&&(q.test(l)||"+"==l||"-"==l||"."==l))y+=l.toLowerCase();else{if(":"!=l){if(a)return P;y="",m=X,v=0;continue}if(a&&(isSpecial(r)!=_(K,y)||"file"==y&&(includesCredentials(r)||null!==r.port)||"file"==r.scheme&&!r.host))return;if(r.scheme=y,a)return void(isSpecial(r)&&K[r.scheme]==r.port&&(r.port=null));y="","file"==r.scheme?m=pe:isSpecial(r)&&i&&i.scheme==r.scheme?m=ee:isSpecial(r)?m=ae:"/"==c[v+1]?(m=re,v++):(r.cannotBeABaseURL=!0,r.path.push(""),m=_e)}break;case X:if(!i||i.cannotBeABaseURL&&"#"!=l)return P;if(i.cannotBeABaseURL&&"#"==l){r.scheme=i.scheme,r.path=i.path.slice(),r.query=i.query,r.fragment="",r.cannotBeABaseURL=!0,m=he;break}m="file"==i.scheme?pe:ne;continue;case ee:if("/"!=l||"/"!=c[v+1]){m=ne;continue}m=oe,v++;break;case re:if("/"==l){m=ie;break}m=me;continue;case ne:if(r.scheme=i.scheme,l==o)r.username=i.username,r.password=i.password,r.host=i.host,r.port=i.port,r.path=i.path.slice(),r.query=i.query;else if("/"==l||"\\"==l&&isSpecial(r))m=te;else if("?"==l)r.username=i.username,r.password=i.password,r.host=i.host,r.port=i.port,r.path=i.path.slice(),r.query="",m=ve;else{if("#"!=l){r.username=i.username,r.password=i.password,r.host=i.host,r.port=i.port,r.path=i.path.slice(),r.path.pop(),m=me;continue}r.username=i.username,r.password=i.password,r.host=i.host,r.port=i.port,r.path=i.path.slice(),r.query=i.query,r.fragment="",m=he}break;case te:if(!isSpecial(r)||"/"!=l&&"\\"!=l){if("/"!=l){r.username=i.username,r.password=i.password,r.host=i.host,r.port=i.port,m=me;continue}m=ie}else m=oe;break;case ae:if(m=oe,"/"!=l||"/"!=y.charAt(v+1))continue;v++;break;case oe:if("/"!=l&&"\\"!=l){m=ie;continue}break;case ie:if("@"==l){g&&(y="%40"+y),g=!0,p=h(y);for(var $=0;$<p.length;$++){var A=p[$];if(":"!=A||w){var k=percentEncode(A,J);w?r.password+=k:r.username+=k}else w=!0}y=""}else if(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&isSpecial(r)){if(g&&""==y)return"Invalid authority";v-=h(y).length+1,y="",m=se}else y+=l;break;case se:case ce:if(a&&"file"==r.scheme){m=de;continue}if(":"!=l||b){if(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&isSpecial(r)){if(isSpecial(r)&&""==y)return T;if(a&&""==y&&(includesCredentials(r)||null!==r.port))return;if(u=parseHost(r,y))return u;if(y="",m=fe,a)return;continue}"["==l?b=!0:"]"==l&&(b=!1),y+=l}else{if(""==y)return T;if(u=parseHost(r,y))return u;if(y="",m=le,a==ce)return}break;case le:if(!L.test(l)){if(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&isSpecial(r)||a){if(""!=y){var I=parseInt(y,10);if(I>65535)return R;r.port=isSpecial(r)&&I===K[r.scheme]?null:I,y=""}if(a)return;m=fe;continue}return R}y+=l;break;case pe:if(r.scheme="file","/"==l||"\\"==l)m=ue;else{if(!i||"file"!=i.scheme){m=me;continue}if(l==o)r.host=i.host,r.path=i.path.slice(),r.query=i.query;else if("?"==l)r.host=i.host,r.path=i.path.slice(),r.query="",m=ve;else{if("#"!=l){startsWithWindowsDriveLetter(c.slice(v).join(""))||(r.host=i.host,r.path=i.path.slice(),shortenURLsPath(r)),m=me;continue}r.host=i.host,r.path=i.path.slice(),r.query=i.query,r.fragment="",m=he}}break;case ue:if("/"==l||"\\"==l){m=de;break}i&&"file"==i.scheme&&!startsWithWindowsDriveLetter(c.slice(v).join(""))&&(isWindowsDriveLetter(i.path[0],!0)?r.path.push(i.path[0]):r.host=i.host),m=me;continue;case de:if(l==o||"/"==l||"\\"==l||"?"==l||"#"==l){if(!a&&isWindowsDriveLetter(y))m=me;else if(""==y){if(r.host="",a)return;m=fe}else{if(u=parseHost(r,y))return u;if("localhost"==r.host&&(r.host=""),a)return;y="",m=fe}continue}y+=l;break;case fe:if(isSpecial(r)){if(m=me,"/"!=l&&"\\"!=l)continue}else if(a||"?"!=l)if(a||"#"!=l){if(l!=o&&(m=me,"/"!=l))continue}else r.fragment="",m=he;else r.query="",m=ve;break;case me:if(l==o||"/"==l||"\\"==l&&isSpecial(r)||!a&&("?"==l||"#"==l)){if(".."===(d=(d=y).toLowerCase())||"%2e."===d||".%2e"===d||"%2e%2e"===d?(shortenURLsPath(r),"/"==l||"\\"==l&&isSpecial(r)||r.path.push("")):isSingleDot(y)?"/"==l||"\\"==l&&isSpecial(r)||r.path.push(""):("file"==r.scheme&&!r.path.length&&isWindowsDriveLetter(y)&&(r.host&&(r.host=""),y=y.charAt(0)+":"),r.path.push(y)),y="","file"==r.scheme&&(l==o||"?"==l||"#"==l))for(;r.path.length>1&&""===r.path[0];)r.path.shift();"?"==l?(r.query="",m=ve):"#"==l&&(r.fragment="",m=he)}else y+=percentEncode(l,W);break;case _e:"?"==l?(r.query="",m=ve):"#"==l?(r.fragment="",m=he):l!=o&&(r.path[0]+=percentEncode(l,H));break;case ve:a||"#"!=l?l!=o&&("'"==l&&isSpecial(r)?r.query+="%27":r.query+="#"==l?"%23":percentEncode(l,H)):(r.fragment="",m=he);break;case he:l!=o&&(r.fragment+=percentEncode(l,V))}v++}},ye=function URL(r){var t,a,o=m(this,ye,"URL"),i=arguments.length>1?arguments[1]:void 0,l=b(r),p=x(o,{type:"URL"});if(void 0!==i)if(i instanceof ye)t=O(i);else if(a=parseURL(t={},b(i)))throw TypeError(a);if(a=parseURL(p,l,null,t))throw TypeError(a);var u=p.searchParams=new I,d=S(u);d.updateSearchParams(p.query),d.updateURL=function(){p.query=String(u)||null},c||(o.href=serializeURL.call(o),o.origin=getOrigin.call(o),o.protocol=getProtocol.call(o),o.username=getUsername.call(o),o.password=getPassword.call(o),o.host=getHost.call(o),o.hostname=getHostname.call(o),o.port=getPort.call(o),o.pathname=getPathname.call(o),o.search=getSearch.call(o),o.searchParams=getSearchParams.call(o),o.hash=getHash.call(o))},ge=ye.prototype,serializeURL=function(){var r=O(this),t=r.scheme,a=r.username,o=r.password,i=r.host,c=r.port,l=r.path,p=r.query,u=r.fragment,d=t+":";return null!==i?(d+="//",includesCredentials(r)&&(d+=a+(o?":"+o:"")+"@"),d+=serializeHost(i),null!==c&&(d+=":"+c)):"file"==t&&(d+="//"),d+=r.cannotBeABaseURL?l[0]:l.length?"/"+l.join("/"):"",null!==p&&(d+="?"+p),null!==u&&(d+="#"+u),d},getOrigin=function(){var r=O(this),t=r.scheme,a=r.port;if("blob"==t)try{return new ye(t.path[0]).origin}catch(r){return"null"}return"file"!=t&&isSpecial(r)?t+"://"+serializeHost(r.host)+(null!==a?":"+a:""):"null"},getProtocol=function(){return O(this).scheme+":"},getUsername=function(){return O(this).username},getPassword=function(){return O(this).password},getHost=function(){var r=O(this),t=r.host,a=r.port;return null===t?"":null===a?serializeHost(t):serializeHost(t)+":"+a},getHostname=function(){var r=O(this).host;return null===r?"":serializeHost(r)},getPort=function(){var r=O(this).port;return null===r?"":String(r)},getPathname=function(){var r=O(this),t=r.path;return r.cannotBeABaseURL?t[0]:t.length?"/"+t.join("/"):""},getSearch=function(){var r=O(this).query;return r?"?"+r:""},getSearchParams=function(){return O(this).searchParams},getHash=function(){var r=O(this).fragment;return r?"#"+r:""},accessorDescriptor=function(r,t){return{get:r,set:t,configurable:!0,enumerable:!0}};if(c&&u(ge,{href:accessorDescriptor(serializeURL,(function(r){var t=O(this),a=b(r),o=parseURL(t,a);if(o)throw TypeError(o);S(t.searchParams).updateSearchParams(t.query)})),origin:accessorDescriptor(getOrigin),protocol:accessorDescriptor(getProtocol,(function(r){var t=O(this);parseURL(t,b(r)+":",Y)})),username:accessorDescriptor(getUsername,(function(r){var t=O(this),a=h(b(r));if(!cannotHaveUsernamePasswordPort(t)){t.username="";for(var o=0;o<a.length;o++)t.username+=percentEncode(a[o],J)}})),password:accessorDescriptor(getPassword,(function(r){var t=O(this),a=h(b(r));if(!cannotHaveUsernamePasswordPort(t)){t.password="";for(var o=0;o<a.length;o++)t.password+=percentEncode(a[o],J)}})),host:accessorDescriptor(getHost,(function(r){var t=O(this);t.cannotBeABaseURL||parseURL(t,b(r),se)})),hostname:accessorDescriptor(getHostname,(function(r){var t=O(this);t.cannotBeABaseURL||parseURL(t,b(r),ce)})),port:accessorDescriptor(getPort,(function(r){var t=O(this);cannotHaveUsernamePasswordPort(t)||(""==(r=b(r))?t.port=null:parseURL(t,r,le))})),pathname:accessorDescriptor(getPathname,(function(r){var t=O(this);t.cannotBeABaseURL||(t.path=[],parseURL(t,b(r),fe))})),search:accessorDescriptor(getSearch,(function(r){var t=O(this);""==(r=b(r))?t.query=null:("?"==r.charAt(0)&&(r=r.slice(1)),t.query="",parseURL(t,r,ve)),S(t.searchParams).updateSearchParams(t.query)})),searchParams:accessorDescriptor(getSearchParams),hash:accessorDescriptor(getHash,(function(r){var t=O(this);""!=(r=b(r))?("#"==r.charAt(0)&&(r=r.slice(1)),t.fragment="",parseURL(t,r,he)):t.fragment=null}))}),d(ge,"toJSON",(function toJSON(){return serializeURL.call(this)}),{enumerable:!0}),d(ge,"toString",(function toString(){return serializeURL.call(this)}),{enumerable:!0}),k){var be=k.createObjectURL,we=k.revokeObjectURL;be&&d(ye,"createObjectURL",(function createObjectURL(r){return be.apply(k,arguments)})),we&&d(ye,"revokeObjectURL",(function revokeObjectURL(r){return we.apply(k,arguments)}))}w(ye,"URL"),i({global:!0,forced:!l,sham:!c},{URL:ye})}},t={};function __webpack_require__(a){var o=t[a];if(void 0!==o){if(void 0!==o.error)throw o.error;return o.exports}var i=t[a]={exports:{}};try{var c={id:a,module:i,factory:r[a],require:__webpack_require__};__webpack_require__.i.forEach((function(r){r(c)})),i=c.module,c.factory.call(i.exports,i,i.exports,c.require)}catch(r){throw i.error=r,r}return i.exports}__webpack_require__.m=r,__webpack_require__.c=t,__webpack_require__.i=[],__webpack_require__.hu=r=>r+"."+__webpack_require__.h()+".hot-update.js",__webpack_require__.hmrF=()=>"common-appinterface."+__webpack_require__.h()+".hot-update.json",__webpack_require__.h=()=>"139815ed15cafe531897",__webpack_require__.o=(r,t)=>Object.prototype.hasOwnProperty.call(r,t),(()=>{var r,t,a,o={},i=__webpack_require__.c,c=[],l=[],p="idle",u=0,d=[];function setStatus(r){p=r;for(var t=[],a=0;a<l.length;a++)t[a]=l[a].call(null,r);return Promise.all(t)}function unblock(){0===--u&&setStatus("ready").then((function(){if(0===u){var r=d;d=[];for(var t=0;t<r.length;t++)r[t]()}}))}function hotCheck(r){if("idle"!==p)throw new Error("check() is only allowed in idle status");return setStatus("check").then(__webpack_require__.hmrM).then((function(a){return a?setStatus("prepare").then((function(){var o=[];return t=[],Promise.all(Object.keys(__webpack_require__.hmrC).reduce((function(r,i){return __webpack_require__.hmrC[i](a.c,a.r,a.m,r,t,o),r}),[])).then((function(){return function waitForBlockingPromises(r){return 0===u?r():new Promise((function(t){d.push((function(){t(r())}))}))}((function(){return r?internalApply(r):setStatus("ready").then((function(){return o}))}))}))})):setStatus(applyInvalidatedModules()?"ready":"idle").then((function(){return null}))}))}function hotApply(r){return"ready"!==p?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+p+")")})):internalApply(r)}function internalApply(r){r=r||{},applyInvalidatedModules();var o=t.map((function(t){return t(r)}));t=void 0;var i=o.map((function(r){return r.error})).filter(Boolean);if(i.length>0)return setStatus("abort").then((function(){throw i[0]}));var c=setStatus("dispose");o.forEach((function(r){r.dispose&&r.dispose()}));var l,p=setStatus("apply"),reportError=function(r){l||(l=r)},u=[];return o.forEach((function(r){if(r.apply){var t=r.apply(reportError);if(t)for(var a=0;a<t.length;a++)u.push(t[a])}})),Promise.all([c,p]).then((function(){return l?setStatus("fail").then((function(){throw l})):a?internalApply(r).then((function(r){return u.forEach((function(t){r.indexOf(t)<0&&r.push(t)})),r})):setStatus("idle").then((function(){return u}))}))}function applyInvalidatedModules(){if(a)return t||(t=[]),Object.keys(__webpack_require__.hmrI).forEach((function(r){a.forEach((function(a){__webpack_require__.hmrI[r](a,t)}))})),a=void 0,!0}__webpack_require__.hmrD=o,__webpack_require__.i.push((function(d){var m=d.module,_=function createRequire(t,a){var o=i[a];if(!o)return t;var fn=function(l){if(o.hot.active){if(i[l]){var p=i[l].parents;-1===p.indexOf(a)&&p.push(a)}else c=[a],r=l;-1===o.children.indexOf(l)&&o.children.push(l)}else console.warn("[HMR] unexpected require("+l+") from disposed module "+a),c=[];return t(l)},createPropertyDescriptor=function(r){return{configurable:!0,enumerable:!0,get:function(){return t[r]},set:function(a){t[r]=a}}};for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&"e"!==l&&Object.defineProperty(fn,l,createPropertyDescriptor(l));return fn.e=function(r){return function trackBlockingPromise(r){switch(p){case"ready":setStatus("prepare");case"prepare":return u++,r.then(unblock,unblock),r;default:return r}}(t.e(r))},fn}(d.require,d.id);m.hot=function createModuleHotObject(i,u){var d=r!==i,m={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:d,_requireSelf:function(){c=u.parents.slice(),r=d?void 0:i,__webpack_require__(i)},active:!0,accept:function(r,t,a){if(void 0===r)m._selfAccepted=!0;else if("function"===typeof r)m._selfAccepted=r;else if("object"===typeof r&&null!==r)for(var o=0;o<r.length;o++)m._acceptedDependencies[r[o]]=t||function(){},m._acceptedErrorHandlers[r[o]]=a;else m._acceptedDependencies[r]=t||function(){},m._acceptedErrorHandlers[r]=a},decline:function(r){if(void 0===r)m._selfDeclined=!0;else if("object"===typeof r&&null!==r)for(var t=0;t<r.length;t++)m._declinedDependencies[r[t]]=!0;else m._declinedDependencies[r]=!0},dispose:function(r){m._disposeHandlers.push(r)},addDisposeHandler:function(r){m._disposeHandlers.push(r)},removeDisposeHandler:function(r){var t=m._disposeHandlers.indexOf(r);t>=0&&m._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,p){case"idle":t=[],Object.keys(__webpack_require__.hmrI).forEach((function(r){__webpack_require__.hmrI[r](i,t)})),setStatus("ready");break;case"ready":Object.keys(__webpack_require__.hmrI).forEach((function(r){__webpack_require__.hmrI[r](i,t)}));break;case"prepare":case"check":case"dispose":case"apply":(a=a||[]).push(i)}},check:hotCheck,apply:hotApply,status:function(r){if(!r)return p;l.push(r)},addStatusHandler:function(r){l.push(r)},removeStatusHandler:function(r){var t=l.indexOf(r);t>=0&&l.splice(t,1)},data:o[i]};return r=void 0,m}(d.id,m),m.parents=c,m.children=[],c=[],d.require=_})),__webpack_require__.hmrC={},__webpack_require__.hmrI={}})(),(()=>{var r,t,a,o,i=__webpack_require__.hmrS_require=__webpack_require__.hmrS_require||{715:1};function loadUpdateChunk(r,a){var i=require("./"+__webpack_require__.hu(r)),c=i.modules,l=i.runtime;for(var p in c)__webpack_require__.o(c,p)&&(t[p]=c[p],a&&a.push(p));l&&o.push(l)}function applyHandler(c){function getAffectedModuleEffects(r){for(var t=[r],a={},o=t.map((function(r){return{chain:[r],id:r}}));o.length>0;){var i=o.pop(),c=i.id,l=i.chain,p=__webpack_require__.c[c];if(p&&(!p.hot._selfAccepted||p.hot._selfInvalidated)){if(p.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:c};if(p.hot._main)return{type:"unaccepted",chain:l,moduleId:c};for(var u=0;u<p.parents.length;u++){var d=p.parents[u],m=__webpack_require__.c[d];if(m){if(m.hot._declinedDependencies[c])return{type:"declined",chain:l.concat([d]),moduleId:c,parentId:d};-1===t.indexOf(d)&&(m.hot._acceptedDependencies[c]?(a[d]||(a[d]=[]),addAllToSet(a[d],[c])):(delete a[d],t.push(d),o.push({chain:l.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:r,outdatedModules:t,outdatedDependencies:a}}function addAllToSet(r,t){for(var a=0;a<t.length;a++){var o=t[a];-1===r.indexOf(o)&&r.push(o)}}__webpack_require__.f&&delete __webpack_require__.f.requireHmr,r=void 0;var l={},p=[],u={},d=function warnUnexpectedRequire(r){console.warn("[HMR] unexpected require("+r.id+") to disposed module")};for(var m in t)if(__webpack_require__.o(t,m)){var _,v=t[m],h=!1,y=!1,g=!1,b="";switch((_=v?getAffectedModuleEffects(m):{type:"disposed",moduleId:m}).chain&&(b="\nUpdate propagation: "+_.chain.join(" -> ")),_.type){case"self-declined":c.onDeclined&&c.onDeclined(_),c.ignoreDeclined||(h=new Error("Aborted because of self decline: "+_.moduleId+b));break;case"declined":c.onDeclined&&c.onDeclined(_),c.ignoreDeclined||(h=new Error("Aborted because of declined dependency: "+_.moduleId+" in "+_.parentId+b));break;case"unaccepted":c.onUnaccepted&&c.onUnaccepted(_),c.ignoreUnaccepted||(h=new Error("Aborted because "+m+" is not accepted"+b));break;case"accepted":c.onAccepted&&c.onAccepted(_),y=!0;break;case"disposed":c.onDisposed&&c.onDisposed(_),g=!0;break;default:throw new Error("Unexception type "+_.type)}if(h)return{error:h};if(y)for(m in u[m]=v,addAllToSet(p,_.outdatedModules),_.outdatedDependencies)__webpack_require__.o(_.outdatedDependencies,m)&&(l[m]||(l[m]=[]),addAllToSet(l[m],_.outdatedDependencies[m]));g&&(addAllToSet(p,[_.moduleId]),u[m]=d)}t=void 0;for(var w,$=[],A=0;A<p.length;A++){var k=p[A],I=__webpack_require__.c[k];I&&(I.hot._selfAccepted||I.hot._main)&&u[k]!==d&&!I.hot._selfInvalidated&&$.push({module:k,require:I.hot._requireSelf,errorHandler:I.hot._selfAccepted})}return{dispose:function(){var r;a.forEach((function(r){delete i[r]})),a=void 0;for(var t,o=p.slice();o.length>0;){var c=o.pop(),u=__webpack_require__.c[c];if(u){var d={},m=u.hot._disposeHandlers;for(A=0;A<m.length;A++)m[A].call(null,d);for(__webpack_require__.hmrD[c]=d,u.hot.active=!1,delete __webpack_require__.c[c],delete l[c],A=0;A<u.children.length;A++){var _=__webpack_require__.c[u.children[A]];_&&((r=_.parents.indexOf(c))>=0&&_.parents.splice(r,1))}}}for(var v in l)if(__webpack_require__.o(l,v)&&(u=__webpack_require__.c[v]))for(w=l[v],A=0;A<w.length;A++)t=w[A],(r=u.children.indexOf(t))>=0&&u.children.splice(r,1)},apply:function(r){for(var t in u)__webpack_require__.o(u,t)&&(__webpack_require__.m[t]=u[t]);for(var a=0;a<o.length;a++)o[a](__webpack_require__);for(var i in l)if(__webpack_require__.o(l,i)){var d=__webpack_require__.c[i];if(d){w=l[i];for(var m=[],_=[],v=[],h=0;h<w.length;h++){var y=w[h],g=d.hot._acceptedDependencies[y],b=d.hot._acceptedErrorHandlers[y];if(g){if(-1!==m.indexOf(g))continue;m.push(g),_.push(b),v.push(y)}}for(var A=0;A<m.length;A++)try{m[A].call(null,w)}catch(t){if("function"===typeof _[A])try{_[A](t,{moduleId:i,dependencyId:v[A]})}catch(a){c.onErrored&&c.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:v[A],error:a,originalError:t}),c.ignoreErrored||(r(a),r(t))}else c.onErrored&&c.onErrored({type:"accept-errored",moduleId:i,dependencyId:v[A],error:t}),c.ignoreErrored||r(t)}}}for(var k=0;k<$.length;k++){var I=$[k],S=I.module;try{I.require(S)}catch(t){if("function"===typeof I.errorHandler)try{I.errorHandler(t,{moduleId:S,module:__webpack_require__.c[S]})}catch(a){c.onErrored&&c.onErrored({type:"self-accept-error-handler-errored",moduleId:S,error:a,originalError:t}),c.ignoreErrored||(r(a),r(t))}else c.onErrored&&c.onErrored({type:"self-accept-errored",moduleId:S,error:t}),c.ignoreErrored||r(t)}}return p}}}__webpack_require__.hmrI.require=function(r,i){t||(t={},o=[],a=[],i.push(applyHandler)),__webpack_require__.o(t,r)||(t[r]=__webpack_require__.m[r])},__webpack_require__.hmrC.require=function(c,l,p,u,d,m){d.push(applyHandler),r={},a=l,t=p.reduce((function(r,t){return r[t]=!1,r}),{}),o=[],c.forEach((function(t){__webpack_require__.o(i,t)&&void 0!==i[t]?(u.push(loadUpdateChunk(t,m)),r[t]=!0):r[t]=!1})),__webpack_require__.f&&(__webpack_require__.f.requireHmr=function(t,a){r&&__webpack_require__.o(r,t)&&!r[t]&&(a.push(loadUpdateChunk(t)),r[t]=!0)})},__webpack_require__.hmrM=function(){return Promise.resolve().then((function(){return require("./"+__webpack_require__.hmrF())})).catch((function(r){if("MODULE_NOT_FOUND"!==r.code)throw r}))}})();__webpack_require__(7781)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UCxJQUFPLEVBQ0pzUCxDQUNSLEdBQUcsQ0FBQyxHQUNKNDVCLEVBQXVCLEdBQ3ZCK0MsRUFBU24vQixTQUFRLFNBQVV3M0IsR0FFekJULG9CQUFvQlksRUFBRTBFLEVBQWlCN0UsU0FDVmpvQyxJQUE3QjhzQyxFQUFnQjdFLElBRWhCNEIsRUFBUzE5QixLQUFLNmdDLGdCQUFnQi9FLEVBQVNnRixJQUN2Q1AsRUFBb0J6RSxJQUFXLEdBRS9CeUUsRUFBb0J6RSxJQUFXLENBRWpDLElBQ0lULG9CQUFvQmx6QixJQUN2Qmt6QixvQkFBb0JsekIsRUFBRXc1QixXQUFhLFNBQVU3RixFQUFTNEIsR0FFcEQ2QyxHQUNBbEYsb0JBQW9CWSxFQUFFc0UsRUFBcUJ6RSxLQUMxQ3lFLEVBQW9CekUsS0FFckI0QixFQUFTMTlCLEtBQUs2Z0MsZ0JBQWdCL0UsSUFDOUJ5RSxFQUFvQnpFLElBQVcsRUFFakMsRUFFRixFQUVBVCxvQkFBb0JpQyxLQUFPLFdBQzFCLE9BQU9QLFFBQVFjLFVBQVVYLE1BQUssV0FDN0IsT0FBT3ZCLFFBQVEsS0FBT04sb0JBQW9CVyxPQUMzQyxJQUFVLE9BQUUsU0FBUzk0QixHQUFPLEdBQWdCLHFCQUFiQSxFQUFJMGtCLEtBQTZCLE1BQU0xa0IsQ0FBSyxHQUM1RSxDLEtDMWQwQm00QixvQkFBb0IsSyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaGVscGVyL2RldmljZUhlbHBlci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vc3JjL2pzL2ludGVyZmFjZS9jYWxsQXBwL2NvbW1vbkludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vc3JjL2pzL2FkZG9ucy9hZGRvbnMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9pbnRlcmZhY2UvY2FsbEFwcC9hcHBJbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9oZWxwZXIvbWVyZ2VIZWxwZXIuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9oZWxwZXIvbWFrZVBhcmFtZXRlci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vc3JjL2pzL2hlbHBlci92YWxpZGF0ZUhlbHBlci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vc3JjL2pzL2hlbHBlci9zY3JlZW5IZWxwZXIuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9oZWxwZXIvY29va2llSGVscGVyLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaGVscGVyL2RvY3VtZW50SGVscGVyLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaW50ZXJmYWNlL2NhbGxXZWIvY29tbW9uSW50ZXJmYWNlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaW50ZXJmYWNlL2NhbGxXZWIvYXBwSW50ZXJmYWNlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvYXBwSW5mby9hcHBJbmZvLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaW50ZXJmYWNlL3V0aWxzL2NvbW1vbkludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vc3JjL2pzL2ludGVyZmFjZS91dGlscy9hcHBJbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9oZWxwZXIvZXJyb3JIZWxwZXIuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9hbXBsaXR1ZGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL3NyYy9qcy9oZWxwZXIvZ2VuZGVySGVscGVyLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9zcmMvanMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hLWNhbGxhYmxlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYS1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2EtcG9zc2libGUtcHJvdG90eXBlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYWR2YW5jZS1zdHJpbmctaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hbi1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LWZvci1lYWNoLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktZnJvbS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWhhcy1zcGVjaWVzLXN1cHBvcnQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY2FsbC13aXRoLXNhZmUtaXRlcmF0aW9uLWNsb3NpbmcuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jaGVjay1jb3JyZWN0bmVzcy1vZi1pdGVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jbGFzc29mLXJhdy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jb3JyZWN0LWlzLXJlZ2V4cC1sb2dpYy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NvcnJlY3QtcHJvdG90eXBlLWdldHRlci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NyZWF0ZS1pdGVyYXRvci1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVmaW5lLWl0ZXJhdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVmaW5lLXdlbGwta25vd24tc3ltYm9sLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb20tdG9rZW4tbGlzdC1wcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS12OC12ZXJzaW9uLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW51bS1idWcta2V5cy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2V4cG9ydC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2ZhaWxzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpYy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLW5hbWUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nZXQtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2V0LW1ldGhvZC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1zdWJzdGl0dXRpb24uanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaGlkZGVuLWtleXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9odG1sLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2luaGVyaXQtaWYtcmVxdWlyZWQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtYXJyYXktaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1jYWxsYWJsZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtZm9yY2VkLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtb2JqZWN0LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtcHVyZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLXJlZ2V4cC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLXN5bWJvbC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2l0ZXJhdG9yLWNsb3NlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXRlcmF0b3JzLWNvcmUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pdGVyYXRvcnMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9uYXRpdmUtdXJsLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvbmF0aXZlLXdlYWstbWFwLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvbm90LWEtcmVnZXhwLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnRpZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLWV4dGVybmFsLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC10by1hcnJheS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC10by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vd24ta2V5cy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3BhdGguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWRlZmluZS1hbGwuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWRlZmluZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtdW5zdXBwb3J0ZWQtZG90LWFsbC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1uY2cuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zYW1lLXZhbHVlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2V0LWdsb2JhbC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NldC1zcGVjaWVzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zaGFyZWQta2V5LmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zdHJpbmctcHVueWNvZGUtdG8tYXNjaWkuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zdHJpbmctdHJpbS1mb3JjZWQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zdHJpbmctdHJpbS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RoaXMtbnVtYmVyLXZhbHVlLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHkuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXkuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90cnktdG8tc3RyaW5nLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdWlkLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdXNlLXN5bWJvbC1hcy11aWQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93aGl0ZXNwYWNlcy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi51cmwtc2VhcmNoLXBhcmFtcy5qcyIsIndlYnBhY2s6Ly9jb21tb24tYXBwaW50ZXJmYWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2Uvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgdXBkYXRlIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2Uvd2VicGFjay9ydW50aW1lL2dldCB1cGRhdGUgbWFuaWZlc3QgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2Uvd2VicGFjay9ydW50aW1lL2hvdCBtb2R1bGUgcmVwbGFjZW1lbnQiLCJ3ZWJwYWNrOi8vY29tbW9uLWFwcGludGVyZmFjZS93ZWJwYWNrL3J1bnRpbWUvcmVxdWlyZSBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2NvbW1vbi1hcHBpbnRlcmZhY2Uvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlzQW5kcm9pZCA9ICgpID0+ICh3aW5kb3cuTXVzaW5zYUFwcEludGVyZmFjZSA/IHRydWUgOiBmYWxzZSk7XG5jb25zdCBpc0lPUyA9ICgpID0+ICh3aW5kb3cud2Via2l0Py5tZXNzYWdlSGFuZGxlcnM/Lk11c2luc2FBcHBJbnRlcmZhY2UgPyB0cnVlIDogZmFsc2UpO1xuXG5jb25zdCBkZXZpY2VDaGVjayA9ICgpID0+IHtcbiAgbGV0IGRldmljZTtcbiAgc3dpdGNoICh0cnVlKSB7XG4gICAgY2FzZSBpc0FuZHJvaWQoKTpcbiAgICAgIGRldmljZSA9ICdhbmRyb2lkJztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgaXNJT1MoKTpcbiAgICAgIGRldmljZSA9ICdpb3MnO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAhaXNBbmRyb2lkKCkgJiYgIWlzSU9TKCk6XG4gICAgICBkZXZpY2UgPSAnbm90TW9iaWxlJztcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gIH1cblxuICByZXR1cm4gZGV2aWNlO1xufTtcblxuLy8g65SU67CU7J207Iqk67OEIOy9nOyVsSDsi6TtlolcbmNvbnN0IGRldmljZUNhbGxBcHAgPSBmdW5jdGlvbiAoZGV2aWNlLCBwYXJhbWV0ZXIpIHtcbiAgY29uc3QgY2FsbEFwcCA9IHtcbiAgICBhbmRyb2lkOiAodikgPT4ge1xuICAgICAgY29uc3QgbWVzc2FnZSA9IGRldmljZT8uYW5kcm9pZCh2KTtcbiAgICAgIGlmICghbWVzc2FnZT8ubmFtZSAmJiAhQXJyYXkuaXNBcnJheShtZXNzYWdlPy5wYXJhbSkpXG4gICAgICAgIHRocm93ICdJbnZhbGlkIGFyZ3VtZW50IHZhbHVlIGZvciBhbmRyb2lkIGZ1bmN0aW9uIGluIGRldmljZUNhbGxBcHAuJztcbiAgICAgIHJldHVybiB3aW5kb3cuTXVzaW5zYUFwcEludGVyZmFjZT8uW21lc3NhZ2UubmFtZV0/LiguLi5tZXNzYWdlLnBhcmFtKTtcbiAgICB9LFxuICAgIGlvczogKHYpID0+IHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBkZXZpY2U/Lmlvcyh2KTtcbiAgICAgIHJldHVybiB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycz8uTXVzaW5zYUFwcEludGVyZmFjZT8ucG9zdE1lc3NhZ2UobWVzc2FnZSk7XG4gICAgfSxcbiAgICBub3RNb2JpbGU6ICh2KSA9PiBkZXZpY2U/Lm5vdE1vYmlsZSh2KSxcbiAgICByb3V0ZXI6IGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHtcbiAgICAgIGNvbnN0IGN1cnJlbnREZXZpY2UgPSBkZXZpY2VDaGVjaygpO1xuICAgICAgaWYgKHR5cGVvZiBkZXZpY2VbY3VycmVudERldmljZV0gIT09ICdmdW5jdGlvbicpIHJldHVybjtcbiAgICAgIHJldHVybiB0aGlzW2N1cnJlbnREZXZpY2VdPy4ocGFyYW1ldGVyKTtcbiAgICB9LFxuICB9O1xuXG4gIHJldHVybiBjYWxsQXBwLnJvdXRlcihwYXJhbWV0ZXIpO1xufTtcblxuY29uc3QgaXNQcm9kID0gKCgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IG9yaWdpbiB9ID0gbmV3IFVSTChsb2NhdGlvbi5ocmVmKTtcbiAgICByZXR1cm4gIVsnYWxwaGEnLCAnZGV2JywgJ2xvY2FsJ10ubWFwKChpKSA9PiBvcmlnaW4uaW5jbHVkZXMoaSkpLmZpbHRlcigoaSkgPT4gaSkubGVuZ3RoO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS53YXJuKGUpO1xuICB9XG4gIHJldHVybiB0cnVlO1xufSkoKTtcblxuZXhwb3J0IHsgaXNBbmRyb2lkLCBpc0lPUywgZGV2aWNlQ2hlY2ssIGRldmljZUNhbGxBcHAsIGlzUHJvZCB9O1xuIiwiaW1wb3J0IHsgaXNQcm9kIH0gZnJvbSAnLi4vLi4vaGVscGVyL2RldmljZUhlbHBlcic7XG5cbmNvbnN0IGNvbW1vbkludGVyZmFjZSA9IHtcbiAgZGVmYXVsdDoge1xuICAgIGlzU3RyaW5naWZ5OiB0cnVlLFxuICAgIHZhbGlkYXRpb246IFtdLFxuICAgIGJlZm9yZUNhbGxiYWNrOiB1bmRlZmluZWQsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtkYXRhLnBhcmFtXSxcbiAgICAgIH07XG4gICAgfSwgLy8sIGZhbHNlLCBmdW5jdGlvblxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogZGF0YS5wYXJhbSxcbiAgICAgIH07XG4gICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZmFsc2UsXG4gIH0sXG4gIGV2ZW50QmFubmVyOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGJlZm9yZUNhbGxiYWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gd2luZG93LkFwcEludGVyZmFjZS5nZXRFdmVudEJhbm5lcigpO1xuICAgIH0sXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtKU09OLnN0cmluZ2lmeShkYXRhLnBhcmFtKV0sXG4gICAgICB9O1xuICAgIH0sXG4gICAgaW9zOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgLy8gQ2FsbCBpT1MgaW50ZXJmYWNlXG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IGRhdGEucGFyYW0sXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmYWxzZSxcbiAgfSxcbiAgc2VuZFRyYW5zaXRpb25HbG9iYWxGaWx0ZXJWaWV3OiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZhbHNlLFxuICAgIGlvczogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29tbWFuZDogJ3RyYW5zaXRpb25HbG9iYWxGaWx0ZXJWaWV3JyxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogbnVsbCxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbiAgLyoqXG4gICAqIFdlYiAtPiBBcHAgR2xvYmFsIEZpbHRlciDqsJIg7Jew64+ZXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqL1xuICBzZXRHbG9iYWxGaWx0ZXI6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgdmFsaWRhdGlvbjogW1xuICAgICAge1xuICAgICAgICB2YWxpZGF0ZTogZnVuY3Rpb24gKHJvb3RPYmopIHtcbiAgICAgICAgICAvLyB0eXBlIOygleydmOyVvO2VqFxuICAgICAgICAgIHJldHVybiBfQXBwSW5mby52YWxpZGF0ZUdmKHJvb3RPYmo/LnBhcmFtPy50eXBlKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdWx0OiBmdW5jdGlvbiAoKSB7fSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICBhbmRyb2lkOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwYXJhbTogW2RhdGEucGFyYW0udHlwZV0sXG4gICAgICB9O1xuICAgIH0sXG4gICAgaW9zOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29tbWFuZDogZGF0YS5uYW1lLFxuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBwYXJhbWV0ZXJzOiB7IHR5cGU6IGRhdGEucGFyYW0udHlwZSB9LFxuICAgICAgfTtcbiAgICB9LFxuICB9LFxuICBwb3BPcGVuZWQ6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtkYXRhLnBhcmFtLm1lc3NhZ2VOYW1lXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAvLyBDYWxsIGlPUyBpbnRlcmZhY2VcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogZGF0YS5wYXJhbS5tZXNzYWdlTmFtZSxcbiAgICAgICAgdmFsdWU6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBObyBBbmRyb2lkIG9yIGlPUyBpbnRlcmZhY2UgZm91bmRcbiAgICAgIGNvbnNvbGUubG9nKCdObyBuYXRpdmUgQVBJcyBmb3VuZC4nKTtcbiAgICB9LFxuICB9LFxuICBwb3BDbG9zZWQ6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgdmFsdWU6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBObyBBbmRyb2lkIG9yIGlPUyBpbnRlcmZhY2UgZm91bmRcbiAgICAgIGNvbnNvbGUubG9nKCdObyBuYXRpdmUgQVBJcyBmb3VuZC4nKTtcbiAgICB9LFxuICB9LFxuICBwb3BDbG9zZWRWMjoge1xuICAgIGlzU3RyaW5naWZ5OiB0cnVlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbJyddLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIC8vIE5PVEUgNC4wLjAg7J207IOBIOyVseyXkOyEnCBHTkIg6rCAIOuCmOyYpOyngCDslYrslYTslbwg7ZWY64qUIOyngOuptOyXkOyEnCDrhbjstpzrkJjripQg7LyA7J207IqkIO2ZleyduOyaqSBwYXJhbWV0ZXJcbiAgICAgICAgICBjdXJyZW50VXJsOiBgJHt3aW5kb3cubG9jYXRpb24uaG9zdH0ke3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZX1gLFxuICAgICAgICB9KSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBub3RNb2JpbGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIE5vIEFuZHJvaWQgb3IgaU9TIGludGVyZmFjZSBmb3VuZFxuICAgICAgY29uc29sZS5sb2coJ05vIG5hdGl2ZSBBUElzIGZvdW5kLicpO1xuICAgIH0sXG4gIH0sXG4gIGhpc3RvcnlCYWNrOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZnVuY3Rpb24gKCkge1xuICAgICAgLyoqXG4gICAgICAgKiBOT1RFIOyDiOywveygleyxheyXkCDrlLDrnbwgd2luZG93Lmhpc3RvcnkubGVuZ3RoIOqwgCAx7J28IOqyveyasCB3aW5kb3cuY2xvc2UoKSDtmLjstpxcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly93aWtpLm11c2luc2EuY29tL3BhZ2VzL3ZpZXdwYWdlLmFjdGlvbj9wYWdlSWQ9MjA3OTUyNzI4XG4gICAgICAgKi9cbiAgICAgIGlmICh3aW5kb3cuaGlzdG9yeS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgd2luZG93LmNsb3NlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICB9LFxuICB9LFxuICBzZWxmQ2xvc2U6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6ICdoaXN0b3J5QmFjaycsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiAnaGlzdG9yeUJhY2snLFxuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgIH07XG4gICAgfSxcbiAgICBub3RNb2JpbGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHNlbGYuY2xvc2UoKTtcbiAgICB9LFxuICB9LFxuICBjbG9zZVBvcHVwOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbZGF0YS5wYXJhbS5yZWZyZXNoLCBkYXRhLnBhcmFtLnJlZmVyZXJdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgIHJlZnJlc2g6IGRhdGEucGFyYW0ucmVmcmVzaCxcbiAgICAgICAgICByZWZlcmVyOiBkYXRhLnBhcmFtLnJlZmVyZXIsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmYWxzZSxcbiAgfSxcbiAgY2xlYXJXaXRoVXJsOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbZGF0YS5wYXJhbS51cmwsIGRhdGEucGFyYW0ubG9nb3V0ZWRdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogeyB1cmw6IGRhdGEucGFyYW0udXJsLCBsb2dvdXRlZDogZGF0YS5wYXJhbS5sb2dvdXRlZCB9LFxuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZGF0YS5wYXJhbS51cmw7XG4gICAgfSxcbiAgfSxcbiAgc2hvd1NoYXJlOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZygnTm8gbmF0aXZlIEFQSXMgZm91bmQuJyk7XG4gICAgfSxcbiAgfSxcbiAgc2hvd0FwcFJhdGluZzoge1xuICAgIGlzU3RyaW5naWZ5OiBmYWxzZSxcbiAgICBhbmRyb2lkOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwYXJhbTogW10sXG4gICAgICB9O1xuICAgIH0sXG4gICAgaW9zOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29tbWFuZDogZGF0YS5uYW1lLFxuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBwYXJhbWV0ZXJzOiBudWxsLFxuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZnVuY3Rpb24gKCkge1xuICAgICAgY29uc29sZS5sb2coJ05vIG5hdGl2ZSBBUElzIGZvdW5kLicpO1xuICAgIH0sXG4gIH0sXG4gIC8qKlxuICAgKiDtloXti7EuXG4gICAqL1xuICB2aWJyYXRlOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIHZhbGlkYXRpb246IFtcbiAgICAgIHtcbiAgICAgICAgdmFsaWRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX0FwcEluZm8uX2lzQXBwO1xuICAgICAgICB9LFxuICAgICAgICByZXN1bHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIF0sXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogbnVsbCxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbiAgYXBwc2ZseWVyQ2FsbDoge1xuICAgIGlzU3RyaW5naWZ5OiBmYWxzZSxcbiAgICBhbmRyb2lkOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgY29uc3Qgc3RyUGFyYW1zID0gSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbS5wYXJhbXMpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwYXJhbTogW2RhdGEucGFyYW0uZXZlbnRJZCwgc3RyUGFyYW1zXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgICBldmVudElkOiBkYXRhLnBhcmFtLmV2ZW50SWQsXG4gICAgICAgICAgcGFyYW1zOiBkYXRhLnBhcmFtLnBhcmFtcyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbiAgc2hvd05hdGl2ZToge1xuICAgIGlzU3RyaW5naWZ5OiBmYWxzZSxcbiAgICBhbmRyb2lkOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwYXJhbTogW2RhdGEucGFyYW0uYXBwU2NoZW1lXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgICBhcHBTY2hlbWU6IGRhdGEucGFyYW0uYXBwU2NoZW1lLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZmFsc2UsXG4gIH0sXG4gIHNob3dTaGFyZU1ldGE6IHtcbiAgICBiZWZvcmVDYWxsYmFjazogZnVuY3Rpb24gKHJvb3RPYmopIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiByb290T2JqLnBhcmFtLnRpdGxlID8/ICcnLFxuICAgICAgICBpbWFnZTogcm9vdE9iai5wYXJhbS5pbWFnZSA/PyAnJyxcbiAgICAgICAgdXJsOiByb290T2JqLnBhcmFtLnVybCA/PyAnJyxcbiAgICAgICAgZGVzY3JpcHRpb246IHJvb3RPYmoucGFyYW0uZGVzY3JpcHRpb24gPz8gJycsXG4gICAgICAgIHR5cGU6IHJvb3RPYmoucGFyYW0udHlwZSA/PyAnJyxcbiAgICAgIH07XG4gICAgfSxcbiAgICBhbmRyb2lkOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwYXJhbTogW2RhdGEucGFyYW1dLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgIGpzb25TdHJpbmc6IGRhdGEucGFyYW0sXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIHNldENvb2tpZXM6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZmFsc2UsXG4gICAgaW9zOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29tbWFuZDogZGF0YS5uYW1lLFxuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICAgICAganNvblN0cmluZzogZGF0YS5wYXJhbS5qc29uU3RyaW5nLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9LFxuICB9LFxuICBhbXBsaXR1ZGVFdmVudExvZzoge1xuICAgIGlzU3RyaW5naWZ5OiB0cnVlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBjb25zdCB7IG5hbWUsIHBhcmFtIH0gPSBkYXRhO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcGFyYW06IFtwYXJhbV0sXG4gICAgICB9O1xuICAgIH0sXG4gICAgaW9zOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgY29uc3QgeyBuYW1lOiBjb21tYW5kLCBwYXJhbSB9ID0gZGF0YTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IHBhcmFtLFxuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdE1vYmlsZTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGlmICghaXNQcm9kKSB7XG4gICAgICAgIGNvbnN0IHsgcGFyYW06IHBhcmFtcyB9ID0gZGF0YTtcbiAgICAgICAgY29uc3QgcGFyYW0gPSBKU09OLnBhcnNlKHBhcmFtcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBldmVudCBuYW1lOiAlYyR7cGFyYW0uZXZlbnROYW1lfWAsICdjb2xvcjogcmVkOycpO1xuICAgICAgICBjb25zb2xlLmxvZygncHJvcGVydGllczonLCBwYXJhbS5sb2cucHJvcGVydGllcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdsb2c6JywgcGFyYW0ubG9nKTtcbiAgICAgICAgY29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKCdObyBuYXRpdmUgQVBJcyBmb3VuZC4nKTtcbiAgICB9LFxuICB9LFxuICBhbXBsaXR1ZGVVc2VySWRlbnRpZnk6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcGFyYW06IHsgdHlwZSwga2V5LCB2YWx1ZSB9LFxuICAgICAgfSA9IGRhdGE7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lLFxuICAgICAgICBwYXJhbTogW0pTT04uc3RyaW5naWZ5KHsgW3R5cGVdOiB7IFtrZXldOiB2YWx1ZSB9IH0pXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIG5hbWU6IGNvbW1hbmQsXG4gICAgICAgIHBhcmFtOiB7IHR5cGUsIGtleSwgdmFsdWUgfSxcbiAgICAgIH0gPSBkYXRhO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29tbWFuZCxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogSlNPTi5zdHJpbmdpZnkoeyBbdHlwZV06IHsgW2tleV06IHZhbHVlIH0gfSksXG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90TW9iaWxlOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgaWYgKCFpc1Byb2QpIHtcbiAgICAgICAgY29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcbiAgICAgICAgY29uc29sZS5sb2coJ3Byb3BlcnRpZXM6JywgZGF0YS5wYXJhbSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZygnTm8gbmF0aXZlIEFQSXMgZm91bmQuJyk7XG4gICAgfSxcbiAgfSxcbiAgLyoqXG4gICAqIOuUlOuwlOydtOyKpOydmCDslbEg7JWM66a8IOyEpOygleydmCDsvJzsoLjsnojripTsp4Ag7Jyg66y066W8IOumrO2EtFxuICAgKi9cbiAgY2hlY2tOb3RpZmljYXRpb25zOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIC8qKlxuICAgKiDrlJTrsJTsnbTsiqTsnZgg7JWxIOyVjOumvCDshKTsoJUg7ZmU66m07Jy866GcIOydtOuPmVxuICAgKi9cbiAgbW92ZURldmljZU5vdGlmaWNhdGlvbnM6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogbnVsbCxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbiAgc2hvd1RvYXN0OiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbSldLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbSksXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIHJlcXVlc3RBcHBzRmx5ZXJDbGllbnREYXRhOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIG15UGhvbmVOdW1iZXJzOiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbXSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBpb3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21tYW5kOiBkYXRhLm5hbWUsXG4gICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgIHBhcmFtZXRlcnM6IG51bGwsXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIHJlcXVlc3RBbXBsaXR1ZGVWYXJpYW50OiB7XG4gICAgaXNTdHJpbmdpZnk6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHBhcmFtOiBbSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbSldLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbSksXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIHNob3dPZmZsaW5lRWRpdG9yaWFsU2hvcFFSU2NhblZpZXc6IHtcbiAgICBpc1N0cmluZ2lmeTogZmFsc2UsXG4gICAgYW5kcm9pZDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgcGFyYW06IFtdLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGlvczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1hbmQ6IGRhdGEubmFtZSxcbiAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgcGFyYW1ldGVyczogbnVsbCxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbW1vbkludGVyZmFjZTtcbiIsImZ1bmN0aW9uIGNoZWNrQWRkb25zKGZ1bmNOYW1lLCBvcmlnaW5GdW5jLCBhcmdzKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShhcmdzKSkge1xuICAgIGFyZ3MgPSBbXTtcbiAgfVxuICBpZiAod2luZG93LkFwcEludGVyZmFjZUFkZG9ucz8uW2Z1bmNOYW1lXSAmJiB0eXBlb2Ygd2luZG93LkFwcEludGVyZmFjZUFkZG9uc1tmdW5jTmFtZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICBhcmdzLnVuc2hpZnQob3JpZ2luRnVuYyk7XG4gICAgcmV0dXJuIHdpbmRvdy5BcHBJbnRlcmZhY2VBZGRvbnNbZnVuY05hbWVdLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG4gIHJldHVybiBvcmlnaW5GdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjaGVja0FkZG9ucztcbiIsImltcG9ydCBjaGVja0FkZG9ucyBmcm9tICcuLi8uLi9hZGRvbnMvYWRkb25zJztcblxuY29uc3QgYXBwSW50ZXJmYWNlID0ge1xuICBzZXRCb3R0b21NZW51OiBmdW5jdGlvbiAoKSB7XG4gICAgLy8gbm8tb3AgKFVzZSAnQ29tbW9uIExheW91dCcgb3B0aW9uLilcbiAgfSxcbiAgZXZlbnRCYW5uZXI6IGZ1bmN0aW9uICgpIHtcbiAgICBjaGVja0FkZG9ucyhcbiAgICAgICdldmVudEJhbm5lcicsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgICAgICBuYW1lOiAnZXZlbnRCYW5uZXInLFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgZXZlbnRCYW5uZXJWMjogZnVuY3Rpb24gKCkge1xuICAgIGNoZWNrQWRkb25zKFxuICAgICAgJ2V2ZW50QmFubmVyVjInLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICAgICAgbmFtZTogJ2V2ZW50QmFubmVyJyxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgT2JqZWN0LnZhbHVlcyhhcmd1bWVudHMpLFxuICAgICk7XG4gIH0sXG4gIHNlbmRUcmFuc2l0aW9uR2xvYmFsRmlsdGVyVmlldzogZnVuY3Rpb24gKCkge1xuICAgIGNoZWNrQWRkb25zKFxuICAgICAgJ3NlbmRUcmFuc2l0aW9uR2xvYmFsRmlsdGVyVmlldycsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgICAgICBuYW1lOiAnc2VuZFRyYW5zaXRpb25HbG9iYWxGaWx0ZXJWaWV3JyxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgT2JqZWN0LnZhbHVlcyhhcmd1bWVudHMpLFxuICAgICk7XG4gIH0sXG4gIHNldEdsb2JhbEZpbHRlcjogZnVuY3Rpb24gKHR5cGUpIHtcbiAgICBjaGVja0FkZG9ucyhcbiAgICAgICdzZXRHbG9iYWxGaWx0ZXInLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICAgICAgbmFtZTogJ3NldEdsb2JhbEZpbHRlcicsXG4gICAgICAgICAgcGFyYW06IHsgdHlwZSB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgcG9wT3BlbmVkOiBmdW5jdGlvbiAoY2xvc2VTY3JpcHQpIHtcbiAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICBuYW1lOiAncG9wT3BlbmVkJyxcbiAgICAgIHBhcmFtOiB7IG1lc3NhZ2VOYW1lOiBjbG9zZVNjcmlwdCB9LFxuICAgIH0pO1xuICB9LFxuICBwb3BDbG9zZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoX0FwcEluZm8uVXBwZXJWZXJzaW9uKCc0LjMuMCcpKSB7XG4gICAgICB0aGlzLnBvcENsb3NlZFYyKCcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKF9BcHBJbmZvLl9vcyA9PT0gJ2lvcycpIHtcbiAgICAgICAgdGhpcy5wb3BDbG9zZWRWMignJyk7XG4gICAgICB9XG4gICAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICAgIG5hbWU6ICdwb3BDbG9zZWQnLFxuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICBwb3BDbG9zZWRWMjogZnVuY3Rpb24gKCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdwb3BDbG9zZWRWMicsXG4gICAgfSk7XG4gIH0sXG4gIGhpc3RvcnlCYWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ2hpc3RvcnlCYWNrJyxcbiAgICB9KTtcbiAgfSxcbiAgc2VsZkNsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ3NlbGZDbG9zZScsXG4gICAgfSk7XG4gIH0sXG4gIGNsb3NlUG9wdXA6IGZ1bmN0aW9uIChyZWZyZXNoLCByZWZlcmVyKSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAnY2xvc2VQb3B1cCcsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgICAgICBuYW1lOiAnY2xvc2VQb3B1cCcsXG4gICAgICAgICAgcGFyYW06IHsgcmVmcmVzaCwgcmVmZXJlciB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgY2xlYXJXaXRoVXJsOiBmdW5jdGlvbiAodXJsLCBsb2dvdXRlZCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdjbGVhcldpdGhVcmwnLFxuICAgICAgcGFyYW06IHsgdXJsLCBsb2dvdXRlZCB9LFxuICAgIH0pO1xuICB9LFxuICBzaG93U2hhcmU6IGZ1bmN0aW9uICgpIHtcbiAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICBuYW1lOiAnc2hvd1NoYXJlJyxcbiAgICB9KTtcbiAgfSxcbiAgc2hvd0FwcFJhdGluZzogZnVuY3Rpb24gKCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdzaG93QXBwUmF0aW5nJyxcbiAgICB9KTtcbiAgfSxcbiAgdmlicmF0ZTogZnVuY3Rpb24gKCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICd2aWJyYXRlJyxcbiAgICB9KTtcbiAgfSxcbiAgYXBwc2ZseWVyQ2FsbDogZnVuY3Rpb24gKGV2ZW50SWQsIHBhcmFtcykge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdhcHBzZmx5ZXJDYWxsJyxcbiAgICAgIHBhcmFtOiB7IGV2ZW50SWQsIHBhcmFtcyB9LFxuICAgIH0pO1xuICB9LFxuICBzaG93TmF0aXZlOiBmdW5jdGlvbiAoYXBwU2NoZW1lKSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAnc2hvd05hdGl2ZScsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgICAgICBuYW1lOiAnc2hvd05hdGl2ZScsXG4gICAgICAgICAgcGFyYW06IHsgYXBwU2NoZW1lIH0sXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIE9iamVjdC52YWx1ZXMoYXJndW1lbnRzKSxcbiAgICApO1xuICB9LFxuICBzaG93U2hhcmVNZXRhOiBmdW5jdGlvbiAodGl0bGUsIGltYWdlLCB1cmwsIGRlc2NyaXB0aW9uLCB0eXBlKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ3Nob3dTaGFyZU1ldGEnLFxuICAgICAgcGFyYW06IHsgdGl0bGUsIGltYWdlLCB1cmwsIGRlc2NyaXB0aW9uLCB0eXBlIH0sXG4gICAgfSk7XG4gIH0sXG4gIHNldENvb2tpZXM6IGZ1bmN0aW9uIChqc29uU3RyaW5nKSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAnc2V0Q29va2llcycsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgICAgICBuYW1lOiAnc2V0Q29va2llcycsXG4gICAgICAgICAgcGFyYW06IHsganNvblN0cmluZyB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgc2VuZEV2ZW50OiBmdW5jdGlvbiAoZXZlbnROYW1lLCBwcm9wZXJ0aWVzKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ2FtcGxpdHVkZUV2ZW50TG9nJyxcbiAgICAgIHBhcmFtOiB7IGV2ZW50TmFtZSwgbG9nOiB7IHByb3BlcnRpZXMgfSB9LFxuICAgIH0pO1xuICB9LFxuICBzZW5kUHVyY2hhc2VFdmVudDogZnVuY3Rpb24gKGxvZykge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdhbXBsaXR1ZGVFdmVudExvZycsXG4gICAgICBwYXJhbTogeyBldmVudE5hbWU6ICdwdXJjaGFzZScsIGxvZyB9LFxuICAgIH0pO1xuICB9LFxuICBzZW5kU2NyZWVuRXZlbnQ6IGZ1bmN0aW9uIChzY3JlZW5OYW1lLCBwcm9wZXJ0aWVzKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ2FtcGxpdHVkZUV2ZW50TG9nJyxcbiAgICAgIHBhcmFtOiB7IGV2ZW50TmFtZTogc2NyZWVuTmFtZSwgbG9nOiB7IHByb3BlcnRpZXMgfSB9LFxuICAgIH0pO1xuICB9LFxuICBpZGVudGlmeVVzZXI6IGZ1bmN0aW9uICh0eXBlLCBrZXksIHZhbHVlKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ2FtcGxpdHVkZVVzZXJJZGVudGlmeScsXG4gICAgICBwYXJhbTogeyB0eXBlLCBrZXksIHZhbHVlIH0sXG4gICAgfSk7XG4gIH0sXG4gIGNoZWNrTm90aWZpY2F0aW9uczogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICBuYW1lOiAnY2hlY2tOb3RpZmljYXRpb25zJyxcbiAgICB9KTtcbiAgfSxcbiAgbW92ZURldmljZU5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uICgpIHtcbiAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICBuYW1lOiAnbW92ZURldmljZU5vdGlmaWNhdGlvbnMnLFxuICAgIH0pO1xuICB9LFxuICBzaG93VG9hc3Q6IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ3Nob3dUb2FzdCcsXG4gICAgICBwYXJhbTogeyBtZXNzYWdlIH0sXG4gICAgfSk7XG4gIH0sXG4gIHJlcXVlc3RBcHBzRmx5ZXJDbGllbnREYXRhOiBmdW5jdGlvbiAoKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ3JlcXVlc3RBcHBzRmx5ZXJDbGllbnREYXRhJyxcbiAgICB9KTtcbiAgfSxcbiAgcmVxdWVzdEFtcGxpdHVkZVZhcmlhbnQ6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBBcHBJbnRlcmZhY2UuY2FsbEFwcCh7XG4gICAgICBuYW1lOiAncmVxdWVzdEFtcGxpdHVkZVZhcmlhbnQnLFxuICAgICAgcGFyYW06IHsga2V5IH0sXG4gICAgfSk7XG4gIH0sXG4gIG15UGhvbmVOdW1iZXJzOiBmdW5jdGlvbiAoKSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxBcHAoe1xuICAgICAgbmFtZTogJ215UGhvbmVOdW1iZXJzJyxcbiAgICB9KTtcbiAgfSxcbiAgc2hvd09mZmxpbmVFZGl0b3JpYWxTaG9wUVJTY2FuVmlldzogZnVuY3Rpb24gKCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsQXBwKHtcbiAgICAgIG5hbWU6ICdzaG93T2ZmbGluZUVkaXRvcmlhbFNob3BRUlNjYW5WaWV3JyxcbiAgICB9KTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFwcEludGVyZmFjZTtcbiIsImNvbnN0IG9iamVjdE1lcmdlID0gKGFjYywgY3VyKSA9PiBPYmplY3QuYXNzaWduKHt9LCBhY2MsIGN1cik7XG5jb25zdCByb290UGFyYW1NZXJnZSA9IChpc1N0cmluZ2lmeSwgcm9vdE9iaiwgZGF0YSkgPT4ge1xuICByZXR1cm4gb2JqZWN0TWVyZ2Uocm9vdE9iaiwge1xuICAgIHBhcmFtOiBpc1N0cmluZ2lmeSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogZGF0YSxcbiAgfSk7XG59O1xuXG5leHBvcnQgeyBvYmplY3RNZXJnZSwgcm9vdFBhcmFtTWVyZ2UgfTtcbiIsImltcG9ydCB7IHJvb3RQYXJhbU1lcmdlIH0gZnJvbSAnLi9tZXJnZUhlbHBlcic7XG5cbmNvbnN0IG1ha2VQYXJhbWV0ZXIgPSBmdW5jdGlvbiAocm9vdE9iaiwgYmVmb3JlQ2FsbGJhY2ssIGlzU3RyaW5naWZ5KSB7XG4gIGNvbnN0IGJlZm9yZURhdGEgPSBiZWZvcmVDYWxsYmFjayA/IGJlZm9yZUNhbGxiYWNrLmNhbGwodGhpcywgcm9vdE9iaikgOiByb290T2JqLnBhcmFtID8/IHt9O1xuICByZXR1cm4gcm9vdFBhcmFtTWVyZ2UoaXNTdHJpbmdpZnksIHJvb3RPYmosIGJlZm9yZURhdGEpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWFrZVBhcmFtZXRlcjtcbiIsImNvbnN0IGludGVyZmFjZVZhbGlkYXRvciA9IGZ1bmN0aW9uIChyb290T2JqLCB2YWxpZGF0aW9uKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsaWRhdGlvbi5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHsgdmFsaWRhdGUsIHJlc3VsdCB9ID0gdmFsaWRhdGlvbltpXTtcbiAgICBpZiAodmFsaWRhdGUuY2FsbCh0aGlzLCByb290T2JqKSkgY29udGludWU7XG4gICAgcmV0dXJuIHJlc3VsdC5jYWxsKHRoaXMpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGludGVyZmFjZVZhbGlkYXRvcjtcbiIsImltcG9ydCBzY3JlZW5NYXAgZnJvbSAnLi4vLi4vLi4vc2NyZWVuLW1hcC5qc29uJztcblxuY29uc3QgZ2V0U2NyZWVuTmFtZSA9IGZ1bmN0aW9uICh1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZikge1xuICBsZXQgcmVzdWx0ID0gJ25vbmUnO1xuICB0cnkge1xuICAgIGNvbnN0IHsgcGF0aG5hbWUsIHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTCh1cmwpO1xuICAgIGNvbnN0IHNjcmVlbnMgPSBzY3JlZW5NYXAuc2NyZWVucztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNjcmVlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBbcmVnID0gJycsIG5hbWUgPSAnJ10gPSBzY3JlZW5zW2ldO1xuICAgICAgY29uc3QgcmVnRXhwID0gbmV3IFJlZ0V4cChyZWcpO1xuICAgICAgY29uc3QgcmVnUmVzdWx0ID0gcmVnRXhwLmV4ZWMoZGVjb2RlVVJJQ29tcG9uZW50KHBhdGhuYW1lKSk7XG5cbiAgICAgIGlmIChyZWdSZXN1bHQpIHtcbiAgICAgICAgcmVzdWx0ID0geyBuYW1lOiBgc2NyZWVuXyR7bmFtZX1gIH07XG4gICAgICAgIHJlZ1Jlc3VsdD8uZ3JvdXBzICYmIChyZXN1bHQuZ3JvdXBzID0gcmVnUmVzdWx0Lmdyb3Vwcyk7XG5cbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2Ygc2VhcmNoUGFyYW1zKSB7XG4gICAgICAgICAgcmVzdWx0LnBhcmFtcyA9IHtcbiAgICAgICAgICAgIC4uLnJlc3VsdC5wYXJhbXMsXG4gICAgICAgICAgICBba2V5XTogdmFsdWUsXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUud2FybihlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0U2NyZWVuTmFtZTtcbiIsImNvbnN0IHNldENvb2tpZSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlLCBleHBpcmUpIHtcbiAgY29uc3QgY29va2llRGF0ZSA9IG5ldyBEYXRlKCk7XG4gIGNvb2tpZURhdGUuc2V0RGF0ZShjb29raWVEYXRlLmdldERhdGUoKSArIHBhcnNlSW50KGV4cGlyZSkpO1xuICBkb2N1bWVudC5jb29raWUgPSBgJHtrZXl9PSR7ZXNjYXBlKHZhbHVlKX07IGV4cGlyZXM9JHtjb29raWVEYXRlLnRvVVRDU3RyaW5nKCl9OyBwYXRoPS87IGRvbWFpbj0ubXVzaW5zYS5jb21gO1xufTtcblxuY29uc3QgZ2V0Q29va2llID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gZG9jdW1lbnQuY29va2llLm1hdGNoKCcoXnw7KSA/JyArIGtleSArICc9KFteO10qKSg7fCQpJyk/LlsyXSB8fCBudWxsO1xufTtcblxuZXhwb3J0IHsgc2V0Q29va2llLCBnZXRDb29raWUgfTtcbiIsImNvbnN0IGdldE1ldGEgPSAoa2V5KSA9PiB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBtZXRhW3Byb3BlcnR5PScke2tleX0nXWApPy5nZXRBdHRyaWJ1dGU/LignY29udGVudCcpIHx8ICcnO1xufTtcblxuY29uc3Qgc25zQWN0aW9uR2V0VGl0bGUgPSAoKSA9PiB7XG4gIHJldHVybiBnZXRNZXRhKCdvZzp0aXRsZScpIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RpdGxlJyk/LnRleHRDb250ZW50IHx8ICfrrLTsi6Dsgqwg7Iqk7Yag7Ja0Jztcbn07XG5cbmNvbnN0IHNuc0FjdGlvbkdldEltYWdlVXJsID0gKCkgPT4ge1xuICByZXR1cm4gZ2V0TWV0YSgnb2c6aW1hZ2UnKSB8fCAnLy9pbWFnZS5tc3NjZG4ubmV0L21maWxlX3MwMS9mYi9zaGFyZV9tdXNpbnNhLnBuZyc7XG59O1xuXG4vKipcbiAqIEdldCBBYnNvbHV0ZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuc1xuICovXG5jb25zdCBnZXRBYnNVUkwgPSAodXJsLCB0eXBlKSA9PiB7XG4gIGlmICh1cmwuaW5kZXhPZignLy8nKSA8IDApIHtcbiAgICBjb25zdCBob3N0ID0gdHlwZSA9PT0gJ2ltYWdlJyA/IFtsb2NhdGlvbi5wcm90b2NvbCwgJ2ltYWdlLm1zc2Nkbi5uZXQnXS5qb2luKCcvLycpIDogbG9jYXRpb24ub3JpZ2luO1xuICAgIHJldHVybiBbaG9zdCwgdXJsLnJlcGxhY2UoL15cXC8rLywgJycpXS5qb2luKCcvJyk7XG4gIH0gZWxzZSBpZiAoIS9eaHR0cChzPyk6XFwvXFwvLy50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gW2xvY2F0aW9uLnByb3RvY29sLCB1cmxdLmpvaW4oJycpO1xuICB9XG4gIHJldHVybiB1cmw7XG59O1xuXG5jb25zdCBnZXRFeHBpcmVzID0gKGV4cGlyZXMpID0+IHtcbiAgY29uc3QgZGF0ZUFycmF5ID0gLyhcXGR7NH0pKFxcZHsyfSkoXFxkezJ9KShcXGR7Mn0pLy5leGVjKGV4cGlyZXMpO1xuICByZXR1cm4gbmV3IERhdGUoXG4gICAgK2RhdGVBcnJheVsxXSxcbiAgICArZGF0ZUFycmF5WzJdIC0gMSwgLy8gQ2FyZWZ1bCwgbW9udGggc3RhcnRzIGF0IDAhXG4gICAgK2RhdGVBcnJheVszXSxcbiAgICArZGF0ZUFycmF5WzRdLFxuICAgIDAsXG4gICAgMCxcbiAgKS5nZXRUaW1lKCk7XG59O1xuXG5jb25zdCByZXBsYWNlUXVlcnlQYXJhbSA9IChwYXJhbSwgbmV3VmFsLCBzZWFyY2gpID0+IHtcbiAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGAoWz87Jl0pKCR7cGFyYW19PSkoW14mO10qKWApO1xuICBpZiAoc2VhcmNoLm1hdGNoKHJlZ2V4KSA9PT0gbnVsbCkgcmV0dXJuIHNlYXJjaDtcbiAgcmV0dXJuIHNlYXJjaFxuICAgIC5yZXBsYWNlKHJlZ2V4LCAoXywgcDEsIHAyKSA9PiB7XG4gICAgICByZXR1cm4gbmV3VmFsID8gW3AxLCBwMiwgbmV3VmFsXS5qb2luKCcnKSA6ICcnO1xuICAgIH0pXG4gICAgLnJlcGxhY2UoL15cXCYvLCAnPycpO1xufTtcblxuZXhwb3J0IHsgZ2V0TWV0YSwgc25zQWN0aW9uR2V0VGl0bGUsIHNuc0FjdGlvbkdldEltYWdlVXJsLCBnZXRBYnNVUkwsIGdldEV4cGlyZXMsIHJlcGxhY2VRdWVyeVBhcmFtIH07XG4iLCJpbXBvcnQgeyBzZXRDb29raWUgfSBmcm9tICcuLi8uLi9oZWxwZXIvY29va2llSGVscGVyJztcbmltcG9ydCB7IGdldE1ldGEsIHNuc0FjdGlvbkdldFRpdGxlLCBzbnNBY3Rpb25HZXRJbWFnZVVybCB9IGZyb20gJy4uLy4uL2hlbHBlci9kb2N1bWVudEhlbHBlcic7XG5cbmNvbnN0IGNvbW1vbldlYkludGVyZmFjZSA9IHtcbiAgZ2V0T3BlbkdyYXBoSW5mbzogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHByaWNlID0gZ2V0TWV0YSgncHJvZHVjdDpwcmljZTphbW91bnQnKTtcbiAgICBjb25zdCBpc0dvb2RzRGV0YWlsUGFnZSA9ICEhcHJpY2U7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogaXNHb29kc0RldGFpbFBhZ2UgPyAncHJvZHVjdCcgOiAnZGVmYXVsdCcsXG4gICAgICB0aXRsZTogc25zQWN0aW9uR2V0VGl0bGUoKSxcbiAgICAgIGltYWdlOiBzbnNBY3Rpb25HZXRJbWFnZVVybCgpLFxuICAgICAgdXJsOiB3aW5kb3cuQXBwSW50ZXJmYWNlLmNvbW1vblNuc0FjdGlvbkdldFVybCgpLFxuICAgICAgZGVzY3JpcHRpb246IGdldE1ldGEoJ29nOmRlc2NyaXB0aW9uJyksXG4gICAgICBicmFuZDogaXNHb29kc0RldGFpbFBhZ2UgPyBnZXRNZXRhKCdwcm9kdWN0OmJyYW5kJykgOiAnJyxcbiAgICAgIGN1cnJlbmN5OiBpc0dvb2RzRGV0YWlsUGFnZSA/IGdldE1ldGEoJ3Byb2R1Y3Q6cHJpY2U6Y3VycmVuY3knKSA6ICcnLFxuICAgICAgcHJpY2UsXG4gICAgICBub3JtYWxfcHJpY2U6IGlzR29vZHNEZXRhaWxQYWdlID8gZ2V0TWV0YSgncHJvZHVjdDpwcmljZTpub3JtYWxfcHJpY2UnKSA6ICcnLFxuICAgICAgc2FsZV9yYXRlOiBpc0dvb2RzRGV0YWlsUGFnZSA/IGdldE1ldGEoJ3Byb2R1Y3Q6cHJpY2U6c2FsZV9yYXRlJykgOiAnJyxcbiAgICAgIHNob3dfc2hhcmVfYnV0dG9uX3luOiB3aW5kb3cuY29tbW9uTGF5b3V0Py5zaGFyZU9wdGlvbnM/LnNldEJvdHRvbU1lbnU/LmlzU2hvd1NoYXJlQnV0dG9uID8gJ1knIDogJ04nLFxuICAgICAgc2VuZF9zaGFyZV9hbmFseXRpY3NfeW46IGdldE1ldGEoJ29nOnNlbmRfc2hhcmVfYW5hbHl0aWNzX3luJykgfHwgJ04nLFxuICAgICAgaXNOZWVkU2hvcnRMaW5rOiAoZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBuZWVkU2hvcnRMaW5rID0gZ2V0TWV0YSgnb2c6bmVlZF9zaG9ydF9saW5rJyk7XG4gICAgICAgIHJldHVybiBuZWVkU2hvcnRMaW5rICE9PSAnZmFsc2UnO1xuICAgICAgfSkoKSxcbiAgICB9O1xuICB9LFxuICBjaGFuZ2VHbG9iYWxGaWx0ZXJUeXBlOiBmdW5jdGlvbiAoeyBnZiB9KSB7XG4gICAgX0FwcEluZm8udmFsaWRhdGVHZihnZik7XG4gICAgc2V0Q29va2llKCdfZ2YnLCBnZiwgMzY1KTtcbiAgICBfQXBwSW5mby5zZXRHZihnZik7XG4gICAgd2luZG93LkFwcEludGVyZmFjZS5yZWxvYWRGb3JDaGFuZ2VGaWx0ZXJUeXBlKCk7XG4gIH0sXG4gIHNlbmRDdXJyZW50R2xvYmFsRmlsdGVyVHlwZTogZnVuY3Rpb24gKHsgY3VycmVudEdmIH0pIHtcbiAgICBpZiAoX0FwcEluZm8uZ2V0R2YoKSA9PT0gJycpIHtcbiAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnYXBwV2ViTG9hZCcpKTtcbiAgICB9IGVsc2UgaWYgKF9BcHBJbmZvLmdldEdmKCkgIT09IGN1cnJlbnRHZikge1xuICAgICAgc2V0Q29va2llKCdfZ2YnLCBjdXJyZW50R2YsIDM2NSk7XG4gICAgICBfQXBwSW5mby5zZXRHZihjdXJyZW50R2YpO1xuICAgICAgd2luZG93LkFwcEludGVyZmFjZS5yZWxvYWRGb3JDaGFuZ2VGaWx0ZXJUeXBlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdpbmRvdy5BcHBJbnRlcmZhY2UuZXZlbnRCYW5uZXIoKTtcbiAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnYXBwV2ViTG9hZCcpKTtcbiAgICB9XG4gIH0sXG4gIHNlbmREZXZpY2VOb3RpZmljYXRpb246IGZ1bmN0aW9uICh7IHN0YXR1cyB9KSB7XG4gICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdzZW5kRGV2aWNlTm90aWZpY2F0aW9uJywgeyBkZXRhaWw6IHsgc3RhdHVzIH0gfSkpO1xuICB9LFxuICBzZW5kQXBwc0ZseWVyQ2xpZW50RGF0YTogZnVuY3Rpb24gKHsgY2xpZW50RGF0YSB9KSB7XG4gICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdzZW5kQXBwc0ZseWVyQ2xpZW50RGF0YScsIHsgZGV0YWlsOiBKU09OLnBhcnNlKGNsaWVudERhdGEpIH0pKTtcbiAgfSxcbiAgc2VuZEFtcGxpdHVkZVZhcmlhbnQ6IGZ1bmN0aW9uICh7IGtleSwgdmFsdWUsIHBheWxvYWQgfSkge1xuICAgIGNvbnN0IHBheWxvYWRQYXJzaW5nRGF0YSA9ICEhcGF5bG9hZCA/IEpTT04ucGFyc2UocGF5bG9hZCkgOiBudWxsO1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KFxuICAgICAgbmV3IEN1c3RvbUV2ZW50KCdzZW5kQW1wbGl0dWRlVmFyaWFudCcsIHsgZGV0YWlsOiB7IGtleSwgdmFsdWUsIHBheWxvYWQ6IHBheWxvYWRQYXJzaW5nRGF0YSB9IH0pLFxuICAgICk7XG4gIH0sXG4gIHVwbG9hZE15UGhvbmVOdW1iZXJzOiBmdW5jdGlvbiAoeyBwaG9uZUluZm8gfSkge1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgndXBsb2FkTXlQaG9uZU51bWJlcnMnLCB7IGRldGFpbDogSlNPTi5wYXJzZShwaG9uZUluZm8pIH0pKTtcbiAgfSxcbiAgZGlkUHJlc3NTZW5kTWVzc2FnZUJ1dHRvbjogZnVuY3Rpb24gKCkge1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnZGlkUHJlc3NTZW5kTWVzc2FnZUJ1dHRvbicpKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbW1vbldlYkludGVyZmFjZTtcbiIsImltcG9ydCBjaGVja0FkZG9ucyBmcm9tICcuLi8uLi9hZGRvbnMvYWRkb25zJztcblxuY29uc3QgYXBwSW50ZXJmYWNlID0ge1xuICBnZXRPcGVuR3JhcGhJbmZvOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIEFwcEludGVyZmFjZS5jYWxsV2ViKHsgbmFtZTogJ2dldE9wZW5HcmFwaEluZm8nIH0pO1xuICB9LFxuICBjaGFuZ2VHbG9iYWxGaWx0ZXJUeXBlOiBmdW5jdGlvbiAoZ2YpIHtcbiAgICBjaGVja0FkZG9ucyhcbiAgICAgICdjaGFuZ2VHbG9iYWxGaWx0ZXJUeXBlJyxcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgQXBwSW50ZXJmYWNlLmNhbGxXZWIoeyBuYW1lOiAnY2hhbmdlR2xvYmFsRmlsdGVyVHlwZScsIHBhcmFtOiB7IGdmIH0gfSk7XG4gICAgICB9LFxuICAgICAgT2JqZWN0LnZhbHVlcyhhcmd1bWVudHMpLFxuICAgICk7XG4gIH0sXG4gIHNlbmRDdXJyZW50R2xvYmFsRmlsdGVyVHlwZTogZnVuY3Rpb24gKGN1cnJlbnRHZikge1xuICAgIGNoZWNrQWRkb25zKFxuICAgICAgJ3NlbmRDdXJyZW50R2xvYmFsRmlsdGVyVHlwZScsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIEFwcEludGVyZmFjZS5jYWxsV2ViKHtcbiAgICAgICAgICBuYW1lOiAnc2VuZEN1cnJlbnRHbG9iYWxGaWx0ZXJUeXBlJyxcbiAgICAgICAgICBwYXJhbTogeyBjdXJyZW50R2YgfSxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgT2JqZWN0LnZhbHVlcyhhcmd1bWVudHMpLFxuICAgICk7XG4gIH0sXG4gIHNlbmREZXZpY2VOb3RpZmljYXRpb246IGZ1bmN0aW9uIChzdGF0dXMpIHtcbiAgICByZXR1cm4gQXBwSW50ZXJmYWNlLmNhbGxXZWIoeyBuYW1lOiAnc2VuZERldmljZU5vdGlmaWNhdGlvbicsIHBhcmFtOiB7IHN0YXR1cyB9IH0pO1xuICB9LFxuICBzZW5kQXBwc0ZseWVyQ2xpZW50RGF0YTogZnVuY3Rpb24gKGNsaWVudERhdGEpIHtcbiAgICByZXR1cm4gQXBwSW50ZXJmYWNlLmNhbGxXZWIoeyBuYW1lOiAnc2VuZEFwcHNGbHllckNsaWVudERhdGEnLCBwYXJhbTogeyBjbGllbnREYXRhIH0gfSk7XG4gIH0sXG4gIHNlbmRBbXBsaXR1ZGVWYXJpYW50OiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgcGF5bG9hZCkge1xuICAgIHJldHVybiBBcHBJbnRlcmZhY2UuY2FsbFdlYih7IG5hbWU6ICdzZW5kQW1wbGl0dWRlVmFyaWFudCcsIHBhcmFtOiB7IGtleSwgdmFsdWUsIHBheWxvYWQgfSB9KTtcbiAgfSxcbiAgdXBsb2FkTXlQaG9uZU51bWJlcnM6IGZ1bmN0aW9uIChwaG9uZUluZm8pIHtcbiAgICByZXR1cm4gQXBwSW50ZXJmYWNlLmNhbGxXZWIoeyBuYW1lOiAndXBsb2FkTXlQaG9uZU51bWJlcnMnLCBwYXJhbTogeyBwaG9uZUluZm8gfSB9KTtcbiAgfSxcbiAgZGlkUHJlc3NTZW5kTWVzc2FnZUJ1dHRvbjogZnVuY3Rpb24gKCkge1xuICAgIEFwcEludGVyZmFjZS5jYWxsV2ViKHsgbmFtZTogJ2RpZFByZXNzU2VuZE1lc3NhZ2VCdXR0b24nIH0pO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwSW50ZXJmYWNlO1xuIiwiaW1wb3J0IHsgZ2V0Q29va2llIH0gZnJvbSAnLi4vaGVscGVyL2Nvb2tpZUhlbHBlcic7XG5cbmNsYXNzIEFwcEluZm8ge1xuICBfaXNBcHAgPSBmYWxzZTtcbiAgX29zID0gJyc7XG4gIF92ZXJzaW9uID0gJyc7XG4gIF92YWxpZEdmcyA9IFsnQScsICdGJywgJ00nXTtcbiAgX2dmID0gJyc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cuVEhJU19QQUdFX0dGID09PSAndW5kZWZpbmVkJykge1xuICAgICAgd2luZG93LlRISVNfUEFHRV9HRiA9ICcnO1xuICAgIH1cbiAgICB0aGlzLnNldEdmKFRISVNfUEFHRV9HRiB8fCBnZXRDb29raWUoJ19nZicpKTtcbiAgICBjb25zdCB1c2VyQWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgYXBwVmVyc2lvbkluZGV4ID0gdXNlckFnZW50LmluZGV4T2YoJzthcHBfdmVyPScpO1xuICAgIHRoaXMuX2lzQXBwID0gYXBwVmVyc2lvbkluZGV4ID49IDA7XG4gICAgaWYgKCF0aGlzLl9pc0FwcCkgcmV0dXJuO1xuXG4gICAgY29uc3QgW29zLCB2ZXJzaW9uXSA9IHVzZXJBZ2VudFxuICAgICAgLnN1YnN0cihhcHBWZXJzaW9uSW5kZXggKyA5LCB1c2VyQWdlbnQubGVuZ3RoIC0gYXBwVmVyc2lvbkluZGV4KVxuICAgICAgLnNwbGl0KCc7JylbMF1cbiAgICAgIC5zcGxpdCgnICcpO1xuICAgIHRoaXMuX29zID0gb3M7XG4gICAgdGhpcy5fdmVyc2lvbiA9IHZlcnNpb247XG4gIH1cblxuICBzZXRHZihnZikge1xuICAgIHRoaXMuX2dmID0gdGhpcy5pc1ZhbGlkR2YoZ2YpID8gZ2YgOiAnJztcbiAgfVxuXG4gIGdldEdmKCkge1xuICAgIHJldHVybiB0aGlzLl9nZjtcbiAgfVxuXG4gIGlzVmFsaWRHZihnZikge1xuICAgIHJldHVybiB0aGlzLl92YWxpZEdmcy5pbmRleE9mKGdmKSA+PSAwO1xuICB9XG5cbiAgdmFsaWRhdGVHZihnZikge1xuICAgIGlmICghdGhpcy5pc1ZhbGlkR2YoZ2YpKSB7XG4gICAgICB0aHJvdyBbXCInXCIsIGdmLCBcIidcIiwgJyBpcyBpbnZhbGlkIHZhbHVlIGZvciBHbG9iYWxGaWx0ZXInXS5qb2luKCcnKTtcbiAgICB9XG4gIH1cblxuICB2ZXJzaW9uQ29tcGFyZSh2MSwgdjIsIG9wdGlvbnMpIHtcbiAgICBsZXQgbGV4aWNvZ3JhcGhpY2FsID0gb3B0aW9ucyAmJiBvcHRpb25zLmxleGljb2dyYXBoaWNhbCxcbiAgICAgIHplcm9FeHRlbmQgPSBvcHRpb25zICYmIG9wdGlvbnMuemVyb0V4dGVuZCxcbiAgICAgIHYxcGFydHMgPSB2MS5zcGxpdCgnLicpLFxuICAgICAgdjJwYXJ0cyA9IHYyLnNwbGl0KCcuJyk7XG5cbiAgICBmdW5jdGlvbiBpc1ZhbGlkUGFydCh4KSB7XG4gICAgICByZXR1cm4gKGxleGljb2dyYXBoaWNhbCA/IC9eXFxkK1tBLVphLXpdKiQvIDogL15cXGQrJC8pLnRlc3QoeCk7XG4gICAgfVxuXG4gICAgaWYgKCF2MXBhcnRzLmV2ZXJ5KGlzVmFsaWRQYXJ0KSB8fCAhdjJwYXJ0cy5ldmVyeShpc1ZhbGlkUGFydCkpIHtcbiAgICAgIHJldHVybiBOYU47XG4gICAgfVxuXG4gICAgaWYgKHplcm9FeHRlbmQpIHtcbiAgICAgIHdoaWxlICh2MXBhcnRzLmxlbmd0aCA8IHYycGFydHMubGVuZ3RoKSB2MXBhcnRzLnB1c2goJzAnKTtcbiAgICAgIHdoaWxlICh2MnBhcnRzLmxlbmd0aCA8IHYxcGFydHMubGVuZ3RoKSB2MnBhcnRzLnB1c2goJzAnKTtcbiAgICB9XG5cbiAgICBpZiAoIWxleGljb2dyYXBoaWNhbCkge1xuICAgICAgdjFwYXJ0cyA9IHYxcGFydHMubWFwKE51bWJlcik7XG4gICAgICB2MnBhcnRzID0gdjJwYXJ0cy5tYXAoTnVtYmVyKTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHYxcGFydHMubGVuZ3RoOyArK2kpIHtcbiAgICAgIGlmICh2MnBhcnRzLmxlbmd0aCA9PT0gaSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH1cblxuICAgICAgaWYgKHYxcGFydHNbaV0gPT09IHYycGFydHNbaV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9IGVsc2UgaWYgKHYxcGFydHNbaV0gPiB2MnBhcnRzW2ldKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh2MXBhcnRzLmxlbmd0aCAhPT0gdjJwYXJ0cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiAtMTtcbiAgICB9XG5cbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIFVwcGVyVmVyc2lvbihjb21wYXJlVmVyc2lvbikge1xuICAgIHJldHVybiB0aGlzLnZlcnNpb25Db21wYXJlKHRoaXMuX3ZlcnNpb24sIGNvbXBhcmVWZXJzaW9uKSA+PSAwO1xuICB9XG5cbiAgTG93ZXJWZXJzaW9uKGNvbXBhcmVWZXJzaW9uKSB7XG4gICAgcmV0dXJuIHRoaXMudmVyc2lvbkNvbXBhcmUodGhpcy5fdmVyc2lvbiwgY29tcGFyZVZlcnNpb24pIDwgMDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHBJbmZvO1xuIiwiaW1wb3J0IHsgZ2V0Q29va2llIH0gZnJvbSAnLi4vLi4vaGVscGVyL2Nvb2tpZUhlbHBlcic7XG5pbXBvcnQgeyBnZXRBYnNVUkwsIGdldEV4cGlyZXMsIGdldE1ldGEsIHJlcGxhY2VRdWVyeVBhcmFtIH0gZnJvbSAnLi4vLi4vaGVscGVyL2RvY3VtZW50SGVscGVyJztcblxuY29uc3QgdXRpbHNJbnRlcmZhY2UgPSB7XG4gIHNldEV2ZW50QmFubmVyOiBmdW5jdGlvbiAoeyBpZHgsIGxpbmtVUkwsIGltYWdlVVJMLCBzdWJqZWN0LCBjb250ZW50LCBleHBpcmVzLCB2aXNpYmxlIH0pIHtcbiAgICB0aGlzLmV2ZW50QmFubmVyRGF0YSA9IHtcbiAgICAgIGlkeDogaWR4ID8gU3RyaW5nKGlkeCkgOiAnJyxcbiAgICAgIGxpbmtVUkw6IGxpbmtVUkwgPyBnZXRBYnNVUkwobGlua1VSTCkudHJpbSgpIDogJycsXG4gICAgICBpbWFnZVVSTDogaW1hZ2VVUkwgPyBnZXRBYnNVUkwoaW1hZ2VVUkwpLnRyaW0oKSA6ICcnLFxuICAgICAgc3ViamVjdDogc3ViamVjdCB8fCAnJyxcbiAgICAgIGNvbnRlbnQ6IGNvbnRlbnQgfHwgJycsXG4gICAgICBleHBpcmVzOiBnZXRFeHBpcmVzKGV4cGlyZXMpIHx8IDAsXG4gICAgICB2aXNpYmxlOiB2aXNpYmxlID09PSAnWScsXG4gICAgfTtcbiAgfSxcblxuICBnZXRFdmVudEJhbm5lcjogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGlkeCA9IHRoaXMuZXZlbnRCYW5uZXJEYXRhID8gdGhpcy5ldmVudEJhbm5lckRhdGEuaWR4IDogJyc7XG4gICAgaWYgKGlkeCAmJiBpZHggPT0gZ2V0Q29va2llKGBtdXNpbnNhX2V2ZW50X2Jhbm5lcl8ke2lkeH1gKSkge1xuICAgICAgdGhpcy5jbGVhckV2ZW50QmFubmVyKCk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICB0aGlzLmV2ZW50QmFubmVyRGF0YSB8fCB7XG4gICAgICAgIGlkeDogJycsIC8vIOydtOuypO2KuCDrsLDrhIgg7JWE7J2065SUXG4gICAgICAgIGxpbmtVUkw6ICcnLCAvLyDrp4HtgaxcbiAgICAgICAgaW1hZ2VVUkw6ICcnLCAvLyDsnbTrr7jsp4Ag6rK966GcXG4gICAgICAgIHN1YmplY3Q6ICcnLCAvLyDsnbTrsqTtirgg67Cw64SIIO2DgOydtO2LgFxuICAgICAgICBjb250ZW50OiAnJywgLy8g7J2067Kk7Yq4IOuwsOuEiCDsu6jthZDsuKBcbiAgICAgICAgZXhwaXJlczogMCwgLy8g7J2067Kk7Yq4IOuwsOuEiCDrp4zro4wg7J287J6QXG4gICAgICAgIHZpc2libGU6IGZhbHNlLCAvLyDrhbjstpwg7Jes67aAXG4gICAgICB9XG4gICAgKTtcbiAgfSxcblxuICBjbGVhckV2ZW50QmFubmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5ldmVudEJhbm5lckRhdGEgPSB7XG4gICAgICBpZHg6ICcnLFxuICAgICAgbGlua1VSTDogJycsXG4gICAgICBpbWFnZVVSTDogJycsXG4gICAgICBzdWJqZWN0OiAnJyxcbiAgICAgIGNvbnRlbnQ6ICcnLFxuICAgICAgZXhwaXJlczogJycsXG4gICAgICB2aXNpYmxlOiB0aGlzLmV2ZW50QmFubmVyRGF0YS52aXNpYmxlIHx8ICdOJyxcbiAgICB9O1xuICB9LFxuXG4gIHJlbG9hZEZvckNoYW5nZUZpbHRlclR5cGU6IGZ1bmN0aW9uICh7IHdpdGhBcHBMb2FkaW5nU3RhcnRFdmVudCB9KSB7XG4gICAgaWYgKHRoaXMuaXNSZWxvYWRXb3JraW5nKSByZXR1cm47XG4gICAgdGhpcy5pc1JlbG9hZFdvcmtpbmcgPSB0cnVlO1xuICAgIGlmICh3aXRoQXBwTG9hZGluZ1N0YXJ0RXZlbnQpIHdpbmRvdy5BcHBJbnRlcmZhY2Uuc2VuZFRyYW5zaXRpb25HbG9iYWxGaWx0ZXJWaWV3KCk7XG4gICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwIH0pO1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgfSxcblxuICBjaGVja1JlbG9hZEZvckdsb2JhbEZpbHRlcjogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGdmID0gX0FwcEluZm8uZ2V0R2YoKTtcbiAgICBpZiAoZ2YgPT09ICcnKSByZXR1cm47XG4gICAgaWYgKCFBcHBJbnRlcmZhY2UuY2FsbFV0aWxzKHsgbmFtZTogJ2lzSU9TJyB9KSAmJiBnZiAhPT0gZ2V0Q29va2llKCdfZ2YnKSkge1xuICAgICAgLy8gbm8tY2FjaGUg7Y6Y7J207KeAKGV4IOy6oO2OmOyduCnsl5DshJwg64yA7ZWcIHJlbG9hZCgpIOyymOumrFxuICAgICAgd2luZG93LkFwcEludGVyZmFjZS5yZWxvYWRGb3JDaGFuZ2VGaWx0ZXJUeXBlKCk7XG4gICAgfVxuICB9LFxuXG4gIGlzSU9TOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICEhd2luZG93LndlYmtpdD8ubWVzc2FnZUhhbmRsZXJzPy5NdXNpbnNhQXBwSW50ZXJmYWNlO1xuICB9LFxuXG4gIGlzQW5kcm9pZDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhIXdpbmRvdy5NdXNpbnNhQXBwSW50ZXJmYWNlO1xuICB9LFxuXG4gIGNvbW1vblNuc0FjdGlvbkdldFVybDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBnZXRNZXRhKCdvZzp1cmwnKSB8fCBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuICB9LFxuXG4gIHJlbW92ZUdmUGFyYW1ldGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IG5ld1F1ZXJ5U3RyaW5nID0gcmVwbGFjZVF1ZXJ5UGFyYW0oJ19nZicsICcnLCB3aW5kb3cubG9jYXRpb24uc2VhcmNoKTtcbiAgICBpZiAod2luZG93LmxvY2F0aW9uLnNlYXJjaCAhPT0gbmV3UXVlcnlTdHJpbmcpIHtcbiAgICAgIGlmIChuZXdRdWVyeVN0cmluZyA9PT0gJycpIHtcbiAgICAgICAgbmV3UXVlcnlTdHJpbmcgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XG4gICAgICB9XG4gICAgICBoaXN0b3J5LnJlcGxhY2VTdGF0ZShudWxsLCAnJywgbmV3UXVlcnlTdHJpbmcgKyB3aW5kb3cubG9jYXRpb24uaGFzaCk7XG4gICAgfVxuICB9LFxuXG4gIG9wZW5XZWJ2aWV3OiBmdW5jdGlvbiAoeyBldiB9KSB7XG4gICAgY29uc3QgZXZlbnQgPSBldiB8fCB3aW5kb3cuZXZlbnQ7XG4gICAgaWYgKHdpbmRvdy5fQXBwSW5mby5fb3MgPT09ICdhbmRyb2lkJyAmJiBldmVudC5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSgndGFyZ2V0JykgIT09ICdfYmxhbmsnKSB7XG4gICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuICAgIH1cbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHV0aWxzSW50ZXJmYWNlO1xuIiwiaW1wb3J0IGNoZWNrQWRkb25zIGZyb20gJy4uLy4uL2FkZG9ucy9hZGRvbnMnO1xuXG5jb25zdCBhcHBJbnRlcmZhY2UgPSB7XG4gIGV2ZW50QmFubmVyRGF0YTogbnVsbCxcbiAgaXNSZWxvYWRXb3JraW5nOiBmYWxzZSxcbiAgc2V0RXZlbnRCYW5uZXI6IGZ1bmN0aW9uIChpZHgsIGxpbmtVUkwsIGltYWdlVVJMLCBzdWJqZWN0LCBjb250ZW50LCBleHBpcmVzLCB2aXNpYmxlKSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAnc2V0RXZlbnRCYW5uZXInLFxuICAgICAgZnVuY3Rpb24gKGlkeCwgbGlua1VSTCwgaW1hZ2VVUkwsIHN1YmplY3QsIGNvbnRlbnQsIGV4cGlyZXMsIHZpc2libGUpIHtcbiAgICAgICAgd2luZG93LkFwcEludGVyZmFjZS5jYWxsVXRpbHMoe1xuICAgICAgICAgIG5hbWU6ICdzZXRFdmVudEJhbm5lcicsXG4gICAgICAgICAgcGFyYW06IHsgaWR4LCBsaW5rVVJMLCBpbWFnZVVSTCwgc3ViamVjdCwgY29udGVudCwgZXhwaXJlcywgdmlzaWJsZSB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgZ2V0RXZlbnRCYW5uZXI6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY2hlY2tBZGRvbnMoXG4gICAgICAnZ2V0RXZlbnRCYW5uZXInLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gd2luZG93LkFwcEludGVyZmFjZS5jYWxsVXRpbHMoe1xuICAgICAgICAgIG5hbWU6ICdnZXRFdmVudEJhbm5lcicsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIE9iamVjdC52YWx1ZXMoYXJndW1lbnRzKSxcbiAgICApO1xuICB9LFxuICBjbGVhckV2ZW50QmFubmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAnY2xlYXJFdmVudEJhbm5lcicsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5BcHBJbnRlcmZhY2UuY2FsbFV0aWxzKHtcbiAgICAgICAgICBuYW1lOiAnY2xlYXJFdmVudEJhbm5lcicsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIE9iamVjdC52YWx1ZXMoYXJndW1lbnRzKSxcbiAgICApO1xuICB9LFxuICByZWxvYWRGb3JDaGFuZ2VGaWx0ZXJUeXBlOiBmdW5jdGlvbiAod2l0aEFwcExvYWRpbmdTdGFydEV2ZW50KSB7XG4gICAgY2hlY2tBZGRvbnMoXG4gICAgICAncmVsb2FkRm9yQ2hhbmdlRmlsdGVyVHlwZScsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5BcHBJbnRlcmZhY2UuY2FsbFV0aWxzKHtcbiAgICAgICAgICBuYW1lOiAncmVsb2FkRm9yQ2hhbmdlRmlsdGVyVHlwZScsXG4gICAgICAgICAgcGFyYW06IHtcbiAgICAgICAgICAgIHdpdGhBcHBMb2FkaW5nU3RhcnRFdmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBPYmplY3QudmFsdWVzKGFyZ3VtZW50cyksXG4gICAgKTtcbiAgfSxcbiAgY2hlY2tSZWxvYWRGb3JHbG9iYWxGaWx0ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICB3aW5kb3cuQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7XG4gICAgICBuYW1lOiAnY2hlY2tSZWxvYWRGb3JHbG9iYWxGaWx0ZXInLFxuICAgIH0pO1xuICB9LFxuICBpc0lPUzogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB3aW5kb3cuQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7IG5hbWU6ICdpc0lPUycgfSk7XG4gIH0sXG4gIGlzQW5kcm9pZDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB3aW5kb3cuQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7IG5hbWU6ICdpc0FuZHJvaWQnIH0pO1xuICB9LFxuICAvLyBBZGRvbnMg7IKs7Jqp7ZWY64qUIOqzs+ydtCDsnojsnYxcbiAgY29tbW9uU25zQWN0aW9uR2V0VXJsOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNoZWNrQWRkb25zKFxuICAgICAgJ2NvbW1vblNuc0FjdGlvbkdldFVybCcsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7XG4gICAgICAgICAgbmFtZTogJ2NvbW1vblNuc0FjdGlvbkdldFVybCcsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIE9iamVjdC52YWx1ZXMoYXJndW1lbnRzKSxcbiAgICApO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwSW50ZXJmYWNlO1xuIiwiY29uc3QgdGhyb3dFcnJvciA9IGZ1bmN0aW9uIChtc2cpIHtcbiAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB0aHJvd0Vycm9yO1xuIiwiaW1wb3J0IHRocm93RXJyb3IgZnJvbSAnLi4vaGVscGVyL2Vycm9ySGVscGVyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQW1wbGl0dWRlIHtcbiAgUFJFRklYID0gJ2RhdGEtYW1wJztcbiAgbXV0YXRpb25Db25maWcgPSB7XG4gICAgc3VidHJlZTogdHJ1ZSxcbiAgICBjaGlsZExpc3Q6IHRydWUsXG4gICAgYXR0cmlidXRlczogdHJ1ZSxcbiAgfTtcblxuICBpbml0KCkge1xuICAgIHRoaXMuYmluZENsaWNrRXZlbnQoKTtcbiAgICB0aGlzLmJpbmRNdXRhdGlvbk9ic2VydmVyKCk7XG4gIH1cblxuICBiaW5kTXV0YXRpb25PYnNlcnZlcigpIHtcbiAgICBjb25zdCBtdXRhaW9uT2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcih0aGlzLmNiTXV0YXRpb24uYmluZCh0aGlzKSk7XG4gICAgbXV0YWlvbk9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgdGhpcy5tdXRhdGlvbkNvbmZpZyk7XG4gIH1cblxuICBjYk11dGF0aW9uKG11dGF0aW9uUmVjb3JkKSB7XG4gICAgY29uc3QgW3sgYWRkZWROb2RlcywgdHlwZSwgdGFyZ2V0IH1dID0gbXV0YXRpb25SZWNvcmQ7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlICdjaGlsZExpc3QnOlxuICAgICAgICBbLi4uYWRkZWROb2Rlc10uZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgICBpZiAoZWwgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiAhZWwuZGF0YXNldC5hbXBFdmVudFR5cGUpIHJldHVybjtcbiAgICAgICAgICB0aGlzLmJpbmRDbGlja0V2ZW50KGVsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYXR0cmlidXRlcyc6XG4gICAgICAgIGNvbnN0IHsgYW1wRXZlbnRUeXBlLCBhbXBEaXJ0eSB9ID0gdGFyZ2V0LmRhdGFzZXQ7XG4gICAgICAgIGlmICgodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgIWFtcEV2ZW50VHlwZSkgfHwgYW1wRGlydHkgPT09ICd0cnVlJykgcmV0dXJuO1xuICAgICAgICB0aGlzLmJpbmRDbGlja0V2ZW50KHRhcmdldCk7XG4gICAgfVxuICB9XG5cbiAgYmluZENsaWNrRXZlbnQodGFyZ2V0KSB7XG4gICAgY29uc3QgY2xpY2tFbGVtcyA9XG4gICAgICB0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCA/IFt0YXJnZXRdIDogZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yQWxsKGBbJHt0aGlzLlBSRUZJWH0tZXZlbnQtdHlwZSo9XCJjbGlja1wiXWApO1xuXG4gICAgaWYgKCFjbGlja0VsZW1zICYmICFjbGlja0VsZW1zLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgWy4uLmNsaWNrRWxlbXNdLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuc2VuZENsaWNrRXZlbnQpO1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnNlbmRDbGlja0V2ZW50KTtcbiAgICAgIGVsLmRhdGFzZXQuYW1wRGlydHkgPSAndHJ1ZSc7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog66+47IKs7JqpIOuplOyGjOuTnFxuICAgKiBkYXRhLWFtcC0qIOyDge2DnOqwkiDrjbDsnbTthLAg6rCd7LK066GcIOy2lOy2nFxuICAgKiBAcGFyYW0gSFRNTEVsZW1lbnRcbiAgICogQHJldHVybnMge2tleTogc3RyaW5nfVxuICAgKi9cbiAgZ2V0RGF0YXNldChlbGVtKSB7XG4gICAgcmV0dXJuIFsuLi5lbGVtLmF0dHJpYnV0ZXNdLnJlZHVjZShcbiAgICAgIChhY2MsIHsgbmFtZSwgdmFsdWUgfSkgPT5cbiAgICAgICAgIW5hbWUuc3RhcnRzV2l0aCh0aGlzLlBSRUZJWClcbiAgICAgICAgICA/IGFjY1xuICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgIFtuYW1lLnJlcGxhY2UoYCR7dGhpcy5QUkVGSVh9LWAsICcnKS5yZXBsYWNlKC8tL2csICdfJyldOiB2YWx1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICB7fSxcbiAgICApO1xuICB9XG5cbiAgc2VuZENsaWNrRXZlbnQgPSAoeyBjdXJyZW50VGFyZ2V0IH0pID0+IHtcbiAgICBjb25zdCB7IGFtcEV2ZW50VHlwZSwgYW1wRXZlbnROYW1lLCBhbXBQcm9wZXJ0aWVzIH0gPSBjdXJyZW50VGFyZ2V0LmRhdGFzZXQ7XG4gICAgbGV0IHByb3BzO1xuICAgIHRyeSB7XG4gICAgICBwcm9wcyA9IEpTT04ucGFyc2UoYW1wUHJvcGVydGllcyB8fCAne30nKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93RXJyb3IoYEZhaWxlZCB0byBwYXJzZSBhdHRyaWJ1dGUuKFwiJHt0aGlzLlBSRUZJWH0tcHJvcGVydGllc1wiKVxcbiR7ZXJyfWApO1xuICAgIH1cblxuICAgIGlmICghcHJvcHMuZnJvbSkge1xuICAgICAgY29uc3QgZnJvbVNjcmVlbiA9IHdpbmRvdy5BcHBJbnRlcmZhY2UuZ2V0U2NyZWVuTmFtZSgpO1xuICAgICAgZnJvbVNjcmVlbj8ubmFtZSAmJiAocHJvcHMuZnJvbSA9IGZyb21TY3JlZW4ubmFtZSk7XG4gICAgfVxuICAgIGNvbnN0IHsgdGFnTmFtZSwgaHJlZiB9ID0gY3VycmVudFRhcmdldDtcbiAgICBpZiAoIXByb3BzLnRvICYmIHRhZ05hbWUgPT09ICdBJykge1xuICAgICAgY29uc3QgeyBwYXRobmFtZSB9ID0gbmV3IFVSTChocmVmKTtcbiAgICAgIGlmICghcGF0aG5hbWUuc3RhcnRzV2l0aCgnIycpKSB7XG4gICAgICAgIGNvbnN0IHRvU2NyZWVuID0gd2luZG93LkFwcEludGVyZmFjZS5nZXRTY3JlZW5OYW1lKGhyZWYpO1xuICAgICAgICB0b1NjcmVlbj8ubmFtZSAmJiAocHJvcHMudG8gPSB0b1NjcmVlbi5uYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnNlbmRFdmVudChhbXBFdmVudFR5cGUsIGFtcEV2ZW50TmFtZSwgcHJvcHMpO1xuICB9O1xuXG4gIHNlbmRFdmVudCh0eXBlLCBuYW1lLCBwcm9wcykge1xuICAgIGlmICh0eXBlLmluY2x1ZGVzKCdjbGljaycpKSB3aW5kb3cuQXBwSW50ZXJmYWNlLnNlbmRFdmVudChuYW1lLCBwcm9wcyk7XG4gIH1cbn1cbiIsImltcG9ydCB7IGdldENvb2tpZSwgc2V0Q29va2llIH0gZnJvbSAnLi9jb29raWVIZWxwZXInO1xuXG5jb25zdCBHTE9CQUxfRklMVEVSX0tFWSA9ICdnZic7XG5jb25zdCBHTE9CQUxfRklMVEVSX0NPT0tJRV9LRVkgPSAnX2dmJztcbi8vIGNvbnN0IEdFTkRFUl9RVUVSWV9LRVkgPSAnZ2VuZGVyJztcbmNvbnN0IE9ORV9ZRUFSID0gMzY1O1xuY29uc3QgR0VOREVSX0tFWSA9IHtcbiAgQTogJ0EnLFxuICBNOiAnTScsXG4gIEY6ICdGJyxcbn07XG5cbmNvbnN0IHNldEFwcEluZm9HZiA9IChnZikgPT4ge1xuICBfQXBwSW5mby52YWxpZGF0ZUdmKGdmKTtcbiAgX0FwcEluZm8uc2V0R2YoZ2YpO1xufTtcblxuY29uc3Qgc2V0Q29va2llVG9VbmRlckJhckdsb2JhbEZpbHRlckdmID0gKGdmKSA9PiB7XG4gIHNldENvb2tpZShHTE9CQUxfRklMVEVSX0NPT0tJRV9LRVksIGdmLCBPTkVfWUVBUik7XG59O1xuXG5jb25zdCBzZXRHZW5kZXIgPSAoZ2YpID0+IHtcbiAgc2V0Q29va2llVG9VbmRlckJhckdsb2JhbEZpbHRlckdmKGdmKTtcbiAgc2V0QXBwSW5mb0dmKGdmKTtcbn07XG5cbmNvbnN0IGdldFF1ZXJ5VW5kZXJCYXJHbG9iYWxGaWx0ZXJHZiA9IChzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gpID0+IHtcbiAgY29uc3Qgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhzZWFyY2gpO1xuICBpZiAoc2VhcmNoUGFyYW1zLmhhcyhHTE9CQUxfRklMVEVSX0NPT0tJRV9LRVkpKSB7XG4gICAgcmV0dXJuIHNlYXJjaFBhcmFtcy5nZXQoR0xPQkFMX0ZJTFRFUl9DT09LSUVfS0VZKTtcbiAgfVxufTtcblxuY29uc3QgZ2V0R2YgPSAoc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoKSA9PiB7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKTtcbiAgaWYgKHNlYXJjaFBhcmFtcy5oYXMoR0xPQkFMX0ZJTFRFUl9LRVkpKSB7XG4gICAgcmV0dXJuIHNlYXJjaFBhcmFtcy5nZXQoR0xPQkFMX0ZJTFRFUl9LRVkpO1xuICB9XG59O1xuXG5jb25zdCBpc0ludmFsaWRHZW5kZXIgPSAodmFsdWUpID0+IHZhbHVlIGluIEdFTkRFUl9LRVk7XG5cbmNvbnN0IHNldEludmFsaWRHbG9iYWxGaWx0ZXJUb0dlbmRlclZhbHVlID0gKHZhbHVlKSA9PiAoaXNJbnZhbGlkR2VuZGVyKHZhbHVlKSA/IHZhbHVlIDogJ0EnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHN5bmNHZW5kZXJRdWVyeVRvQ29va2llKHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCkge1xuICBjb25zdCBnZiA9IGdldEdmKHNlYXJjaCk7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKTtcbiAgY29uc3QgdW5kZXJCYXJHbG9iYWxGaWx0ZXJHZiA9IGdldFF1ZXJ5VW5kZXJCYXJHbG9iYWxGaWx0ZXJHZihzZWFyY2gpO1xuICBjb25zdCBjb29raWVVbmRlckJhckdsb2JhbEZpbHRlckdmID0gZ2V0Q29va2llKEdMT0JBTF9GSUxURVJfQ09PS0lFX0tFWSk7XG4gIGxldCBnZW5kZXJWYWx1ZSA9IEdFTkRFUl9LRVkuQTtcblxuICBpZiAodW5kZXJCYXJHbG9iYWxGaWx0ZXJHZikge1xuICAgIGdlbmRlclZhbHVlID0gc2V0SW52YWxpZEdsb2JhbEZpbHRlclRvR2VuZGVyVmFsdWUodW5kZXJCYXJHbG9iYWxGaWx0ZXJHZik7XG4gICAgc2VhcmNoUGFyYW1zLmRlbGV0ZShHTE9CQUxfRklMVEVSX0NPT0tJRV9LRVkpO1xuICB9IGVsc2UgaWYgKGdmKSB7XG4gICAgZ2VuZGVyVmFsdWUgPSBzZXRJbnZhbGlkR2xvYmFsRmlsdGVyVG9HZW5kZXJWYWx1ZShnZik7XG4gIH0gZWxzZSBpZiAoY29va2llVW5kZXJCYXJHbG9iYWxGaWx0ZXJHZiAmJiBjb29raWVVbmRlckJhckdsb2JhbEZpbHRlckdmICE9PSBzZWFyY2hQYXJhbXMuZ2V0KEdMT0JBTF9GSUxURVJfS0VZKSkge1xuICAgIGdlbmRlclZhbHVlID0gc2V0SW52YWxpZEdsb2JhbEZpbHRlclRvR2VuZGVyVmFsdWUoY29va2llVW5kZXJCYXJHbG9iYWxGaWx0ZXJHZik7XG4gIH1cblxuICBzZWFyY2hQYXJhbXMuc2V0KEdMT0JBTF9GSUxURVJfS0VZLCBnZW5kZXJWYWx1ZSk7XG4gIHNldEdlbmRlcihnZW5kZXJWYWx1ZSk7XG4gIGhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsICcnLCBgPyR7c2VhcmNoUGFyYW1zLnRvU3RyaW5nKCl9YCk7XG5cbiAgcmV0dXJuO1xufVxuIiwiaW1wb3J0IGNvbW1vbkludGVyZmFjZSBmcm9tICcuL2ludGVyZmFjZS9jYWxsQXBwL2NvbW1vbkludGVyZmFjZSc7XG5pbXBvcnQgY2FsbEFwcEFwcEludGVyZmFjZSBmcm9tICcuL2ludGVyZmFjZS9jYWxsQXBwL2FwcEludGVyZmFjZSc7XG5pbXBvcnQgeyBvYmplY3RNZXJnZSB9IGZyb20gJy4vaGVscGVyL21lcmdlSGVscGVyJztcbmltcG9ydCBtYWtlUGFyYW1ldGVyIGZyb20gJy4vaGVscGVyL21ha2VQYXJhbWV0ZXInO1xuaW1wb3J0IGludGVyZmFjZVZhbGlkYXRvciBmcm9tICcuL2hlbHBlci92YWxpZGF0ZUhlbHBlcic7XG5pbXBvcnQgeyBkZXZpY2VDYWxsQXBwIH0gZnJvbSAnLi9oZWxwZXIvZGV2aWNlSGVscGVyJztcbmltcG9ydCBnZXRTY3JlZW5OYW1lIGZyb20gJy4vaGVscGVyL3NjcmVlbkhlbHBlcic7XG5pbXBvcnQgY29tbW9uV2ViSW50ZXJmYWNlIGZyb20gJy4vaW50ZXJmYWNlL2NhbGxXZWIvY29tbW9uSW50ZXJmYWNlJztcbmltcG9ydCBjYWxsV2ViQXBwSW50ZXJmYWNlIGZyb20gJy4vaW50ZXJmYWNlL2NhbGxXZWIvYXBwSW50ZXJmYWNlJztcbmltcG9ydCBBcHBJbmZvIGZyb20gJy4vYXBwSW5mby9hcHBJbmZvJztcbmltcG9ydCBVdGlscyBmcm9tICcuL2ludGVyZmFjZS91dGlscy9jb21tb25JbnRlcmZhY2UnO1xuaW1wb3J0IHV0aWxzQXBwSW50ZXJmYWNlIGZyb20gJy4vaW50ZXJmYWNlL3V0aWxzL2FwcEludGVyZmFjZSc7XG5pbXBvcnQgQW1wbGl0dWRlIGZyb20gJy4vYW1wbGl0dWRlJztcbmltcG9ydCB7IHN5bmNHZW5kZXJRdWVyeVRvQ29va2llIH0gZnJvbSAnLi9oZWxwZXIvZ2VuZGVySGVscGVyJztcblxud2luZG93LkFwcEludGVyZmFjZSA9IG9iamVjdE1lcmdlKHdpbmRvdy5BcHBJbnRlcmZhY2UgPz8ge30sIHtcbiAgLi4uY2FsbEFwcEFwcEludGVyZmFjZSxcbiAgLi4uY2FsbFdlYkFwcEludGVyZmFjZSxcbiAgLi4udXRpbHNBcHBJbnRlcmZhY2UsXG59KTtcblxud2luZG93LkFwcEludGVyZmFjZS5jYWxsQXBwID0gKGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgX2NhbGxBcHAgPSBmdW5jdGlvbiAocm9vdE9iaikge1xuICAgIGNvbnN0IHN0YXRlID0gb2JqZWN0TWVyZ2UoY29tbW9uSW50ZXJmYWNlWydkZWZhdWx0J10sIGNvbW1vbkludGVyZmFjZVtyb290T2JqLm5hbWVdKTtcbiAgICBjb25zdCB7IHZhbGlkYXRpb24sIGJlZm9yZUNhbGxiYWNrLCBhbmRyb2lkLCBpb3MsIG5vdE1vYmlsZSwgaXNTdHJpbmdpZnkgfSA9IHN0YXRlO1xuXG4gICAgLy8gY29tbW9uSW50ZXJmYWNl7JeQIOuTseuhneuQnCB2YWxpZGF0aW9uIOqygOymnVxuICAgIGlmIChpbnRlcmZhY2VWYWxpZGF0b3IuY2FsbCh0aGlzLCByb290T2JqLCB2YWxpZGF0aW9uKSkgcmV0dXJuO1xuICAgIGNvbnN0IHBhcmFtZXRlciA9IG1ha2VQYXJhbWV0ZXIuY2FsbCh0aGlzLCByb290T2JqLCBiZWZvcmVDYWxsYmFjaywgaXNTdHJpbmdpZnkpO1xuXG4gICAgLy8g65SU67CU7J207Iqk67OEIOy9nOyVsSDtmLjstpxcbiAgICByZXR1cm4gZGV2aWNlQ2FsbEFwcCh7IGFuZHJvaWQsIGlvcywgbm90TW9iaWxlIH0sIHBhcmFtZXRlcik7XG4gIH07XG5cbiAgY29uc3QgY2FsbEFwcCA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICBpZiAoIWNvbW1vbkludGVyZmFjZVtvYmoubmFtZV0pIHRocm93IGAke29iai5uYW1lfSBpcyB1bmRlZmluZWQuYDtcbiAgICByZXR1cm4gX2NhbGxBcHAuY2FsbCh0aGlzLCBvYmopO1xuICB9O1xuXG4gIHJldHVybiBjYWxsQXBwO1xufSkoKTtcblxud2luZG93LkFwcEludGVyZmFjZS5jYWxsV2ViID0gKGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgY2FsbFdlYiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICBpZiAoIWNvbW1vbldlYkludGVyZmFjZVtvYmoubmFtZV0pIHRocm93IGAke29iai5uYW1lfSBpcyB1bmRlZmluZWQuYDtcbiAgICByZXR1cm4gY29tbW9uV2ViSW50ZXJmYWNlW29iai5uYW1lXS5jYWxsKHRoaXMsIG9iai5wYXJhbSA/PyB7fSk7XG4gIH07XG4gIHJldHVybiBjYWxsV2ViO1xufSkoKTtcblxud2luZG93LkFwcEludGVyZmFjZS5jYWxsVXRpbHMgPSAoZnVuY3Rpb24gKCkge1xuICBjb25zdCBjYWxsVXRpbHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgaWYgKCFVdGlsc1tvYmoubmFtZV0pIHRocm93IGAke29iai5uYW1lfSBpcyB1bmRlZmluZWQuYDtcbiAgICByZXR1cm4gVXRpbHNbb2JqLm5hbWVdLmNhbGwodGhpcywgb2JqLnBhcmFtID8/IHt9KTtcbiAgfTtcbiAgcmV0dXJuIGNhbGxVdGlscztcbn0pKCk7XG5cbndpbmRvdy5fQXBwSW5mbyA9IG5ldyBBcHBJbmZvKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIGlmICh3aW5kb3c/Ll9fTVNTX0ZFX18/LmNvbmZpZz8uZ2VuZGVyPy5zeW5jUXVlcnlUb0Nvb2tpZSkge1xuICAgIHN5bmNHZW5kZXJRdWVyeVRvQ29va2llKCk7XG4gIH0gZWxzZSB7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7IG5hbWU6ICdyZW1vdmVHZlBhcmFtZXRlcicgfSk7XG4gICAgQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7IG5hbWU6ICdjaGVja1JlbG9hZEZvckdsb2JhbEZpbHRlcicgfSk7XG4gIH1cbn0pKCk7XG5cbndpbmRvdy5BcHBJbnRlcmZhY2Uub3BlbldlYnZpZXcgPSAoZXYpID0+IHtcbiAgQXBwSW50ZXJmYWNlLmNhbGxVdGlscyh7IG5hbWU6ICdvcGVuV2VidmlldycsIHBhcmFtOiB7IGV2IH0gfSk7XG59O1xuXG53aW5kb3cuQXBwSW50ZXJmYWNlLmdldFNjcmVlbk5hbWUgPSBnZXRTY3JlZW5OYW1lO1xuXG5jb25zdCBhbXBsaXR1ZGUgPSBuZXcgQW1wbGl0dWRlKCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgYW1wbGl0dWRlLmluaXQoKTtcbn0pO1xuIiwidmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciB0cnlUb1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90cnktdG8tc3RyaW5nJyk7XG5cbi8vIGBBc3NlcnQ6IElzQ2FsbGFibGUoYXJndW1lbnQpIGlzIHRydWVgXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNDYWxsYWJsZShhcmd1bWVudCkpIHJldHVybiBhcmd1bWVudDtcbiAgdGhyb3cgVHlwZUVycm9yKHRyeVRvU3RyaW5nKGFyZ3VtZW50KSArICcgaXMgbm90IGEgZnVuY3Rpb24nKTtcbn07XG4iLCJ2YXIgaXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jb25zdHJ1Y3RvcicpO1xudmFyIHRyeVRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RyeS10by1zdHJpbmcnKTtcblxuLy8gYEFzc2VydDogSXNDb25zdHJ1Y3Rvcihhcmd1bWVudCkgaXMgdHJ1ZWBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChpc0NvbnN0cnVjdG9yKGFyZ3VtZW50KSkgcmV0dXJuIGFyZ3VtZW50O1xuICB0aHJvdyBUeXBlRXJyb3IodHJ5VG9TdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgYSBjb25zdHJ1Y3RvcicpO1xufTtcbiIsInZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmICh0eXBlb2YgYXJndW1lbnQgPT09ICdvYmplY3QnIHx8IGlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IHNldCBcIiArIFN0cmluZyhhcmd1bWVudCkgKyAnIGFzIGEgcHJvdG90eXBlJyk7XG59O1xuIiwidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xuXG52YXIgVU5TQ09QQUJMRVMgPSB3ZWxsS25vd25TeW1ib2woJ3Vuc2NvcGFibGVzJyk7XG52YXIgQXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG5cbi8vIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUtQEB1bnNjb3BhYmxlc1xuaWYgKEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXSA9PSB1bmRlZmluZWQpIHtcbiAgZGVmaW5lUHJvcGVydHlNb2R1bGUuZihBcnJheVByb3RvdHlwZSwgVU5TQ09QQUJMRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGNyZWF0ZShudWxsKVxuICB9KTtcbn1cblxuLy8gYWRkIGEga2V5IHRvIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2hhckF0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGUnKS5jaGFyQXQ7XG5cbi8vIGBBZHZhbmNlU3RyaW5nSW5kZXhgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gY2hhckF0KFMsIGluZGV4KS5sZW5ndGggOiAxKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgQ29uc3RydWN0b3IsIG5hbWUpIHtcbiAgaWYgKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpIHJldHVybiBpdDtcbiAgdGhyb3cgVHlwZUVycm9yKCdJbmNvcnJlY3QgJyArIChuYW1lID8gbmFtZSArICcgJyA6ICcnKSArICdpbnZvY2F0aW9uJyk7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG4vLyBgQXNzZXJ0OiBUeXBlKGFyZ3VtZW50KSBpcyBPYmplY3RgXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNPYmplY3QoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IFR5cGVFcnJvcihTdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgYW4gb2JqZWN0Jyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRmb3JFYWNoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvbicpLmZvckVhY2g7XG52YXIgYXJyYXlNZXRob2RJc1N0cmljdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0Jyk7XG5cbnZhciBTVFJJQ1RfTUVUSE9EID0gYXJyYXlNZXRob2RJc1N0cmljdCgnZm9yRWFjaCcpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmZvckVhY2hgIG1ldGhvZCBpbXBsZW1lbnRhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZm9yZWFjaFxubW9kdWxlLmV4cG9ydHMgPSAhU1RSSUNUX01FVEhPRCA/IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgcmV0dXJuICRmb3JFYWNoKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1wcm90b3R5cGUtZm9yZWFjaCAtLSBzYWZlXG59IDogW10uZm9yRWFjaDtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGNhbGxXaXRoU2FmZUl0ZXJhdGlvbkNsb3NpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2FsbC13aXRoLXNhZmUtaXRlcmF0aW9uLWNsb3NpbmcnKTtcbnZhciBpc0FycmF5SXRlcmF0b3JNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXktaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgaXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jb25zdHJ1Y3RvcicpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlcmF0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yJyk7XG52YXIgZ2V0SXRlcmF0b3JNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4vLyBgQXJyYXkuZnJvbWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LmZyb21cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gIHZhciBJU19DT05TVFJVQ1RPUiA9IGlzQ29uc3RydWN0b3IodGhpcyk7XG4gIHZhciBhcmd1bWVudHNMZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgbWFwZm4gPSBhcmd1bWVudHNMZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gIGlmIChtYXBwaW5nKSBtYXBmbiA9IGJpbmQobWFwZm4sIGFyZ3VtZW50c0xlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpO1xuICB2YXIgaXRlcmF0b3JNZXRob2QgPSBnZXRJdGVyYXRvck1ldGhvZChPKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvciwgbmV4dCwgdmFsdWU7XG4gIC8vIGlmIHRoZSB0YXJnZXQgaXMgbm90IGl0ZXJhYmxlIG9yIGl0J3MgYW4gYXJyYXkgd2l0aCB0aGUgZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBhIHNpbXBsZSBjYXNlXG4gIGlmIChpdGVyYXRvck1ldGhvZCAmJiAhKHRoaXMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXJhdG9yTWV0aG9kKGl0ZXJhdG9yTWV0aG9kKSkpIHtcbiAgICBpdGVyYXRvciA9IGdldEl0ZXJhdG9yKE8sIGl0ZXJhdG9yTWV0aG9kKTtcbiAgICBuZXh0ID0gaXRlcmF0b3IubmV4dDtcbiAgICByZXN1bHQgPSBJU19DT05TVFJVQ1RPUiA/IG5ldyB0aGlzKCkgOiBbXTtcbiAgICBmb3IgKDshKHN0ZXAgPSBuZXh0LmNhbGwoaXRlcmF0b3IpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICB2YWx1ZSA9IG1hcHBpbmcgPyBjYWxsV2l0aFNhZmVJdGVyYXRpb25DbG9zaW5nKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlO1xuICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgdmFsdWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsZW5ndGggPSBsZW5ndGhPZkFycmF5TGlrZShPKTtcbiAgICByZXN1bHQgPSBJU19DT05TVFJVQ1RPUiA/IG5ldyB0aGlzKGxlbmd0aCkgOiBBcnJheShsZW5ndGgpO1xuICAgIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICB2YWx1ZSA9IG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF07XG4gICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCB2YWx1ZSk7XG4gICAgfVxuICB9XG4gIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCJ2YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgbGVuZ3RoT2ZBcnJheUxpa2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbGVuZ3RoLW9mLWFycmF5LWxpa2UnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS57IGluZGV4T2YsIGluY2x1ZGVzIH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gbGVuZ3RoT2ZBcnJheUxpa2UoTyk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgIGlmICgoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykgJiYgT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4gIGluY2x1ZGVzOiBjcmVhdGVNZXRob2QodHJ1ZSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuaW5kZXhPZmAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluZGV4b2ZcbiAgaW5kZXhPZjogY3JlYXRlTWV0aG9kKGZhbHNlKVxufTtcbiIsInZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBsZW5ndGhPZkFycmF5TGlrZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZScpO1xudmFyIGFycmF5U3BlY2llc0NyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG52YXIgcHVzaCA9IFtdLnB1c2g7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBmb3JFYWNoLCBtYXAsIGZpbHRlciwgc29tZSwgZXZlcnksIGZpbmQsIGZpbmRJbmRleCwgZmlsdGVyUmVqZWN0IH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoVFlQRSkge1xuICB2YXIgSVNfTUFQID0gVFlQRSA9PSAxO1xuICB2YXIgSVNfRklMVEVSID0gVFlQRSA9PSAyO1xuICB2YXIgSVNfU09NRSA9IFRZUEUgPT0gMztcbiAgdmFyIElTX0VWRVJZID0gVFlQRSA9PSA0O1xuICB2YXIgSVNfRklORF9JTkRFWCA9IFRZUEUgPT0gNjtcbiAgdmFyIElTX0ZJTFRFUl9SRUpFQ1QgPSBUWVBFID09IDc7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYO1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBjYWxsYmFja2ZuLCB0aGF0LCBzcGVjaWZpY0NyZWF0ZSkge1xuICAgIHZhciBPID0gdG9PYmplY3QoJHRoaXMpO1xuICAgIHZhciBzZWxmID0gSW5kZXhlZE9iamVjdChPKTtcbiAgICB2YXIgYm91bmRGdW5jdGlvbiA9IGJpbmQoY2FsbGJhY2tmbiwgdGhhdCwgMyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKHNlbGYpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGNyZWF0ZSA9IHNwZWNpZmljQ3JlYXRlIHx8IGFycmF5U3BlY2llc0NyZWF0ZTtcbiAgICB2YXIgdGFyZ2V0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSIHx8IElTX0ZJTFRFUl9SRUpFQ1QgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkO1xuICAgIHZhciB2YWx1ZSwgcmVzdWx0O1xuICAgIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoTk9fSE9MRVMgfHwgaW5kZXggaW4gc2VsZikge1xuICAgICAgdmFsdWUgPSBzZWxmW2luZGV4XTtcbiAgICAgIHJlc3VsdCA9IGJvdW5kRnVuY3Rpb24odmFsdWUsIGluZGV4LCBPKTtcbiAgICAgIGlmIChUWVBFKSB7XG4gICAgICAgIGlmIChJU19NQVApIHRhcmdldFtpbmRleF0gPSByZXN1bHQ7IC8vIG1hcFxuICAgICAgICBlbHNlIGlmIChyZXN1bHQpIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgMzogcmV0dXJuIHRydWU7ICAgICAgICAgICAgICAvLyBzb21lXG4gICAgICAgICAgY2FzZSA1OiByZXR1cm4gdmFsdWU7ICAgICAgICAgICAgIC8vIGZpbmRcbiAgICAgICAgICBjYXNlIDY6IHJldHVybiBpbmRleDsgICAgICAgICAgICAgLy8gZmluZEluZGV4XG4gICAgICAgICAgY2FzZSAyOiBwdXNoLmNhbGwodGFyZ2V0LCB2YWx1ZSk7IC8vIGZpbHRlclxuICAgICAgICB9IGVsc2Ugc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSA0OiByZXR1cm4gZmFsc2U7ICAgICAgICAgICAgIC8vIGV2ZXJ5XG4gICAgICAgICAgY2FzZSA3OiBwdXNoLmNhbGwodGFyZ2V0LCB2YWx1ZSk7IC8vIGZpbHRlclJlamVjdFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBJU19GSU5EX0lOREVYID8gLTEgOiBJU19TT01FIHx8IElTX0VWRVJZID8gSVNfRVZFUlkgOiB0YXJnZXQ7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5mb3JFYWNoYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZm9yZWFjaFxuICBmb3JFYWNoOiBjcmVhdGVNZXRob2QoMCksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUubWFwYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUubWFwXG4gIG1hcDogY3JlYXRlTWV0aG9kKDEpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmZpbHRlcmAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZpbHRlclxuICBmaWx0ZXI6IGNyZWF0ZU1ldGhvZCgyKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5zb21lYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuc29tZVxuICBzb21lOiBjcmVhdGVNZXRob2QoMyksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZXZlcnlgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5ldmVyeVxuICBldmVyeTogY3JlYXRlTWV0aG9kKDQpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmZpbmRgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maW5kXG4gIGZpbmQ6IGNyZWF0ZU1ldGhvZCg1KSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXhgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maW5kSW5kZXhcbiAgZmluZEluZGV4OiBjcmVhdGVNZXRob2QoNiksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyUmVqZWN0YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtYXJyYXktZmlsdGVyaW5nXG4gIGZpbHRlclJlamVjdDogY3JlYXRlTWV0aG9kKDcpXG59O1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgVjhfVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvbicpO1xuXG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChNRVRIT0RfTkFNRSkge1xuICAvLyBXZSBjYW4ndCB1c2UgdGhpcyBmZWF0dXJlIGRldGVjdGlvbiBpbiBWOCBzaW5jZSBpdCBjYXVzZXNcbiAgLy8gZGVvcHRpbWl6YXRpb24gYW5kIHNlcmlvdXMgcGVyZm9ybWFuY2UgZGVncmFkYXRpb25cbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzY3N1xuICByZXR1cm4gVjhfVkVSU0lPTiA+PSA1MSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcnJheSA9IFtdO1xuICAgIHZhciBjb25zdHJ1Y3RvciA9IGFycmF5LmNvbnN0cnVjdG9yID0ge307XG4gICAgY29uc3RydWN0b3JbU1BFQ0lFU10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4geyBmb286IDEgfTtcbiAgICB9O1xuICAgIHJldHVybiBhcnJheVtNRVRIT0RfTkFNRV0oQm9vbGVhbikuZm9vICE9PSAxO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUsIGFyZ3VtZW50KSB7XG4gIHZhciBtZXRob2QgPSBbXVtNRVRIT0RfTkFNRV07XG4gIHJldHVybiAhIW1ldGhvZCAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtY2FsbCxuby10aHJvdy1saXRlcmFsIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gICAgbWV0aG9kLmNhbGwobnVsbCwgYXJndW1lbnQgfHwgZnVuY3Rpb24gKCkgeyB0aHJvdyAxOyB9LCAxKTtcbiAgfSk7XG59O1xuIiwidmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXknKTtcbnZhciBpc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNvbnN0cnVjdG9yJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBTUEVDSUVTID0gd2VsbEtub3duU3ltYm9sKCdzcGVjaWVzJyk7XG5cbi8vIGEgcGFydCBvZiBgQXJyYXlTcGVjaWVzQ3JlYXRlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXlzcGVjaWVzY3JlYXRlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbEFycmF5KSB7XG4gIHZhciBDO1xuICBpZiAoaXNBcnJheShvcmlnaW5hbEFycmF5KSkge1xuICAgIEMgPSBvcmlnaW5hbEFycmF5LmNvbnN0cnVjdG9yO1xuICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgaWYgKGlzQ29uc3RydWN0b3IoQykgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBlbHNlIGlmIChpc09iamVjdChDKSkge1xuICAgICAgQyA9IENbU1BFQ0lFU107XG4gICAgICBpZiAoQyA9PT0gbnVsbCkgQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/IEFycmF5IDogQztcbn07XG4iLCJ2YXIgYXJyYXlTcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuXG4vLyBgQXJyYXlTcGVjaWVzQ3JlYXRlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXlzcGVjaWVzY3JlYXRlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbEFycmF5LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoYXJyYXlTcGVjaWVzQ29uc3RydWN0b3Iob3JpZ2luYWxBcnJheSkpKGxlbmd0aCA9PT0gMCA/IDAgOiBsZW5ndGgpO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBpdGVyYXRvckNsb3NlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9yLWNsb3NlJyk7XG5cbi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3Jcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIEVOVFJJRVMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gRU5UUklFUyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsICd0aHJvdycsIGVycm9yKTtcbiAgfVxufTtcbiIsInZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIElURVJBVE9SID0gd2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgY2FsbGVkID0gMDtcbiAgdmFyIGl0ZXJhdG9yV2l0aFJldHVybiA9IHtcbiAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4geyBkb25lOiAhIWNhbGxlZCsrIH07XG4gICAgfSxcbiAgICAncmV0dXJuJzogZnVuY3Rpb24gKCkge1xuICAgICAgU0FGRV9DTE9TSU5HID0gdHJ1ZTtcbiAgICB9XG4gIH07XG4gIGl0ZXJhdG9yV2l0aFJldHVybltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1mcm9tLCBuby10aHJvdy1saXRlcmFsIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIEFycmF5LmZyb20oaXRlcmF0b3JXaXRoUmV0dXJuLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBTS0lQX0NMT1NJTkcpIHtcbiAgaWYgKCFTS0lQX0NMT1NJTkcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgSVRFUkFUSU9OX1NVUFBPUlQgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgb2JqZWN0ID0ge307XG4gICAgb2JqZWN0W0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4geyBkb25lOiBJVEVSQVRJT05fU1VQUE9SVCA9IHRydWUgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIGV4ZWMob2JqZWN0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gSVRFUkFUSU9OX1NVUFBPUlQ7XG59O1xuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuIiwidmFyIFRPX1NUUklOR19UQUdfU1VQUE9SVCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY2xhc3NvZlJhdyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgVE9fU1RSSU5HX1RBRyA9IHdlbGxLbm93blN5bWJvbCgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQ09SUkVDVF9BUkdVTUVOVFMgPSBjbGFzc29mUmF3KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG4vLyBnZXR0aW5nIHRhZyBmcm9tIEVTNisgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgXG5tb2R1bGUuZXhwb3J0cyA9IFRPX1NUUklOR19UQUdfU1VQUE9SVCA/IGNsYXNzb2ZSYXcgOiBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIHRhZywgcmVzdWx0O1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAodGFnID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUT19TVFJJTkdfVEFHKSkgPT0gJ3N0cmluZycgPyB0YWdcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IENPUlJFQ1RfQVJHVU1FTlRTID8gY2xhc3NvZlJhdyhPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChyZXN1bHQgPSBjbGFzc29mUmF3KE8pKSA9PSAnT2JqZWN0JyAmJiBpc0NhbGxhYmxlKE8uY2FsbGVlKSA/ICdBcmd1bWVudHMnIDogcmVzdWx0O1xufTtcbiIsInZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIG93bktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3duLWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgdmFyIGtleXMgPSBvd25LZXlzKHNvdXJjZSk7XG4gIHZhciBkZWZpbmVQcm9wZXJ0eSA9IGRlZmluZVByb3BlcnR5TW9kdWxlLmY7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUuZjtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgaWYgKCFoYXNPd24odGFyZ2V0LCBrZXkpKSBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7XG4gIH1cbn07XG4iLCJ2YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBNQVRDSCA9IHdlbGxLbm93blN5bWJvbCgnbWF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUpIHtcbiAgdmFyIHJlZ2V4cCA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tNRVRIT0RfTkFNRV0ocmVnZXhwKTtcbiAgfSBjYXRjaCAoZXJyb3IxKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlZ2V4cFtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAnLy4vJ1tNRVRIT0RfTkFNRV0ocmVnZXhwKTtcbiAgICB9IGNhdGNoIChlcnJvcjIpIHsgLyogZW1wdHkgKi8gfVxuICB9IHJldHVybiBmYWxzZTtcbn07XG4iLCJ2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIEYucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gbnVsbDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRwcm90b3R5cGVvZiAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG5ldyBGKCkpICE9PSBGLnByb3RvdHlwZTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlJykuSXRlcmF0b3JQcm90b3R5cGU7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvcnMnKTtcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJdGVyYXRvckNvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIHZhciBUT19TVFJJTkdfVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICBJdGVyYXRvckNvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yQ29uc3RydWN0b3IsIFRPX1NUUklOR19UQUcsIGZhbHNlLCB0cnVlKTtcbiAgSXRlcmF0b3JzW1RPX1NUUklOR19UQUddID0gcmV0dXJuVGhpcztcbiAgcmV0dXJuIEl0ZXJhdG9yQ29uc3RydWN0b3I7XG59O1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERFU0NSSVBUT1JTID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZGVmaW5lUHJvcGVydHlNb2R1bGUuZihvYmplY3QsIGtleSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9Qcm9wZXJ0eUtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXknKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICB2YXIgcHJvcGVydHlLZXkgPSB0b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChwcm9wZXJ0eUtleSBpbiBvYmplY3QpIGRlZmluZVByb3BlcnR5TW9kdWxlLmYob2JqZWN0LCBwcm9wZXJ0eUtleSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIHZhbHVlKSk7XG4gIGVsc2Ugb2JqZWN0W3Byb3BlcnR5S2V5XSA9IHZhbHVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xudmFyIEZ1bmN0aW9uTmFtZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1uYW1lJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXJhdG9yLWNvbnN0cnVjdG9yJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1wcm90b3R5cGUtb2YnKTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZicpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycycpO1xudmFyIEl0ZXJhdG9yc0NvcmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3JzLWNvcmUnKTtcblxudmFyIFBST1BFUl9GVU5DVElPTl9OQU1FID0gRnVuY3Rpb25OYW1lLlBST1BFUjtcbnZhciBDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSA9IEZ1bmN0aW9uTmFtZS5DT05GSUdVUkFCTEU7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSBJdGVyYXRvcnNDb3JlLkl0ZXJhdG9yUHJvdG90eXBlO1xudmFyIEJVR0dZX1NBRkFSSV9JVEVSQVRPUlMgPSBJdGVyYXRvcnNDb3JlLkJVR0dZX1NBRkFSSV9JVEVSQVRPUlM7XG52YXIgSVRFUkFUT1IgPSB3ZWxsS25vd25TeW1ib2woJ2l0ZXJhdG9yJyk7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcbnZhciBFTlRSSUVTID0gJ2VudHJpZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEl0ZXJhYmxlLCBOQU1FLCBJdGVyYXRvckNvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICBjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yKEl0ZXJhdG9yQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuXG4gIHZhciBnZXRJdGVyYXRpb25NZXRob2QgPSBmdW5jdGlvbiAoS0lORCkge1xuICAgIGlmIChLSU5EID09PSBERUZBVUxUICYmIGRlZmF1bHRJdGVyYXRvcikgcmV0dXJuIGRlZmF1bHRJdGVyYXRvcjtcbiAgICBpZiAoIUJVR0dZX1NBRkFSSV9JVEVSQVRPUlMgJiYgS0lORCBpbiBJdGVyYWJsZVByb3RvdHlwZSkgcmV0dXJuIEl0ZXJhYmxlUHJvdG90eXBlW0tJTkRdO1xuICAgIHN3aXRjaCAoS0lORCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBJdGVyYXRvckNvbnN0cnVjdG9yKHRoaXMsIEtJTkQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgSXRlcmF0b3JDb25zdHJ1Y3Rvcih0aGlzLCBLSU5EKTsgfTtcbiAgICAgIGNhc2UgRU5UUklFUzogcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgSXRlcmF0b3JDb25zdHJ1Y3Rvcih0aGlzLCBLSU5EKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgSXRlcmF0b3JDb25zdHJ1Y3Rvcih0aGlzKTsgfTtcbiAgfTtcblxuICB2YXIgVE9fU1RSSU5HX1RBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIElOQ09SUkVDVF9WQUxVRVNfTkFNRSA9IGZhbHNlO1xuICB2YXIgSXRlcmFibGVQcm90b3R5cGUgPSBJdGVyYWJsZS5wcm90b3R5cGU7XG4gIHZhciBuYXRpdmVJdGVyYXRvciA9IEl0ZXJhYmxlUHJvdG90eXBlW0lURVJBVE9SXVxuICAgIHx8IEl0ZXJhYmxlUHJvdG90eXBlWydAQGl0ZXJhdG9yJ11cbiAgICB8fCBERUZBVUxUICYmIEl0ZXJhYmxlUHJvdG90eXBlW0RFRkFVTFRdO1xuICB2YXIgZGVmYXVsdEl0ZXJhdG9yID0gIUJVR0dZX1NBRkFSSV9JVEVSQVRPUlMgJiYgbmF0aXZlSXRlcmF0b3IgfHwgZ2V0SXRlcmF0aW9uTWV0aG9kKERFRkFVTFQpO1xuICB2YXIgYW55TmF0aXZlSXRlcmF0b3IgPSBOQU1FID09ICdBcnJheScgPyBJdGVyYWJsZVByb3RvdHlwZS5lbnRyaWVzIHx8IG5hdGl2ZUl0ZXJhdG9yIDogbmF0aXZlSXRlcmF0b3I7XG4gIHZhciBDdXJyZW50SXRlcmF0b3JQcm90b3R5cGUsIG1ldGhvZHMsIEtFWTtcblxuICAvLyBmaXggbmF0aXZlXG4gIGlmIChhbnlOYXRpdmVJdGVyYXRvcikge1xuICAgIEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKGFueU5hdGl2ZUl0ZXJhdG9yLmNhbGwobmV3IEl0ZXJhYmxlKCkpKTtcbiAgICBpZiAoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICBpZiAoIUlTX1BVUkUgJiYgZ2V0UHJvdG90eXBlT2YoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlKSAhPT0gSXRlcmF0b3JQcm90b3R5cGUpIHtcbiAgICAgICAgaWYgKHNldFByb3RvdHlwZU9mKSB7XG4gICAgICAgICAgc2V0UHJvdG90eXBlT2YoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlLCBJdGVyYXRvclByb3RvdHlwZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoIWlzQ2FsbGFibGUoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSkpIHtcbiAgICAgICAgICByZWRlZmluZShDdXJyZW50SXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlLCBUT19TVFJJTkdfVEFHLCB0cnVlLCB0cnVlKTtcbiAgICAgIGlmIChJU19QVVJFKSBJdGVyYXRvcnNbVE9fU1RSSU5HX1RBR10gPSByZXR1cm5UaGlzO1xuICAgIH1cbiAgfVxuXG4gIC8vIGZpeCBBcnJheS5wcm90b3R5cGUueyB2YWx1ZXMsIEBAaXRlcmF0b3IgfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKFBST1BFUl9GVU5DVElPTl9OQU1FICYmIERFRkFVTFQgPT0gVkFMVUVTICYmIG5hdGl2ZUl0ZXJhdG9yICYmIG5hdGl2ZUl0ZXJhdG9yLm5hbWUgIT09IFZBTFVFUykge1xuICAgIGlmICghSVNfUFVSRSAmJiBDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KEl0ZXJhYmxlUHJvdG90eXBlLCAnbmFtZScsIFZBTFVFUyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIElOQ09SUkVDVF9WQUxVRVNfTkFNRSA9IHRydWU7XG4gICAgICBkZWZhdWx0SXRlcmF0b3IgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuYXRpdmVJdGVyYXRvci5jYWxsKHRoaXMpOyB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIGV4cG9ydCBhZGRpdGlvbmFsIG1ldGhvZHNcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBnZXRJdGVyYXRpb25NZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/IGRlZmF1bHRJdGVyYXRvciA6IGdldEl0ZXJhdGlvbk1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6IGdldEl0ZXJhdGlvbk1ldGhvZChFTlRSSUVTKVxuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChLRVkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKEJVR0dZX1NBRkFSSV9JVEVSQVRPUlMgfHwgSU5DT1JSRUNUX1ZBTFVFU19OQU1FIHx8ICEoS0VZIGluIEl0ZXJhYmxlUHJvdG90eXBlKSkge1xuICAgICAgICByZWRlZmluZShJdGVyYWJsZVByb3RvdHlwZSwgS0VZLCBtZXRob2RzW0tFWV0pO1xuICAgICAgfVxuICAgIH0gZWxzZSAkKHsgdGFyZ2V0OiBOQU1FLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBCVUdHWV9TQUZBUklfSVRFUkFUT1JTIHx8IElOQ09SUkVDVF9WQUxVRVNfTkFNRSB9LCBtZXRob2RzKTtcbiAgfVxuXG4gIC8vIGRlZmluZSBpdGVyYXRvclxuICBpZiAoKCFJU19QVVJFIHx8IEZPUkNFRCkgJiYgSXRlcmFibGVQcm90b3R5cGVbSVRFUkFUT1JdICE9PSBkZWZhdWx0SXRlcmF0b3IpIHtcbiAgICByZWRlZmluZShJdGVyYWJsZVByb3RvdHlwZSwgSVRFUkFUT1IsIGRlZmF1bHRJdGVyYXRvciwgeyBuYW1lOiBERUZBVUxUIH0pO1xuICB9XG4gIEl0ZXJhdG9yc1tOQU1FXSA9IGRlZmF1bHRJdGVyYXRvcjtcblxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCJ2YXIgcGF0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wYXRoJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB3cmFwcGVkV2VsbEtub3duU3ltYm9sTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sLXdyYXBwZWQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSkge1xuICB2YXIgU3ltYm9sID0gcGF0aC5TeW1ib2wgfHwgKHBhdGguU3ltYm9sID0ge30pO1xuICBpZiAoIWhhc093bihTeW1ib2wsIE5BTUUpKSBkZWZpbmVQcm9wZXJ0eShTeW1ib2wsIE5BTUUsIHtcbiAgICB2YWx1ZTogd3JhcHBlZFdlbGxLbm93blN5bWJvbE1vZHVsZS5mKE5BTUUpXG4gIH0pO1xufTtcbiIsInZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG4vLyBEZXRlY3QgSUU4J3MgaW5jb21wbGV0ZSBkZWZpbmVQcm9wZXJ0eSBpbXBsZW1lbnRhdGlvblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sIDEsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pWzFdICE9IDc7XG59KTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbnZhciBkb2N1bWVudCA9IGdsb2JhbC5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIEVYSVNUUyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIEVYSVNUUyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiLy8gaXRlcmFibGUgRE9NIGNvbGxlY3Rpb25zXG4vLyBmbGFnIC0gYGl0ZXJhYmxlYCBpbnRlcmZhY2UgLSAnZW50cmllcycsICdrZXlzJywgJ3ZhbHVlcycsICdmb3JFYWNoJyBtZXRob2RzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ1NTUnVsZUxpc3Q6IDAsXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IDAsXG4gIENTU1ZhbHVlTGlzdDogMCxcbiAgQ2xpZW50UmVjdExpc3Q6IDAsXG4gIERPTVJlY3RMaXN0OiAwLFxuICBET01TdHJpbmdMaXN0OiAwLFxuICBET01Ub2tlbkxpc3Q6IDEsXG4gIERhdGFUcmFuc2Zlckl0ZW1MaXN0OiAwLFxuICBGaWxlTGlzdDogMCxcbiAgSFRNTEFsbENvbGxlY3Rpb246IDAsXG4gIEhUTUxDb2xsZWN0aW9uOiAwLFxuICBIVE1MRm9ybUVsZW1lbnQ6IDAsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiAwLFxuICBNZWRpYUxpc3Q6IDAsXG4gIE1pbWVUeXBlQXJyYXk6IDAsXG4gIE5hbWVkTm9kZU1hcDogMCxcbiAgTm9kZUxpc3Q6IDEsXG4gIFBhaW50UmVxdWVzdExpc3Q6IDAsXG4gIFBsdWdpbjogMCxcbiAgUGx1Z2luQXJyYXk6IDAsXG4gIFNWR0xlbmd0aExpc3Q6IDAsXG4gIFNWR051bWJlckxpc3Q6IDAsXG4gIFNWR1BhdGhTZWdMaXN0OiAwLFxuICBTVkdQb2ludExpc3Q6IDAsXG4gIFNWR1N0cmluZ0xpc3Q6IDAsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IDAsXG4gIFNvdXJjZUJ1ZmZlckxpc3Q6IDAsXG4gIFN0eWxlU2hlZXRMaXN0OiAwLFxuICBUZXh0VHJhY2tDdWVMaXN0OiAwLFxuICBUZXh0VHJhY2tMaXN0OiAwLFxuICBUb3VjaExpc3Q6IDBcbn07XG4iLCIvLyBpbiBvbGQgV2ViS2l0IHZlcnNpb25zLCBgZWxlbWVudC5jbGFzc0xpc3RgIGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBnbG9iYWwgYERPTVRva2VuTGlzdGBcbnZhciBkb2N1bWVudENyZWF0ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQnKTtcblxudmFyIGNsYXNzTGlzdCA9IGRvY3VtZW50Q3JlYXRlRWxlbWVudCgnc3BhbicpLmNsYXNzTGlzdDtcbnZhciBET01Ub2tlbkxpc3RQcm90b3R5cGUgPSBjbGFzc0xpc3QgJiYgY2xhc3NMaXN0LmNvbnN0cnVjdG9yICYmIGNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gRE9NVG9rZW5MaXN0UHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlID8gdW5kZWZpbmVkIDogRE9NVG9rZW5MaXN0UHJvdG90eXBlO1xuIiwidmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QnVpbHRJbignbmF2aWdhdG9yJywgJ3VzZXJBZ2VudCcpIHx8ICcnO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnQnKTtcblxudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBEZW5vID0gZ2xvYmFsLkRlbm87XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnMgfHwgRGVubyAmJiBEZW5vLnZlcnNpb247XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52ODtcbnZhciBtYXRjaCwgdmVyc2lvbjtcblxuaWYgKHY4KSB7XG4gIG1hdGNoID0gdjguc3BsaXQoJy4nKTtcbiAgdmVyc2lvbiA9IG1hdGNoWzBdIDwgNCA/IDEgOiBtYXRjaFswXSArIG1hdGNoWzFdO1xufSBlbHNlIGlmICh1c2VyQWdlbnQpIHtcbiAgbWF0Y2ggPSB1c2VyQWdlbnQubWF0Y2goL0VkZ2VcXC8oXFxkKykvKTtcbiAgaWYgKCFtYXRjaCB8fCBtYXRjaFsxXSA+PSA3NCkge1xuICAgIG1hdGNoID0gdXNlckFnZW50Lm1hdGNoKC9DaHJvbWVcXC8oXFxkKykvKTtcbiAgICBpZiAobWF0Y2gpIHZlcnNpb24gPSBtYXRjaFsxXTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHZlcnNpb24gJiYgK3ZlcnNpb247XG4iLCIvLyBJRTgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gW1xuICAnY29uc3RydWN0b3InLFxuICAnaGFzT3duUHJvcGVydHknLFxuICAnaXNQcm90b3R5cGVPZicsXG4gICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsXG4gICd0b0xvY2FsZVN0cmluZycsXG4gICd0b1N0cmluZycsXG4gICd2YWx1ZU9mJ1xuXTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIHNldEdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zZXQtZ2xvYmFsJyk7XG52YXIgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXMnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcblxuLypcbiAgb3B0aW9ucy50YXJnZXQgICAgICAtIG5hbWUgb2YgdGhlIHRhcmdldCBvYmplY3RcbiAgb3B0aW9ucy5nbG9iYWwgICAgICAtIHRhcmdldCBpcyB0aGUgZ2xvYmFsIG9iamVjdFxuICBvcHRpb25zLnN0YXQgICAgICAgIC0gZXhwb3J0IGFzIHN0YXRpYyBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnByb3RvICAgICAgIC0gZXhwb3J0IGFzIHByb3RvdHlwZSBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnJlYWwgICAgICAgIC0gcmVhbCBwcm90b3R5cGUgbWV0aG9kIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy5mb3JjZWQgICAgICAtIGV4cG9ydCBldmVuIGlmIHRoZSBuYXRpdmUgZmVhdHVyZSBpcyBhdmFpbGFibGVcbiAgb3B0aW9ucy5iaW5kICAgICAgICAtIGJpbmQgbWV0aG9kcyB0byB0aGUgdGFyZ2V0LCByZXF1aXJlZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMud3JhcCAgICAgICAgLSB3cmFwIGNvbnN0cnVjdG9ycyB0byBwcmV2ZW50aW5nIGdsb2JhbCBwb2xsdXRpb24sIHJlcXVpcmVkIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy51bnNhZmUgICAgICAtIHVzZSB0aGUgc2ltcGxlIGFzc2lnbm1lbnQgb2YgcHJvcGVydHkgaW5zdGVhZCBvZiBkZWxldGUgKyBkZWZpbmVQcm9wZXJ0eVxuICBvcHRpb25zLnNoYW0gICAgICAgIC0gYWRkIGEgZmxhZyB0byBub3QgY29tcGxldGVseSBmdWxsIHBvbHlmaWxsc1xuICBvcHRpb25zLmVudW1lcmFibGUgIC0gZXhwb3J0IGFzIGVudW1lcmFibGUgcHJvcGVydHlcbiAgb3B0aW9ucy5ub1RhcmdldEdldCAtIHByZXZlbnQgY2FsbGluZyBhIGdldHRlciBvbiB0YXJnZXRcbiAgb3B0aW9ucy5uYW1lICAgICAgICAtIHRoZSAubmFtZSBvZiB0aGUgZnVuY3Rpb24gaWYgaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGtleVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNvdXJjZSkge1xuICB2YXIgVEFSR0VUID0gb3B0aW9ucy50YXJnZXQ7XG4gIHZhciBHTE9CQUwgPSBvcHRpb25zLmdsb2JhbDtcbiAgdmFyIFNUQVRJQyA9IG9wdGlvbnMuc3RhdDtcbiAgdmFyIEZPUkNFRCwgdGFyZ2V0LCBrZXksIHRhcmdldFByb3BlcnR5LCBzb3VyY2VQcm9wZXJ0eSwgZGVzY3JpcHRvcjtcbiAgaWYgKEdMT0JBTCkge1xuICAgIHRhcmdldCA9IGdsb2JhbDtcbiAgfSBlbHNlIGlmIChTVEFUSUMpIHtcbiAgICB0YXJnZXQgPSBnbG9iYWxbVEFSR0VUXSB8fCBzZXRHbG9iYWwoVEFSR0VULCB7fSk7XG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0ID0gKGdsb2JhbFtUQVJHRVRdIHx8IHt9KS5wcm90b3R5cGU7XG4gIH1cbiAgaWYgKHRhcmdldCkgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgc291cmNlUHJvcGVydHkgPSBzb3VyY2Vba2V5XTtcbiAgICBpZiAob3B0aW9ucy5ub1RhcmdldEdldCkge1xuICAgICAgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSk7XG4gICAgICB0YXJnZXRQcm9wZXJ0eSA9IGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci52YWx1ZTtcbiAgICB9IGVsc2UgdGFyZ2V0UHJvcGVydHkgPSB0YXJnZXRba2V5XTtcbiAgICBGT1JDRUQgPSBpc0ZvcmNlZChHTE9CQUwgPyBrZXkgOiBUQVJHRVQgKyAoU1RBVElDID8gJy4nIDogJyMnKSArIGtleSwgb3B0aW9ucy5mb3JjZWQpO1xuICAgIC8vIGNvbnRhaW5lZCBpbiB0YXJnZXRcbiAgICBpZiAoIUZPUkNFRCAmJiB0YXJnZXRQcm9wZXJ0eSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAodHlwZW9mIHNvdXJjZVByb3BlcnR5ID09PSB0eXBlb2YgdGFyZ2V0UHJvcGVydHkpIGNvbnRpbnVlO1xuICAgICAgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyhzb3VyY2VQcm9wZXJ0eSwgdGFyZ2V0UHJvcGVydHkpO1xuICAgIH1cbiAgICAvLyBhZGQgYSBmbGFnIHRvIG5vdCBjb21wbGV0ZWx5IGZ1bGwgcG9seWZpbGxzXG4gICAgaWYgKG9wdGlvbnMuc2hhbSB8fCAodGFyZ2V0UHJvcGVydHkgJiYgdGFyZ2V0UHJvcGVydHkuc2hhbSkpIHtcbiAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShzb3VyY2VQcm9wZXJ0eSwgJ3NoYW0nLCB0cnVlKTtcbiAgICB9XG4gICAgLy8gZXh0ZW5kIGdsb2JhbFxuICAgIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzb3VyY2VQcm9wZXJ0eSwgb3B0aW9ucyk7XG4gIH1cbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gVE9ETzogUmVtb3ZlIGZyb20gYGNvcmUtanNANGAgc2luY2UgaXQncyBtb3ZlZCB0byBlbnRyeSBwb2ludHNcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEZPUkNFRCwgU0hBTSkge1xuICB2YXIgU1lNQk9MID0gd2VsbEtub3duU3ltYm9sKEtFWSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19TWU1CT0wgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHNcbiAgICB2YXIgTyA9IHt9O1xuICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN5bWJvbC1uYW1lZCBSZWdFeHAgbWV0aG9kcyBjYWxsIC5leGVjXG4gICAgdmFyIGV4ZWNDYWxsZWQgPSBmYWxzZTtcbiAgICB2YXIgcmUgPSAvYS87XG5cbiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7XG4gICAgICAvLyBXZSBjYW4ndCB1c2UgcmVhbCByZWdleCBoZXJlIHNpbmNlIGl0IGNhdXNlcyBkZW9wdGltaXphdGlvblxuICAgICAgLy8gYW5kIHNlcmlvdXMgcGVyZm9ybWFuY2UgZGVncmFkYXRpb24gaW4gVjhcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMDZcbiAgICAgIHJlID0ge307XG4gICAgICAvLyBSZWdFeHBbQEBzcGxpdF0gZG9lc24ndCBjYWxsIHRoZSByZWdleCdzIGV4ZWMgbWV0aG9kLCBidXQgZmlyc3QgY3JlYXRlc1xuICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLlxuICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTtcbiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcmU7IH07XG4gICAgICByZS5mbGFncyA9ICcnO1xuICAgICAgcmVbU1lNQk9MXSA9IC8uL1tTWU1CT0xdO1xuICAgIH1cblxuICAgIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IGV4ZWNDYWxsZWQgPSB0cnVlOyByZXR1cm4gbnVsbDsgfTtcblxuICAgIHJlW1NZTUJPTF0oJycpO1xuICAgIHJldHVybiAhZXhlY0NhbGxlZDtcbiAgfSk7XG5cbiAgaWYgKFxuICAgICFERUxFR0FURVNfVE9fU1lNQk9MIHx8XG4gICAgIURFTEVHQVRFU19UT19FWEVDIHx8XG4gICAgRk9SQ0VEXG4gICkge1xuICAgIHZhciBuYXRpdmVSZWdFeHBNZXRob2QgPSAvLi9bU1lNQk9MXTtcbiAgICB2YXIgbWV0aG9kcyA9IGV4ZWMoU1lNQk9MLCAnJ1tLRVldLCBmdW5jdGlvbiAobmF0aXZlTWV0aG9kLCByZWdleHAsIHN0ciwgYXJnMiwgZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgIHZhciAkZXhlYyA9IHJlZ2V4cC5leGVjO1xuICAgICAgaWYgKCRleGVjID09PSByZWdleHBFeGVjIHx8ICRleGVjID09PSBSZWdFeHBQcm90b3R5cGUuZXhlYykge1xuICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgICAvLyBUaGUgbmF0aXZlIFN0cmluZyBtZXRob2QgYWxyZWFkeSBkZWxlZ2F0ZXMgdG8gQEBtZXRob2QgKHRoaXNcbiAgICAgICAgICAvLyBwb2x5ZmlsbGVkIGZ1bmN0aW9uKSwgbGVhc2luZyB0byBpbmZpbml0ZSByZWN1cnNpb24uXG4gICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC5cbiAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlUmVnRXhwTWV0aG9kLmNhbGwocmVnZXhwLCBzdHIsIGFyZzIpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZU1ldGhvZC5jYWxsKHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UgfTtcbiAgICB9KTtcblxuICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgbWV0aG9kc1swXSk7XG4gICAgcmVkZWZpbmUoUmVnRXhwUHJvdG90eXBlLCBTWU1CT0wsIG1ldGhvZHNbMV0pO1xuICB9XG5cbiAgaWYgKFNIQU0pIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShSZWdFeHBQcm90b3R5cGVbU1lNQk9MXSwgJ3NoYW0nLCB0cnVlKTtcbn07XG4iLCJ2YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcblxuLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFDYWxsYWJsZShmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0KTtcbiAgICB9O1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsInZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciBnZXREZXNjcmlwdG9yID0gREVTQ1JJUFRPUlMgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxudmFyIEVYSVNUUyA9IGhhc093bihGdW5jdGlvblByb3RvdHlwZSwgJ25hbWUnKTtcbi8vIGFkZGl0aW9uYWwgcHJvdGVjdGlvbiBmcm9tIG1pbmlmaWVkIC8gbWFuZ2xlZCAvIGRyb3BwZWQgZnVuY3Rpb24gbmFtZXNcbnZhciBQUk9QRVIgPSBFWElTVFMgJiYgKGZ1bmN0aW9uIHNvbWV0aGluZygpIHsgLyogZW1wdHkgKi8gfSkubmFtZSA9PT0gJ3NvbWV0aGluZyc7XG52YXIgQ09ORklHVVJBQkxFID0gRVhJU1RTICYmICghREVTQ1JJUFRPUlMgfHwgKERFU0NSSVBUT1JTICYmIGdldERlc2NyaXB0b3IoRnVuY3Rpb25Qcm90b3R5cGUsICduYW1lJykuY29uZmlndXJhYmxlKSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBFWElTVFM6IEVYSVNUUyxcbiAgUFJPUEVSOiBQUk9QRVIsXG4gIENPTkZJR1VSQUJMRTogQ09ORklHVVJBQkxFXG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG5cbnZhciBhRnVuY3Rpb24gPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgcmV0dXJuIGlzQ2FsbGFibGUoYXJndW1lbnQpID8gYXJndW1lbnQgOiB1bmRlZmluZWQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lc3BhY2UsIG1ldGhvZCkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA8IDIgPyBhRnVuY3Rpb24oZ2xvYmFsW25hbWVzcGFjZV0pIDogZ2xvYmFsW25hbWVzcGFjZV0gJiYgZ2xvYmFsW25hbWVzcGFjZV1bbWV0aG9kXTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mJyk7XG52YXIgZ2V0TWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1tZXRob2QnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3JzJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGdldE1ldGhvZChpdCwgSVRFUkFUT1IpXG4gICAgfHwgZ2V0TWV0aG9kKGl0LCAnQEBpdGVyYXRvcicpXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCJ2YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBnZXRJdGVyYXRvck1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50LCB1c2luZ0l0ZXJhdG9yKSB7XG4gIHZhciBpdGVyYXRvck1ldGhvZCA9IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gZ2V0SXRlcmF0b3JNZXRob2QoYXJndW1lbnQpIDogdXNpbmdJdGVyYXRvcjtcbiAgaWYgKGFDYWxsYWJsZShpdGVyYXRvck1ldGhvZCkpIHJldHVybiBhbk9iamVjdChpdGVyYXRvck1ldGhvZC5jYWxsKGFyZ3VtZW50KSk7XG4gIHRocm93IFR5cGVFcnJvcihTdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgaXRlcmFibGUnKTtcbn07XG4iLCJ2YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcblxuLy8gYEdldE1ldGhvZGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldG1ldGhvZFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoViwgUCkge1xuICB2YXIgZnVuYyA9IFZbUF07XG4gIHJldHVybiBmdW5jID09IG51bGwgPyB1bmRlZmluZWQgOiBhQ2FsbGFibGUoZnVuYyk7XG59O1xuIiwidmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xuXG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xudmFyIHJlcGxhY2UgPSAnJy5yZXBsYWNlO1xudmFyIFNVQlNUSVRVVElPTl9TWU1CT0xTID0gL1xcJChbJCYnYF18XFxkezEsMn18PFtePl0qPikvZztcbnZhciBTVUJTVElUVVRJT05fU1lNQk9MU19OT19OQU1FRCA9IC9cXCQoWyQmJ2BdfFxcZHsxLDJ9KS9nO1xuXG4vLyBgR2V0U3Vic3RpdHV0aW9uYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0c3Vic3RpdHV0aW9uXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChtYXRjaGVkLCBzdHIsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZW1lbnQpIHtcbiAgdmFyIHRhaWxQb3MgPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoO1xuICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgdmFyIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MU19OT19OQU1FRDtcbiAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFM7XG4gIH1cbiAgcmV0dXJuIHJlcGxhY2UuY2FsbChyZXBsYWNlbWVudCwgc3ltYm9scywgZnVuY3Rpb24gKG1hdGNoLCBjaCkge1xuICAgIHZhciBjYXB0dXJlO1xuICAgIHN3aXRjaCAoY2guY2hhckF0KDApKSB7XG4gICAgICBjYXNlICckJzogcmV0dXJuICckJztcbiAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgIGNhc2UgJ2AnOiByZXR1cm4gc3RyLnNsaWNlKDAsIHBvc2l0aW9uKTtcbiAgICAgIGNhc2UgXCInXCI6IHJldHVybiBzdHIuc2xpY2UodGFpbFBvcyk7XG4gICAgICBjYXNlICc8JzpcbiAgICAgICAgY2FwdHVyZSA9IG5hbWVkQ2FwdHVyZXNbY2guc2xpY2UoMSwgLTEpXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgIHZhciBuID0gK2NoO1xuICAgICAgICBpZiAobiA9PT0gMCkgcmV0dXJuIG1hdGNoO1xuICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICB2YXIgZiA9IGZsb29yKG4gLyAxMCk7XG4gICAgICAgICAgaWYgKGYgPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgICB9XG4gICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgfVxuICAgIHJldHVybiBjYXB0dXJlID09PSB1bmRlZmluZWQgPyAnJyA6IGNhcHR1cmU7XG4gIH0pO1xufTtcbiIsInZhciBjaGVjayA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgJiYgaXQuTWF0aCA9PSBNYXRoICYmIGl0O1xufTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbm1vZHVsZS5leHBvcnRzID1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWdsb2JhbC10aGlzIC0tIHNhZmVcbiAgY2hlY2sodHlwZW9mIGdsb2JhbFRoaXMgPT0gJ29iamVjdCcgJiYgZ2xvYmFsVGhpcykgfHxcbiAgY2hlY2sodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cpIHx8XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWdsb2JhbHMgLS0gc2FmZVxuICBjaGVjayh0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmKSB8fFxuICBjaGVjayh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCkgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jIC0tIGZhbGxiYWNrXG4gIChmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSgpIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG4iLCJ2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4vLyBgSGFzT3duUHJvcGVydHlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1oYXNvd25wcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaGFzT3duIHx8IGZ1bmN0aW9uIGhhc093bihpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKHRvT2JqZWN0KGl0KSwga2V5KTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIiwidmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QnVpbHRJbignZG9jdW1lbnQnLCAnZG9jdW1lbnRFbGVtZW50Jyk7XG4iLCJ2YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGNyZWF0ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQnKTtcblxuLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhREVTQ1JJUFRPUlMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aWVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoY3JlYXRlRWxlbWVudCgnZGl2JyksICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfVxuICB9KS5hICE9IDc7XG59KTtcbiIsInZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcblxudmFyIHNwbGl0ID0gJycuc3BsaXQ7XG5cbi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG5tb2R1bGUuZXhwb3J0cyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gdGhyb3dzIGFuIGVycm9yIGluIHJoaW5vLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvcmhpbm8vaXNzdWVzLzM0NlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zIC0tIHNhZmVcbiAgcmV0dXJuICFPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKTtcbn0pID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjbGFzc29mKGl0KSA9PSAnU3RyaW5nJyA/IHNwbGl0LmNhbGwoaXQsICcnKSA6IE9iamVjdChpdCk7XG59IDogT2JqZWN0O1xuIiwidmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qtc2V0LXByb3RvdHlwZS1vZicpO1xuXG4vLyBtYWtlcyBzdWJjbGFzc2luZyB3b3JrIGNvcnJlY3QgZm9yIHdyYXBwZWQgYnVpbHQtaW5zXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkdGhpcywgZHVtbXksIFdyYXBwZXIpIHtcbiAgdmFyIE5ld1RhcmdldCwgTmV3VGFyZ2V0UHJvdG90eXBlO1xuICBpZiAoXG4gICAgLy8gaXQgY2FuIHdvcmsgb25seSB3aXRoIG5hdGl2ZSBgc2V0UHJvdG90eXBlT2ZgXG4gICAgc2V0UHJvdG90eXBlT2YgJiZcbiAgICAvLyB3ZSBoYXZlbid0IGNvbXBsZXRlbHkgY29ycmVjdCBwcmUtRVM2IHdheSBmb3IgZ2V0dGluZyBgbmV3LnRhcmdldGAsIHNvIHVzZSB0aGlzXG4gICAgaXNDYWxsYWJsZShOZXdUYXJnZXQgPSBkdW1teS5jb25zdHJ1Y3RvcikgJiZcbiAgICBOZXdUYXJnZXQgIT09IFdyYXBwZXIgJiZcbiAgICBpc09iamVjdChOZXdUYXJnZXRQcm90b3R5cGUgPSBOZXdUYXJnZXQucHJvdG90eXBlKSAmJlxuICAgIE5ld1RhcmdldFByb3RvdHlwZSAhPT0gV3JhcHBlci5wcm90b3R5cGVcbiAgKSBzZXRQcm90b3R5cGVPZigkdGhpcywgTmV3VGFyZ2V0UHJvdG90eXBlKTtcbiAgcmV0dXJuICR0aGlzO1xufTtcbiIsInZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgc3RvcmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlJyk7XG5cbnZhciBmdW5jdGlvblRvU3RyaW5nID0gRnVuY3Rpb24udG9TdHJpbmc7XG5cbi8vIHRoaXMgaGVscGVyIGJyb2tlbiBpbiBgY29yZS1qc0AzLjQuMS0zLjQuNGAsIHNvIHdlIGNhbid0IHVzZSBgc2hhcmVkYCBoZWxwZXJcbmlmICghaXNDYWxsYWJsZShzdG9yZS5pbnNwZWN0U291cmNlKSkge1xuICBzdG9yZS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uVG9TdHJpbmcuY2FsbChpdCk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmUuaW5zcGVjdFNvdXJjZTtcbiIsInZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbmF0aXZlLXdlYWstbWFwJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQtc3RvcmUnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcblxudmFyIE9CSkVDVF9BTFJFQURZX0lOSVRJQUxJWkVEID0gJ09iamVjdCBhbHJlYWR5IGluaXRpYWxpemVkJztcbnZhciBXZWFrTWFwID0gZ2xvYmFsLldlYWtNYXA7XG52YXIgc2V0LCBnZXQsIGhhcztcblxudmFyIGVuZm9yY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGhhcyhpdCkgPyBnZXQoaXQpIDogc2V0KGl0LCB7fSk7XG59O1xuXG52YXIgZ2V0dGVyRm9yID0gZnVuY3Rpb24gKFRZUEUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpdCkge1xuICAgIHZhciBzdGF0ZTtcbiAgICBpZiAoIWlzT2JqZWN0KGl0KSB8fCAoc3RhdGUgPSBnZXQoaXQpKS50eXBlICE9PSBUWVBFKSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ0luY29tcGF0aWJsZSByZWNlaXZlciwgJyArIFRZUEUgKyAnIHJlcXVpcmVkJyk7XG4gICAgfSByZXR1cm4gc3RhdGU7XG4gIH07XG59O1xuXG5pZiAoTkFUSVZFX1dFQUtfTUFQIHx8IHNoYXJlZC5zdGF0ZSkge1xuICB2YXIgc3RvcmUgPSBzaGFyZWQuc3RhdGUgfHwgKHNoYXJlZC5zdGF0ZSA9IG5ldyBXZWFrTWFwKCkpO1xuICB2YXIgd21nZXQgPSBzdG9yZS5nZXQ7XG4gIHZhciB3bWhhcyA9IHN0b3JlLmhhcztcbiAgdmFyIHdtc2V0ID0gc3RvcmUuc2V0O1xuICBzZXQgPSBmdW5jdGlvbiAoaXQsIG1ldGFkYXRhKSB7XG4gICAgaWYgKHdtaGFzLmNhbGwoc3RvcmUsIGl0KSkgdGhyb3cgbmV3IFR5cGVFcnJvcihPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCk7XG4gICAgbWV0YWRhdGEuZmFjYWRlID0gaXQ7XG4gICAgd21zZXQuY2FsbChzdG9yZSwgaXQsIG1ldGFkYXRhKTtcbiAgICByZXR1cm4gbWV0YWRhdGE7XG4gIH07XG4gIGdldCA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiB3bWdldC5jYWxsKHN0b3JlLCBpdCkgfHwge307XG4gIH07XG4gIGhhcyA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiB3bWhhcy5jYWxsKHN0b3JlLCBpdCk7XG4gIH07XG59IGVsc2Uge1xuICB2YXIgU1RBVEUgPSBzaGFyZWRLZXkoJ3N0YXRlJyk7XG4gIGhpZGRlbktleXNbU1RBVEVdID0gdHJ1ZTtcbiAgc2V0ID0gZnVuY3Rpb24gKGl0LCBtZXRhZGF0YSkge1xuICAgIGlmIChoYXNPd24oaXQsIFNUQVRFKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCk7XG4gICAgbWV0YWRhdGEuZmFjYWRlID0gaXQ7XG4gICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KGl0LCBTVEFURSwgbWV0YWRhdGEpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfTtcbiAgZ2V0ID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIGhhc093bihpdCwgU1RBVEUpID8gaXRbU1RBVEVdIDoge307XG4gIH07XG4gIGhhcyA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBoYXNPd24oaXQsIFNUQVRFKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0LFxuICBnZXQ6IGdldCxcbiAgaGFzOiBoYXMsXG4gIGVuZm9yY2U6IGVuZm9yY2UsXG4gIGdldHRlckZvcjogZ2V0dGVyRm9yXG59O1xuIiwidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvcnMnKTtcblxudmFyIElURVJBVE9SID0gd2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvdHlwZVtJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xuXG4vLyBgSXNBcnJheWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWlzYXJyYXlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1pc2FycmF5IC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZ3VtZW50KSB7XG4gIHJldHVybiBjbGFzc29mKGFyZ3VtZW50KSA9PSAnQXJyYXknO1xufTtcbiIsIi8vIGBJc0NhbGxhYmxlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNjYWxsYWJsZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmd1bWVudCA9PT0gJ2Z1bmN0aW9uJztcbn07XG4iLCJ2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mJyk7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG5cbnZhciBlbXB0eSA9IFtdO1xudmFyIGNvbnN0cnVjdCA9IGdldEJ1aWx0SW4oJ1JlZmxlY3QnLCAnY29uc3RydWN0Jyk7XG52YXIgY29uc3RydWN0b3JSZWdFeHAgPSAvXlxccyooPzpjbGFzc3xmdW5jdGlvbilcXGIvO1xudmFyIGV4ZWMgPSBjb25zdHJ1Y3RvclJlZ0V4cC5leGVjO1xudmFyIElOQ09SUkVDVF9UT19TVFJJTkcgPSAhY29uc3RydWN0b3JSZWdFeHAuZXhlYyhmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0pO1xuXG52YXIgaXNDb25zdHJ1Y3Rvck1vZGVybiA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoIWlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gZmFsc2U7XG4gIHRyeSB7XG4gICAgY29uc3RydWN0KE9iamVjdCwgZW1wdHksIGFyZ3VtZW50KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbnZhciBpc0NvbnN0cnVjdG9yTGVnYWN5ID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmICghaXNDYWxsYWJsZShhcmd1bWVudCkpIHJldHVybiBmYWxzZTtcbiAgc3dpdGNoIChjbGFzc29mKGFyZ3VtZW50KSkge1xuICAgIGNhc2UgJ0FzeW5jRnVuY3Rpb24nOlxuICAgIGNhc2UgJ0dlbmVyYXRvckZ1bmN0aW9uJzpcbiAgICBjYXNlICdBc3luY0dlbmVyYXRvckZ1bmN0aW9uJzogcmV0dXJuIGZhbHNlO1xuICAgIC8vIHdlIGNhbid0IGNoZWNrIC5wcm90b3R5cGUgc2luY2UgY29uc3RydWN0b3JzIHByb2R1Y2VkIGJ5IC5iaW5kIGhhdmVuJ3QgaXRcbiAgfSByZXR1cm4gSU5DT1JSRUNUX1RPX1NUUklORyB8fCAhIWV4ZWMuY2FsbChjb25zdHJ1Y3RvclJlZ0V4cCwgaW5zcGVjdFNvdXJjZShhcmd1bWVudCkpO1xufTtcblxuLy8gYElzQ29uc3RydWN0b3JgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1pc2NvbnN0cnVjdG9yXG5tb2R1bGUuZXhwb3J0cyA9ICFjb25zdHJ1Y3QgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgY2FsbGVkO1xuICByZXR1cm4gaXNDb25zdHJ1Y3Rvck1vZGVybihpc0NvbnN0cnVjdG9yTW9kZXJuLmNhbGwpXG4gICAgfHwgIWlzQ29uc3RydWN0b3JNb2Rlcm4oT2JqZWN0KVxuICAgIHx8ICFpc0NvbnN0cnVjdG9yTW9kZXJuKGZ1bmN0aW9uICgpIHsgY2FsbGVkID0gdHJ1ZTsgfSlcbiAgICB8fCBjYWxsZWQ7XG59KSA/IGlzQ29uc3RydWN0b3JMZWdhY3kgOiBpc0NvbnN0cnVjdG9yTW9kZXJuO1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgcmVwbGFjZW1lbnQgPSAvI3xcXC5wcm90b3R5cGVcXC4vO1xuXG52YXIgaXNGb3JjZWQgPSBmdW5jdGlvbiAoZmVhdHVyZSwgZGV0ZWN0aW9uKSB7XG4gIHZhciB2YWx1ZSA9IGRhdGFbbm9ybWFsaXplKGZlYXR1cmUpXTtcbiAgcmV0dXJuIHZhbHVlID09IFBPTFlGSUxMID8gdHJ1ZVxuICAgIDogdmFsdWUgPT0gTkFUSVZFID8gZmFsc2VcbiAgICA6IGlzQ2FsbGFibGUoZGV0ZWN0aW9uKSA/IGZhaWxzKGRldGVjdGlvbilcbiAgICA6ICEhZGV0ZWN0aW9uO1xufTtcblxudmFyIG5vcm1hbGl6ZSA9IGlzRm9yY2VkLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgcmV0dXJuIFN0cmluZyhzdHJpbmcpLnJlcGxhY2UocmVwbGFjZW1lbnQsICcuJykudG9Mb3dlckNhc2UoKTtcbn07XG5cbnZhciBkYXRhID0gaXNGb3JjZWQuZGF0YSA9IHt9O1xudmFyIE5BVElWRSA9IGlzRm9yY2VkLk5BVElWRSA9ICdOJztcbnZhciBQT0xZRklMTCA9IGlzRm9yY2VkLlBPTFlGSUxMID0gJ1AnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRm9yY2VkO1xuIiwidmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IGlzQ2FsbGFibGUoaXQpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZmFsc2U7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgTUFUQ0ggPSB3ZWxsS25vd25TeW1ib2woJ21hdGNoJyk7XG5cbi8vIGBJc1JlZ0V4cGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWlzcmVnZXhwXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgaXNSZWdFeHA7XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgKChpc1JlZ0V4cCA9IGl0W01BVENIXSkgIT09IHVuZGVmaW5lZCA/ICEhaXNSZWdFeHAgOiBjbGFzc29mKGl0KSA9PSAnUmVnRXhwJyk7XG59O1xuIiwidmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIFVTRV9TWU1CT0xfQVNfVUlEID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gVVNFX1NZTUJPTF9BU19VSUQgPyBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyICRTeW1ib2wgPSBnZXRCdWlsdEluKCdTeW1ib2wnKTtcbiAgcmV0dXJuIGlzQ2FsbGFibGUoJFN5bWJvbCkgJiYgT2JqZWN0KGl0KSBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBraW5kLCB2YWx1ZSkge1xuICB2YXIgaW5uZXJSZXN1bHQsIGlubmVyRXJyb3I7XG4gIGFuT2JqZWN0KGl0ZXJhdG9yKTtcbiAgdHJ5IHtcbiAgICBpbm5lclJlc3VsdCA9IGdldE1ldGhvZChpdGVyYXRvciwgJ3JldHVybicpO1xuICAgIGlmICghaW5uZXJSZXN1bHQpIHtcbiAgICAgIGlmIChraW5kID09PSAndGhyb3cnKSB0aHJvdyB2YWx1ZTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaW5uZXJSZXN1bHQgPSBpbm5lclJlc3VsdC5jYWxsKGl0ZXJhdG9yKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpbm5lckVycm9yID0gdHJ1ZTtcbiAgICBpbm5lclJlc3VsdCA9IGVycm9yO1xuICB9XG4gIGlmIChraW5kID09PSAndGhyb3cnKSB0aHJvdyB2YWx1ZTtcbiAgaWYgKGlubmVyRXJyb3IpIHRocm93IGlubmVyUmVzdWx0O1xuICBhbk9iamVjdChpbm5lclJlc3VsdCk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LXByb3RvdHlwZS1vZicpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcbnZhciBCVUdHWV9TQUZBUklfSVRFUkFUT1JTID0gZmFsc2U7XG5cbi8vIGAlSXRlcmF0b3JQcm90b3R5cGUlYCBvYmplY3Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtJWl0ZXJhdG9ycHJvdG90eXBlJS1vYmplY3RcbnZhciBJdGVyYXRvclByb3RvdHlwZSwgUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlLCBhcnJheUl0ZXJhdG9yO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1hcnJheS1wcm90b3R5cGUta2V5cyAtLSBzYWZlICovXG5pZiAoW10ua2V5cykge1xuICBhcnJheUl0ZXJhdG9yID0gW10ua2V5cygpO1xuICAvLyBTYWZhcmkgOCBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbiAgaWYgKCEoJ25leHQnIGluIGFycmF5SXRlcmF0b3IpKSBCVUdHWV9TQUZBUklfSVRFUkFUT1JTID0gdHJ1ZTtcbiAgZWxzZSB7XG4gICAgUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoZ2V0UHJvdG90eXBlT2YoYXJyYXlJdGVyYXRvcikpO1xuICAgIGlmIChQcm90b3R5cGVPZkFycmF5SXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUpIEl0ZXJhdG9yUHJvdG90eXBlID0gUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlO1xuICB9XG59XG5cbnZhciBORVdfSVRFUkFUT1JfUFJPVE9UWVBFID0gSXRlcmF0b3JQcm90b3R5cGUgPT0gdW5kZWZpbmVkIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRlc3QgPSB7fTtcbiAgLy8gRkY0NC0gbGVnYWN5IGl0ZXJhdG9ycyBjYXNlXG4gIHJldHVybiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0uY2FsbCh0ZXN0KSAhPT0gdGVzdDtcbn0pO1xuXG5pZiAoTkVXX0lURVJBVE9SX1BST1RPVFlQRSkgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbmVsc2UgaWYgKElTX1BVUkUpIEl0ZXJhdG9yUHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcblxuLy8gYCVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLSVpdGVyYXRvcnByb3RvdHlwZSUtQEBpdGVyYXRvclxuaWYgKCFpc0NhbGxhYmxlKEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSkpIHtcbiAgcmVkZWZpbmUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgSXRlcmF0b3JQcm90b3R5cGU6IEl0ZXJhdG9yUHJvdG90eXBlLFxuICBCVUdHWV9TQUZBUklfSVRFUkFUT1JTOiBCVUdHWV9TQUZBUklfSVRFUkFUT1JTXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsInZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcblxuLy8gYExlbmd0aE9mQXJyYXlMaWtlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbGVuZ3Rob2ZhcnJheWxpa2Vcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdG9MZW5ndGgob2JqLmxlbmd0aCk7XG59O1xuIiwiLyogZXNsaW50LWRpc2FibGUgZXMvbm8tc3ltYm9sIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nICovXG52YXIgVjhfVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvbicpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlzeW1ib2xzIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG5tb2R1bGUuZXhwb3J0cyA9ICEhT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgc3ltYm9sID0gU3ltYm9sKCk7XG4gIC8vIENocm9tZSAzOCBTeW1ib2wgaGFzIGluY29ycmVjdCB0b1N0cmluZyBjb252ZXJzaW9uXG4gIC8vIGBnZXQtb3duLXByb3BlcnR5LXN5bWJvbHNgIHBvbHlmaWxsIHN5bWJvbHMgY29udmVydGVkIHRvIG9iamVjdCBhcmUgbm90IFN5bWJvbCBpbnN0YW5jZXNcbiAgcmV0dXJuICFTdHJpbmcoc3ltYm9sKSB8fCAhKE9iamVjdChzeW1ib2wpIGluc3RhbmNlb2YgU3ltYm9sKSB8fFxuICAgIC8vIENocm9tZSAzOC00MCBzeW1ib2xzIGFyZSBub3QgaW5oZXJpdGVkIGZyb20gRE9NIGNvbGxlY3Rpb25zIHByb3RvdHlwZXMgdG8gaW5zdGFuY2VzXG4gICAgIVN5bWJvbC5zaGFtICYmIFY4X1ZFUlNJT04gJiYgVjhfVkVSU0lPTiA8IDQxO1xufSk7XG4iLCJ2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIElURVJBVE9SID0gd2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciB1cmwgPSBuZXcgVVJMKCdiP2E9MSZiPTImYz0zJywgJ2h0dHA6Ly9hJyk7XG4gIHZhciBzZWFyY2hQYXJhbXMgPSB1cmwuc2VhcmNoUGFyYW1zO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIHVybC5wYXRobmFtZSA9ICdjJTIwZCc7XG4gIHNlYXJjaFBhcmFtcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgc2VhcmNoUGFyYW1zWydkZWxldGUnXSgnYicpO1xuICAgIHJlc3VsdCArPSBrZXkgKyB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiAoSVNfUFVSRSAmJiAhdXJsLnRvSlNPTilcbiAgICB8fCAhc2VhcmNoUGFyYW1zLnNvcnRcbiAgICB8fCB1cmwuaHJlZiAhPT0gJ2h0dHA6Ly9hL2MlMjBkP2E9MSZjPTMnXG4gICAgfHwgc2VhcmNoUGFyYW1zLmdldCgnYycpICE9PSAnMydcbiAgICB8fCBTdHJpbmcobmV3IFVSTFNlYXJjaFBhcmFtcygnP2E9MScpKSAhPT0gJ2E9MSdcbiAgICB8fCAhc2VhcmNoUGFyYW1zW0lURVJBVE9SXVxuICAgIC8vIHRocm93cyBpbiBFZGdlXG4gICAgfHwgbmV3IFVSTCgnaHR0cHM6Ly9hQGInKS51c2VybmFtZSAhPT0gJ2EnXG4gICAgfHwgbmV3IFVSTFNlYXJjaFBhcmFtcyhuZXcgVVJMU2VhcmNoUGFyYW1zKCdhPWInKSkuZ2V0KCdhJykgIT09ICdiJ1xuICAgIC8vIG5vdCBwdW55Y29kZWQgaW4gRWRnZVxuICAgIHx8IG5ldyBVUkwoJ2h0dHA6Ly/RgtC10YHRgicpLmhvc3QgIT09ICd4bi0tZTFheWJjJ1xuICAgIC8vIG5vdCBlc2NhcGVkIGluIENocm9tZSA2Mi1cbiAgICB8fCBuZXcgVVJMKCdodHRwOi8vYSPQsScpLmhhc2ggIT09ICcjJUQwJUIxJ1xuICAgIC8vIGZhaWxzIGluIENocm9tZSA2Ni1cbiAgICB8fCByZXN1bHQgIT09ICdhMWMzJ1xuICAgIC8vIHRocm93cyBpbiBTYWZhcmlcbiAgICB8fCBuZXcgVVJMKCdodHRwOi8veCcsIHVuZGVmaW5lZCkuaG9zdCAhPT0gJ3gnO1xufSk7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG5cbnZhciBXZWFrTWFwID0gZ2xvYmFsLldlYWtNYXA7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNDYWxsYWJsZShXZWFrTWFwKSAmJiAvbmF0aXZlIGNvZGUvLnRlc3QoaW5zcGVjdFNvdXJjZShXZWFrTWFwKSk7XG4iLCJ2YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcmVnZXhwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpc1JlZ0V4cChpdCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJUaGUgbWV0aG9kIGRvZXNuJ3QgYWNjZXB0IHJlZ3VsYXIgZXhwcmVzc2lvbnNcIik7XG4gIH0gcmV0dXJuIGl0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cycpO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzJyk7XG52YXIgcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBJbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0Jyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtYXNzaWduIC0tIHNhZmVcbnZhciAkYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuLy8gYE9iamVjdC5hc3NpZ25gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuYXNzaWduXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gc2hvdWxkIGhhdmUgY29ycmVjdCBvcmRlciBvZiBvcGVyYXRpb25zIChFZGdlIGJ1ZylcbiAgaWYgKERFU0NSSVBUT1JTICYmICRhc3NpZ24oeyBiOiAxIH0sICRhc3NpZ24oZGVmaW5lUHJvcGVydHkoe30sICdhJywge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eSh0aGlzLCAnYicsIHtcbiAgICAgICAgdmFsdWU6IDMsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0pLCB7IGI6IDIgfSkpLmIgIT09IDEpIHJldHVybiB0cnVlO1xuICAvLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1ZylcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLXN5bWJvbCAtLSBzYWZlXG4gIHZhciBzeW1ib2wgPSBTeW1ib2woKTtcbiAgdmFyIGFscGhhYmV0ID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtzeW1ib2xdID0gNztcbiAgYWxwaGFiZXQuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGNocikgeyBCW2Nocl0gPSBjaHI7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbc3ltYm9sXSAhPSA3IHx8IG9iamVjdEtleXMoJGFzc2lnbih7fSwgQikpLmpvaW4oJycpICE9IGFscGhhYmV0O1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycyAtLSByZXF1aXJlZCBmb3IgYC5sZW5ndGhgXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFyZ3VtZW50c0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUuZjtcbiAgdmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZjtcbiAgd2hpbGUgKGFyZ3VtZW50c0xlbmd0aCA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJbmRleGVkT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBvYmplY3RLZXlzKFMpLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoUykpIDogb2JqZWN0S2V5cyhTKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGopIHtcbiAgICAgIGtleSA9IGtleXNbaisrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChTLCBrZXkpKSBUW2tleV0gPSBTW2tleV07XG4gICAgfVxuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG4iLCIvKiBnbG9iYWwgQWN0aXZlWE9iamVjdCAtLSBvbGQgSUUsIFdTSCAqL1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGRlZmluZVByb3BlcnRpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0aWVzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5cycpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2h0bWwnKTtcbnZhciBkb2N1bWVudENyZWF0ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xuXG52YXIgR1QgPSAnPic7XG52YXIgTFQgPSAnPCc7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgU0NSSVBUID0gJ3NjcmlwdCc7XG52YXIgSUVfUFJPVE8gPSBzaGFyZWRLZXkoJ0lFX1BST1RPJyk7XG5cbnZhciBFbXB0eUNvbnN0cnVjdG9yID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuXG52YXIgc2NyaXB0VGFnID0gZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgcmV0dXJuIExUICsgU0NSSVBUICsgR1QgKyBjb250ZW50ICsgTFQgKyAnLycgKyBTQ1JJUFQgKyBHVDtcbn07XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBBY3RpdmVYIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgTnVsbFByb3RvT2JqZWN0VmlhQWN0aXZlWCA9IGZ1bmN0aW9uIChhY3RpdmVYRG9jdW1lbnQpIHtcbiAgYWN0aXZlWERvY3VtZW50LndyaXRlKHNjcmlwdFRhZygnJykpO1xuICBhY3RpdmVYRG9jdW1lbnQuY2xvc2UoKTtcbiAgdmFyIHRlbXAgPSBhY3RpdmVYRG9jdW1lbnQucGFyZW50V2luZG93Lk9iamVjdDtcbiAgYWN0aXZlWERvY3VtZW50ID0gbnVsbDsgLy8gYXZvaWQgbWVtb3J5IGxlYWtcbiAgcmV0dXJuIHRlbXA7XG59O1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgTnVsbFByb3RvT2JqZWN0VmlhSUZyYW1lID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gZG9jdW1lbnRDcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgdmFyIEpTID0gJ2phdmEnICsgU0NSSVBUICsgJzonO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBodG1sLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy80NzVcbiAgaWZyYW1lLnNyYyA9IFN0cmluZyhKUyk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUoc2NyaXB0VGFnKCdkb2N1bWVudC5GPU9iamVjdCcpKTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgcmV0dXJuIGlmcmFtZURvY3VtZW50LkY7XG59O1xuXG4vLyBDaGVjayBmb3IgZG9jdW1lbnQuZG9tYWluIGFuZCBhY3RpdmUgeCBzdXBwb3J0XG4vLyBObyBuZWVkIHRvIHVzZSBhY3RpdmUgeCBhcHByb2FjaCB3aGVuIGRvY3VtZW50LmRvbWFpbiBpcyBub3Qgc2V0XG4vLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2VzLXNoaW1zL2VzNS1zaGltL2lzc3Vlcy8xNTBcbi8vIHZhcmlhdGlvbiBvZiBodHRwczovL2dpdGh1Yi5jb20va2l0Y2FtYnJpZGdlL2VzNS1zaGltL2NvbW1pdC80ZjczOGFjMDY2MzQ2XG4vLyBhdm9pZCBJRSBHQyBidWdcbnZhciBhY3RpdmVYRG9jdW1lbnQ7XG52YXIgTnVsbFByb3RvT2JqZWN0ID0gZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIGFjdGl2ZVhEb2N1bWVudCA9IG5ldyBBY3RpdmVYT2JqZWN0KCdodG1sZmlsZScpO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBpZ25vcmUgKi8gfVxuICBOdWxsUHJvdG9PYmplY3QgPSB0eXBlb2YgZG9jdW1lbnQgIT0gJ3VuZGVmaW5lZCdcbiAgICA/IGRvY3VtZW50LmRvbWFpbiAmJiBhY3RpdmVYRG9jdW1lbnRcbiAgICAgID8gTnVsbFByb3RvT2JqZWN0VmlhQWN0aXZlWChhY3RpdmVYRG9jdW1lbnQpIC8vIG9sZCBJRVxuICAgICAgOiBOdWxsUHJvdG9PYmplY3RWaWFJRnJhbWUoKVxuICAgIDogTnVsbFByb3RvT2JqZWN0VmlhQWN0aXZlWChhY3RpdmVYRG9jdW1lbnQpOyAvLyBXU0hcbiAgdmFyIGxlbmd0aCA9IGVudW1CdWdLZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSBkZWxldGUgTnVsbFByb3RvT2JqZWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbbGVuZ3RoXV07XG4gIHJldHVybiBOdWxsUHJvdG9PYmplY3QoKTtcbn07XG5cbmhpZGRlbktleXNbSUVfUFJPVE9dID0gdHJ1ZTtcblxuLy8gYE9iamVjdC5jcmVhdGVgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuY3JlYXRlXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eUNvbnN0cnVjdG9yW1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHlDb25zdHJ1Y3RvcigpO1xuICAgIEVtcHR5Q29uc3RydWN0b3JbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gTnVsbFByb3RvT2JqZWN0KCk7XG4gIHJldHVybiBQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyByZXN1bHQgOiBkZWZpbmVQcm9wZXJ0aWVzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcblxuLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmRlZmluZXByb3BlcnRpZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydGllcyAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IERFU0NSSVBUT1JTID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIGRlZmluZVByb3BlcnR5TW9kdWxlLmYoTywga2V5ID0ga2V5c1tpbmRleCsrXSwgUHJvcGVydGllc1trZXldKTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciAkZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbi8vIGBPYmplY3QuZGVmaW5lUHJvcGVydHlgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydHlcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTID8gJGRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuICRkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJvcGVydHkta2V5Jyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pZTgtZG9tLWRlZmluZScpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbi8vIGBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5ZGVzY3JpcHRvclxuZXhwb3J0cy5mID0gREVTQ1JJUFRPUlMgPyAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSW5kZXhlZE9iamVjdChPKTtcbiAgUCA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzT3duKE8sIFApKSByZXR1cm4gY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKCFwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eW5hbWVzIC0tIHNhZmUgKi9cbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpLmY7XG5cbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nXG4gICAgPyBnZXRXaW5kb3dOYW1lcyhpdClcbiAgICA6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzKHRvSW5kZXhlZE9iamVjdChpdCkpO1xufTtcbiIsInZhciBpbnRlcm5hbE9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzJyk7XG5cbnZhciBoaWRkZW5LZXlzID0gZW51bUJ1Z0tleXMuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbi8vIGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eW5hbWVzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5bmFtZXMgLS0gc2FmZVxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiBpbnRlcm5hbE9iamVjdEtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eXN5bWJvbHMgLS0gc2FmZVxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsInZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xudmFyIENPUlJFQ1RfUFJPVE9UWVBFX0dFVFRFUiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3JyZWN0LXByb3RvdHlwZS1nZXR0ZXInKTtcblxudmFyIElFX1BST1RPID0gc2hhcmVkS2V5KCdJRV9QUk9UTycpO1xudmFyIE9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8vIGBPYmplY3QuZ2V0UHJvdG90eXBlT2ZgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0cHJvdG90eXBlb2Zcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0cHJvdG90eXBlb2YgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBDT1JSRUNUX1BST1RPVFlQRV9HRVRURVIgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiAoTykge1xuICB2YXIgb2JqZWN0ID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXNPd24ob2JqZWN0LCBJRV9QUk9UTykpIHJldHVybiBvYmplY3RbSUVfUFJPVE9dO1xuICB2YXIgY29uc3RydWN0b3IgPSBvYmplY3QuY29uc3RydWN0b3I7XG4gIGlmIChpc0NhbGxhYmxlKGNvbnN0cnVjdG9yKSAmJiBvYmplY3QgaW5zdGFuY2VvZiBjb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBjb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIE9iamVjdCA/IE9iamVjdFByb3RvdHlwZSA6IG51bGw7XG59O1xuIiwidmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgaW5kZXhPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pbmNsdWRlcycpLmluZGV4T2Y7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSAhaGFzT3duKGhpZGRlbktleXMsIGtleSkgJiYgaGFzT3duKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhc093bihPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5pbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGludGVybmFsT2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VudW0tYnVnLWtleXMnKTtcblxuLy8gYE9iamVjdC5rZXlzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmtleXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3Qta2V5cyAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTykge1xuICByZXR1cm4gaW50ZXJuYWxPYmplY3RLZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuLy8gTmFzaG9ybiB+IEpESzggYnVnXG52YXIgTkFTSE9STl9CVUcgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgJiYgISRwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHsgMTogMiB9LCAxKTtcblxuLy8gYE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGVgIG1ldGhvZCBpbXBsZW1lbnRhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QucHJvdG90eXBlLnByb3BlcnR5aXNlbnVtZXJhYmxlXG5leHBvcnRzLmYgPSBOQVNIT1JOX0JVRyA/IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKFYpIHtcbiAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGhpcywgVik7XG4gIHJldHVybiAhIWRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci5lbnVtZXJhYmxlO1xufSA6ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvIC0tIHNhZmUgKi9cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBhUG9zc2libGVQcm90b3R5cGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1wb3NzaWJsZS1wcm90b3R5cGUnKTtcblxuLy8gYE9iamVjdC5zZXRQcm90b3R5cGVPZmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5zZXRwcm90b3R5cGVvZlxuLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LXNldHByb3RvdHlwZW9mIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IGZ1bmN0aW9uICgpIHtcbiAgdmFyIENPUlJFQ1RfU0VUVEVSID0gZmFsc2U7XG4gIHZhciB0ZXN0ID0ge307XG4gIHZhciBzZXR0ZXI7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxuICAgIHNldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldDtcbiAgICBzZXR0ZXIuY2FsbCh0ZXN0LCBbXSk7XG4gICAgQ09SUkVDVF9TRVRURVIgPSB0ZXN0IGluc3RhbmNlb2YgQXJyYXk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKE8sIHByb3RvKSB7XG4gICAgYW5PYmplY3QoTyk7XG4gICAgYVBvc3NpYmxlUHJvdG90eXBlKHByb3RvKTtcbiAgICBpZiAoQ09SUkVDVF9TRVRURVIpIHNldHRlci5jYWxsKE8sIHByb3RvKTtcbiAgICBlbHNlIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgcmV0dXJuIE87XG4gIH07XG59KCkgOiB1bmRlZmluZWQpO1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cycpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlJykuZjtcblxuLy8gYE9iamVjdC57IGVudHJpZXMsIHZhbHVlcyB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKFRPX0VOVFJJRVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpdCkge1xuICAgIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KGl0KTtcbiAgICB2YXIga2V5cyA9IG9iamVjdEtleXMoTyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaSkge1xuICAgICAga2V5ID0ga2V5c1tpKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKE8sIGtleSkpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goVE9fRU5UUklFUyA/IFtrZXksIE9ba2V5XV0gOiBPW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8vIGBPYmplY3QuZW50cmllc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmVudHJpZXNcbiAgZW50cmllczogY3JlYXRlTWV0aG9kKHRydWUpLFxuICAvLyBgT2JqZWN0LnZhbHVlc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LnZhbHVlc1xuICB2YWx1ZXM6IGNyZWF0ZU1ldGhvZChmYWxzZSlcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgVE9fU1RSSU5HX1RBR19TVVBQT1JUID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydCcpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xuXG4vLyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gVE9fU1RSSU5HX1RBR19TVVBQT1JUID8ge30udG9TdHJpbmcgOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xufTtcbiIsInZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbi8vIGBPcmRpbmFyeVRvUHJpbWl0aXZlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb3JkaW5hcnl0b3ByaW1pdGl2ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQsIHByZWYpIHtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChwcmVmID09PSAnc3RyaW5nJyAmJiBpc0NhbGxhYmxlKGZuID0gaW5wdXQudG9TdHJpbmcpICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGlucHV0KSkpIHJldHVybiB2YWw7XG4gIGlmIChpc0NhbGxhYmxlKGZuID0gaW5wdXQudmFsdWVPZikgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHByZWYgIT09ICdzdHJpbmcnICYmIGlzQ2FsbGFibGUoZm4gPSBpbnB1dC50b1N0cmluZykgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsInZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGdldE93blByb3BlcnR5TmFtZXNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xuXG4vLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJ1aWx0SW4oJ1JlZmxlY3QnLCAnb3duS2V5cycpIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mO1xuICByZXR1cm4gZ2V0T3duUHJvcGVydHlTeW1ib2xzID8ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSkgOiBrZXlzO1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsO1xuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBvcHRpb25zKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgb3B0aW9ucyk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgc2V0R2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC1nbG9iYWwnKTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyIENPTkZJR1VSQUJMRV9GVU5DVElPTl9OQU1FID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLW5hbWUnKS5DT05GSUdVUkFCTEU7XG5cbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXQ7XG52YXIgZW5mb3JjZUludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmVuZm9yY2U7XG52YXIgVEVNUExBVEUgPSBTdHJpbmcoU3RyaW5nKS5zcGxpdCgnU3RyaW5nJyk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbHVlLCBvcHRpb25zKSB7XG4gIHZhciB1bnNhZmUgPSBvcHRpb25zID8gISFvcHRpb25zLnVuc2FmZSA6IGZhbHNlO1xuICB2YXIgc2ltcGxlID0gb3B0aW9ucyA/ICEhb3B0aW9ucy5lbnVtZXJhYmxlIDogZmFsc2U7XG4gIHZhciBub1RhcmdldEdldCA9IG9wdGlvbnMgPyAhIW9wdGlvbnMubm9UYXJnZXRHZXQgOiBmYWxzZTtcbiAgdmFyIG5hbWUgPSBvcHRpb25zICYmIG9wdGlvbnMubmFtZSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uYW1lIDoga2V5O1xuICB2YXIgc3RhdGU7XG4gIGlmIChpc0NhbGxhYmxlKHZhbHVlKSkge1xuICAgIGlmIChTdHJpbmcobmFtZSkuc2xpY2UoMCwgNykgPT09ICdTeW1ib2woJykge1xuICAgICAgbmFtZSA9ICdbJyArIFN0cmluZyhuYW1lKS5yZXBsYWNlKC9eU3ltYm9sXFwoKFteKV0qKVxcKS8sICckMScpICsgJ10nO1xuICAgIH1cbiAgICBpZiAoIWhhc093bih2YWx1ZSwgJ25hbWUnKSB8fCAoQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUgJiYgdmFsdWUubmFtZSAhPT0gbmFtZSkpIHtcbiAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSh2YWx1ZSwgJ25hbWUnLCBuYW1lKTtcbiAgICB9XG4gICAgc3RhdGUgPSBlbmZvcmNlSW50ZXJuYWxTdGF0ZSh2YWx1ZSk7XG4gICAgaWYgKCFzdGF0ZS5zb3VyY2UpIHtcbiAgICAgIHN0YXRlLnNvdXJjZSA9IFRFTVBMQVRFLmpvaW4odHlwZW9mIG5hbWUgPT0gJ3N0cmluZycgPyBuYW1lIDogJycpO1xuICAgIH1cbiAgfVxuICBpZiAoTyA9PT0gZ2xvYmFsKSB7XG4gICAgaWYgKHNpbXBsZSkgT1trZXldID0gdmFsdWU7XG4gICAgZWxzZSBzZXRHbG9iYWwoa2V5LCB2YWx1ZSk7XG4gICAgcmV0dXJuO1xuICB9IGVsc2UgaWYgKCF1bnNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICB9IGVsc2UgaWYgKCFub1RhcmdldEdldCAmJiBPW2tleV0pIHtcbiAgICBzaW1wbGUgPSB0cnVlO1xuICB9XG4gIGlmIChzaW1wbGUpIE9ba2V5XSA9IHZhbHVlO1xuICBlbHNlIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShPLCBrZXksIHZhbHVlKTtcbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxufSkoRnVuY3Rpb24ucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuIGlzQ2FsbGFibGUodGhpcykgJiYgZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKS5zb3VyY2UgfHwgaW5zcGVjdFNvdXJjZSh0aGlzKTtcbn0pO1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYycpO1xuXG4vLyBgUmVnRXhwRXhlY2AgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmIChpc0NhbGxhYmxlKGV4ZWMpKSB7XG4gICAgdmFyIHJlc3VsdCA9IGV4ZWMuY2FsbChSLCBTKTtcbiAgICBpZiAocmVzdWx0ICE9PSBudWxsKSBhbk9iamVjdChyZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKGNsYXNzb2YoUikgPT09ICdSZWdFeHAnKSByZXR1cm4gcmVnZXhwRXhlYy5jYWxsKFIsIFMpO1xuICB0aHJvdyBUeXBlRXJyb3IoJ1JlZ0V4cCNleGVjIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXInKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSByZWdleHAvbm8tZW1wdHktY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAsIHJlZ2V4cC9uby1sYXp5LWVuZHMgLS0gdGVzdGluZyAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVnZXhwL25vLXVzZWxlc3MtcXVhbnRpZmllciAtLSB0ZXN0aW5nICovXG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzJyk7XG52YXIgc3RpY2t5SGVscGVycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJykuZ2V0O1xudmFyIFVOU1VQUE9SVEVEX0RPVF9BTEwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLWRvdC1hbGwnKTtcbnZhciBVTlNVUFBPUlRFRF9OQ0cgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLW5jZycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbnZhciBuYXRpdmVSZXBsYWNlID0gc2hhcmVkKCduYXRpdmUtc3RyaW5nLXJlcGxhY2UnLCBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2UpO1xuXG52YXIgcGF0Y2hlZEV4ZWMgPSBuYXRpdmVFeGVjO1xuXG52YXIgVVBEQVRFU19MQVNUX0lOREVYX1dST05HID0gKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlMSA9IC9hLztcbiAgdmFyIHJlMiA9IC9iKi9nO1xuICBuYXRpdmVFeGVjLmNhbGwocmUxLCAnYScpO1xuICBuYXRpdmVFeGVjLmNhbGwocmUyLCAnYScpO1xuICByZXR1cm4gcmUxLmxhc3RJbmRleCAhPT0gMCB8fCByZTIubGFzdEluZGV4ICE9PSAwO1xufSkoKTtcblxudmFyIFVOU1VQUE9SVEVEX1kgPSBzdGlja3lIZWxwZXJzLlVOU1VQUE9SVEVEX1kgfHwgc3RpY2t5SGVscGVycy5CUk9LRU5fQ0FSRVQ7XG5cbi8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC5cbnZhciBOUENHX0lOQ0xVREVEID0gLygpPz8vLmV4ZWMoJycpWzFdICE9PSB1bmRlZmluZWQ7XG5cbnZhciBQQVRDSCA9IFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyB8fCBOUENHX0lOQ0xVREVEIHx8IFVOU1VQUE9SVEVEX1kgfHwgVU5TVVBQT1JURURfRE9UX0FMTCB8fCBVTlNVUFBPUlRFRF9OQ0c7XG5cbmlmIChQQVRDSCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXN0YXRlbWVudHMgLS0gVE9ET1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyaW5nKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHJlKTtcbiAgICB2YXIgc3RyID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICB2YXIgcmF3ID0gc3RhdGUucmF3O1xuICAgIHZhciByZXN1bHQsIHJlQ29weSwgbGFzdEluZGV4LCBtYXRjaCwgaSwgb2JqZWN0LCBncm91cDtcblxuICAgIGlmIChyYXcpIHtcbiAgICAgIHJhdy5sYXN0SW5kZXggPSByZS5sYXN0SW5kZXg7XG4gICAgICByZXN1bHQgPSBwYXRjaGVkRXhlYy5jYWxsKHJhdywgc3RyKTtcbiAgICAgIHJlLmxhc3RJbmRleCA9IHJhdy5sYXN0SW5kZXg7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIHZhciBncm91cHMgPSBzdGF0ZS5ncm91cHM7XG4gICAgdmFyIHN0aWNreSA9IFVOU1VQUE9SVEVEX1kgJiYgcmUuc3RpY2t5O1xuICAgIHZhciBmbGFncyA9IHJlZ2V4cEZsYWdzLmNhbGwocmUpO1xuICAgIHZhciBzb3VyY2UgPSByZS5zb3VyY2U7XG4gICAgdmFyIGNoYXJzQWRkZWQgPSAwO1xuICAgIHZhciBzdHJDb3B5ID0gc3RyO1xuXG4gICAgaWYgKHN0aWNreSkge1xuICAgICAgZmxhZ3MgPSBmbGFncy5yZXBsYWNlKCd5JywgJycpO1xuICAgICAgaWYgKGZsYWdzLmluZGV4T2YoJ2cnKSA9PT0gLTEpIHtcbiAgICAgICAgZmxhZ3MgKz0gJ2cnO1xuICAgICAgfVxuXG4gICAgICBzdHJDb3B5ID0gc3RyLnNsaWNlKHJlLmxhc3RJbmRleCk7XG4gICAgICAvLyBTdXBwb3J0IGFuY2hvcmVkIHN0aWNreSBiZWhhdmlvci5cbiAgICAgIGlmIChyZS5sYXN0SW5kZXggPiAwICYmICghcmUubXVsdGlsaW5lIHx8IHJlLm11bHRpbGluZSAmJiBzdHIuY2hhckF0KHJlLmxhc3RJbmRleCAtIDEpICE9PSAnXFxuJykpIHtcbiAgICAgICAgc291cmNlID0gJyg/OiAnICsgc291cmNlICsgJyknO1xuICAgICAgICBzdHJDb3B5ID0gJyAnICsgc3RyQ29weTtcbiAgICAgICAgY2hhcnNBZGRlZCsrO1xuICAgICAgfVxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIHN0ciBzbGljaW5nLCB0b1xuICAgICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLlxuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXig/OicgKyBzb3VyY2UgKyAnKScsIGZsYWdzKTtcbiAgICB9XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyBzb3VyY2UgKyAnJCg/IVxcXFxzKScsIGZsYWdzKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmUubGFzdEluZGV4O1xuXG4gICAgbWF0Y2ggPSBuYXRpdmVFeGVjLmNhbGwoc3RpY2t5ID8gcmVDb3B5IDogcmUsIHN0ckNvcHkpO1xuXG4gICAgaWYgKHN0aWNreSkge1xuICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIG1hdGNoLmlucHV0ID0gbWF0Y2guaW5wdXQuc2xpY2UoY2hhcnNBZGRlZCk7XG4gICAgICAgIG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoY2hhcnNBZGRlZCk7XG4gICAgICAgIG1hdGNoLmluZGV4ID0gcmUubGFzdEluZGV4O1xuICAgICAgICByZS5sYXN0SW5kZXggKz0gbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgfSBlbHNlIHJlLmxhc3RJbmRleCA9IDA7XG4gICAgfSBlbHNlIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlLmxhc3RJbmRleCA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJyB3b3JrIGZvciAvKC4/KT8vXG4gICAgICBuYXRpdmVSZXBsYWNlLmNhbGwobWF0Y2hbMF0sIHJlQ29weSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykge1xuICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCkgbWF0Y2hbaV0gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChtYXRjaCAmJiBncm91cHMpIHtcbiAgICAgIG1hdGNoLmdyb3VwcyA9IG9iamVjdCA9IGNyZWF0ZShudWxsKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZ3JvdXAgPSBncm91cHNbaV07XG4gICAgICAgIG9iamVjdFtncm91cFswXV0gPSBtYXRjaFtncm91cFsxXV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xuXG4vLyBgUmVnRXhwLnByb3RvdHlwZS5mbGFnc2AgZ2V0dGVyIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldC1yZWdleHAucHJvdG90eXBlLmZsYWdzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSBhbk9iamVjdCh0aGlzKTtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAodGhhdC5nbG9iYWwpIHJlc3VsdCArPSAnZyc7XG4gIGlmICh0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7XG4gIGlmICh0aGF0Lm11bHRpbGluZSkgcmVzdWx0ICs9ICdtJztcbiAgaWYgKHRoYXQuZG90QWxsKSByZXN1bHQgKz0gJ3MnO1xuICBpZiAodGhhdC51bmljb2RlKSByZXN1bHQgKz0gJ3UnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBiYWJlbC1taW5pZnkgYW5kIENsb3N1cmUgQ29tcGlsZXIgdHJhbnNwaWxlcyBSZWdFeHAoJ2EnLCAneScpIC0+IC9hL3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyICRSZWdFeHAgPSBnbG9iYWwuUmVnRXhwO1xuXG5leHBvcnRzLlVOU1VQUE9SVEVEX1kgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJ2EnLCAneScpO1xuICByZS5sYXN0SW5kZXggPSAyO1xuICByZXR1cm4gcmUuZXhlYygnYWJjZCcpICE9IG51bGw7XG59KTtcblxuZXhwb3J0cy5CUk9LRU5fQ0FSRVQgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTc3MzY4N1xuICB2YXIgcmUgPSAkUmVnRXhwKCdecicsICdneScpO1xuICByZS5sYXN0SW5kZXggPSAyO1xuICByZXR1cm4gcmUuZXhlYygnc3RyJykgIT0gbnVsbDtcbn0pO1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBiYWJlbC1taW5pZnkgYW5kIENsb3N1cmUgQ29tcGlsZXIgdHJhbnNwaWxlcyBSZWdFeHAoJy4nLCAncycpIC0+IC8uL3MgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyICRSZWdFeHAgPSBnbG9iYWwuUmVnRXhwO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlID0gJFJlZ0V4cCgnLicsICdzJyk7XG4gIHJldHVybiAhKHJlLmRvdEFsbCAmJiByZS5leGVjKCdcXG4nKSAmJiByZS5mbGFncyA9PT0gJ3MnKTtcbn0pO1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBiYWJlbC1taW5pZnkgYW5kIENsb3N1cmUgQ29tcGlsZXIgdHJhbnNwaWxlcyBSZWdFeHAoJyg/PGE+YiknLCAnZycpIC0+IC8oPzxhPmIpL2cgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyICRSZWdFeHAgPSBnbG9iYWwuUmVnRXhwO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlID0gJFJlZ0V4cCgnKD88YT5iKScsICdnJyk7XG4gIHJldHVybiByZS5leGVjKCdiJykuZ3JvdXBzLmEgIT09ICdiJyB8fFxuICAgICdiJy5yZXBsYWNlKHJlLCAnJDxhPmMnKSAhPT0gJ2JjJztcbn0pO1xuIiwiLy8gYFJlcXVpcmVPYmplY3RDb2VyY2libGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1yZXF1aXJlb2JqZWN0Y29lcmNpYmxlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIGBTYW1lVmFsdWVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zYW1ldmFsdWVcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtaXMgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaXMgfHwgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICByZXR1cm4geCA9PT0geSA/IHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5IDogeCAhPSB4ICYmIHkgIT0geTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGdsb2JhbCwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBnbG9iYWxba2V5XSA9IHZhbHVlO1xuICB9IHJldHVybiB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ09OU1RSVUNUT1JfTkFNRSkge1xuICB2YXIgQ29uc3RydWN0b3IgPSBnZXRCdWlsdEluKENPTlNUUlVDVE9SX05BTUUpO1xuICB2YXIgZGVmaW5lUHJvcGVydHkgPSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mO1xuXG4gIGlmIChERVNDUklQVE9SUyAmJiBDb25zdHJ1Y3RvciAmJiAhQ29uc3RydWN0b3JbU1BFQ0lFU10pIHtcbiAgICBkZWZpbmVQcm9wZXJ0eShDb25zdHJ1Y3RvciwgU1BFQ0lFUywge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9XG4gICAgfSk7XG4gIH1cbn07XG4iLCJ2YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBUQUcsIFNUQVRJQykge1xuICBpZiAoaXQgJiYgIWhhc093bihpdCA9IFNUQVRJQyA/IGl0IDogaXQucHJvdG90eXBlLCBUT19TVFJJTkdfVEFHKSkge1xuICAgIGRlZmluZVByb3BlcnR5KGl0LCBUT19TVFJJTkdfVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IFRBRyB9KTtcbiAgfVxufTtcbiIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3VpZCcpO1xuXG52YXIga2V5cyA9IHNoYXJlZCgna2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIGtleXNba2V5XSB8fCAoa2V5c1trZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgc2V0R2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC1nbG9iYWwnKTtcblxudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgc2V0R2xvYmFsKFNIQVJFRCwge30pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0b3JlO1xuIiwidmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xudmFyIHN0b3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogJzMuMTguMycsXG4gIG1vZGU6IElTX1BVUkUgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAyMSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGFDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hLWNvbnN0cnVjdG9yJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBTUEVDSUVTID0gd2VsbEtub3duU3ltYm9sKCdzcGVjaWVzJyk7XG5cbi8vIGBTcGVjaWVzQ29uc3RydWN0b3JgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zcGVjaWVzY29uc3RydWN0b3Jcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIGRlZmF1bHRDb25zdHJ1Y3Rvcikge1xuICB2YXIgQyA9IGFuT2JqZWN0KE8pLmNvbnN0cnVjdG9yO1xuICB2YXIgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBkZWZhdWx0Q29uc3RydWN0b3IgOiBhQ29uc3RydWN0b3IoUyk7XG59O1xuIiwidmFyIHRvSW50ZWdlck9ySW5maW5pdHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW50ZWdlci1vci1pbmZpbml0eScpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG5cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoQ09OVkVSVF9UT19TVFJJTkcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgcG9zKSB7XG4gICAgdmFyIFMgPSB0b1N0cmluZyhyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKCR0aGlzKSk7XG4gICAgdmFyIHBvc2l0aW9uID0gdG9JbnRlZ2VyT3JJbmZpbml0eShwb3MpO1xuICAgIHZhciBzaXplID0gUy5sZW5ndGg7XG4gICAgdmFyIGZpcnN0LCBzZWNvbmQ7XG4gICAgaWYgKHBvc2l0aW9uIDwgMCB8fCBwb3NpdGlvbiA+PSBzaXplKSByZXR1cm4gQ09OVkVSVF9UT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBmaXJzdCA9IFMuY2hhckNvZGVBdChwb3NpdGlvbik7XG4gICAgcmV0dXJuIGZpcnN0IDwgMHhEODAwIHx8IGZpcnN0ID4gMHhEQkZGIHx8IHBvc2l0aW9uICsgMSA9PT0gc2l6ZVxuICAgICAgfHwgKHNlY29uZCA9IFMuY2hhckNvZGVBdChwb3NpdGlvbiArIDEpKSA8IDB4REMwMCB8fCBzZWNvbmQgPiAweERGRkZcbiAgICAgICAgPyBDT05WRVJUX1RPX1NUUklORyA/IFMuY2hhckF0KHBvc2l0aW9uKSA6IGZpcnN0XG4gICAgICAgIDogQ09OVkVSVF9UT19TVFJJTkcgPyBTLnNsaWNlKHBvc2l0aW9uLCBwb3NpdGlvbiArIDIpIDogKGZpcnN0IC0gMHhEODAwIDw8IDEwKSArIChzZWNvbmQgLSAweERDMDApICsgMHgxMDAwMDtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBgU3RyaW5nLnByb3RvdHlwZS5jb2RlUG9pbnRBdGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5jb2RlcG9pbnRhdFxuICBjb2RlQXQ6IGNyZWF0ZU1ldGhvZChmYWxzZSksXG4gIC8vIGBTdHJpbmcucHJvdG90eXBlLmF0YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvU3RyaW5nLnByb3RvdHlwZS5hdFxuICBjaGFyQXQ6IGNyZWF0ZU1ldGhvZCh0cnVlKVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9wdW55Y29kZS5qcy9ibG9iL21hc3Rlci9wdW55Y29kZS5qc1xudmFyIG1heEludCA9IDIxNDc0ODM2NDc7IC8vIGFrYS4gMHg3RkZGRkZGRiBvciAyXjMxLTFcbnZhciBiYXNlID0gMzY7XG52YXIgdE1pbiA9IDE7XG52YXIgdE1heCA9IDI2O1xudmFyIHNrZXcgPSAzODtcbnZhciBkYW1wID0gNzAwO1xudmFyIGluaXRpYWxCaWFzID0gNzI7XG52YXIgaW5pdGlhbE4gPSAxMjg7IC8vIDB4ODBcbnZhciBkZWxpbWl0ZXIgPSAnLSc7IC8vICdcXHgyRCdcbnZhciByZWdleE5vbkFTQ0lJID0gL1teXFwwLVxcdTAwN0VdLzsgLy8gbm9uLUFTQ0lJIGNoYXJzXG52YXIgcmVnZXhTZXBhcmF0b3JzID0gL1suXFx1MzAwMlxcdUZGMEVcXHVGRjYxXS9nOyAvLyBSRkMgMzQ5MCBzZXBhcmF0b3JzXG52YXIgT1ZFUkZMT1dfRVJST1IgPSAnT3ZlcmZsb3c6IGlucHV0IG5lZWRzIHdpZGVyIGludGVnZXJzIHRvIHByb2Nlc3MnO1xudmFyIGJhc2VNaW51c1RNaW4gPSBiYXNlIC0gdE1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgc3RyaW5nRnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51bWVyaWMgY29kZSBwb2ludHMgb2YgZWFjaCBVbmljb2RlXG4gKiBjaGFyYWN0ZXIgaW4gdGhlIHN0cmluZy4gV2hpbGUgSmF2YVNjcmlwdCB1c2VzIFVDUy0yIGludGVybmFsbHksXG4gKiB0aGlzIGZ1bmN0aW9uIHdpbGwgY29udmVydCBhIHBhaXIgb2Ygc3Vycm9nYXRlIGhhbHZlcyAoZWFjaCBvZiB3aGljaFxuICogVUNTLTIgZXhwb3NlcyBhcyBzZXBhcmF0ZSBjaGFyYWN0ZXJzKSBpbnRvIGEgc2luZ2xlIGNvZGUgcG9pbnQsXG4gKiBtYXRjaGluZyBVVEYtMTYuXG4gKi9cbnZhciB1Y3MyZGVjb2RlID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgb3V0cHV0ID0gW107XG4gIHZhciBjb3VudGVyID0gMDtcbiAgdmFyIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gIHdoaWxlIChjb3VudGVyIDwgbGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcbiAgICBpZiAodmFsdWUgPj0gMHhEODAwICYmIHZhbHVlIDw9IDB4REJGRiAmJiBjb3VudGVyIDwgbGVuZ3RoKSB7XG4gICAgICAvLyBJdCdzIGEgaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyLlxuICAgICAgdmFyIGV4dHJhID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcbiAgICAgIGlmICgoZXh0cmEgJiAweEZDMDApID09IDB4REMwMCkgeyAvLyBMb3cgc3Vycm9nYXRlLlxuICAgICAgICBvdXRwdXQucHVzaCgoKHZhbHVlICYgMHgzRkYpIDw8IDEwKSArIChleHRyYSAmIDB4M0ZGKSArIDB4MTAwMDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSXQncyBhbiB1bm1hdGNoZWQgc3Vycm9nYXRlOyBvbmx5IGFwcGVuZCB0aGlzIGNvZGUgdW5pdCwgaW4gY2FzZSB0aGVcbiAgICAgICAgLy8gbmV4dCBjb2RlIHVuaXQgaXMgdGhlIGhpZ2ggc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXIuXG4gICAgICAgIG91dHB1dC5wdXNoKHZhbHVlKTtcbiAgICAgICAgY291bnRlci0tO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBvdXRwdXQucHVzaCh2YWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59O1xuXG4vKipcbiAqIENvbnZlcnRzIGEgZGlnaXQvaW50ZWdlciBpbnRvIGEgYmFzaWMgY29kZSBwb2ludC5cbiAqL1xudmFyIGRpZ2l0VG9CYXNpYyA9IGZ1bmN0aW9uIChkaWdpdCkge1xuICAvLyAgMC4uMjUgbWFwIHRvIEFTQ0lJIGEuLnogb3IgQS4uWlxuICAvLyAyNi4uMzUgbWFwIHRvIEFTQ0lJIDAuLjlcbiAgcmV0dXJuIGRpZ2l0ICsgMjIgKyA3NSAqIChkaWdpdCA8IDI2KTtcbn07XG5cbi8qKlxuICogQmlhcyBhZGFwdGF0aW9uIGZ1bmN0aW9uIGFzIHBlciBzZWN0aW9uIDMuNCBvZiBSRkMgMzQ5Mi5cbiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzNDkyI3NlY3Rpb24tMy40XG4gKi9cbnZhciBhZGFwdCA9IGZ1bmN0aW9uIChkZWx0YSwgbnVtUG9pbnRzLCBmaXJzdFRpbWUpIHtcbiAgdmFyIGsgPSAwO1xuICBkZWx0YSA9IGZpcnN0VGltZSA/IGZsb29yKGRlbHRhIC8gZGFtcCkgOiBkZWx0YSA+PiAxO1xuICBkZWx0YSArPSBmbG9vcihkZWx0YSAvIG51bVBvaW50cyk7XG4gIGZvciAoOyBkZWx0YSA+IGJhc2VNaW51c1RNaW4gKiB0TWF4ID4+IDE7IGsgKz0gYmFzZSkge1xuICAgIGRlbHRhID0gZmxvb3IoZGVsdGEgLyBiYXNlTWludXNUTWluKTtcbiAgfVxuICByZXR1cm4gZmxvb3IoayArIChiYXNlTWludXNUTWluICsgMSkgKiBkZWx0YSAvIChkZWx0YSArIHNrZXcpKTtcbn07XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzIChlLmcuIGEgZG9tYWluIG5hbWUgbGFiZWwpIHRvIGFcbiAqIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50cyAtLSBUT0RPXG52YXIgZW5jb2RlID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gIHZhciBvdXRwdXQgPSBbXTtcblxuICAvLyBDb252ZXJ0IHRoZSBpbnB1dCBpbiBVQ1MtMiB0byBhbiBhcnJheSBvZiBVbmljb2RlIGNvZGUgcG9pbnRzLlxuICBpbnB1dCA9IHVjczJkZWNvZGUoaW5wdXQpO1xuXG4gIC8vIENhY2hlIHRoZSBsZW5ndGguXG4gIHZhciBpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDtcblxuICAvLyBJbml0aWFsaXplIHRoZSBzdGF0ZS5cbiAgdmFyIG4gPSBpbml0aWFsTjtcbiAgdmFyIGRlbHRhID0gMDtcbiAgdmFyIGJpYXMgPSBpbml0aWFsQmlhcztcbiAgdmFyIGksIGN1cnJlbnRWYWx1ZTtcblxuICAvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzLlxuICBmb3IgKGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICBjdXJyZW50VmFsdWUgPSBpbnB1dFtpXTtcbiAgICBpZiAoY3VycmVudFZhbHVlIDwgMHg4MCkge1xuICAgICAgb3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGN1cnJlbnRWYWx1ZSkpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBiYXNpY0xlbmd0aCA9IG91dHB1dC5sZW5ndGg7IC8vIG51bWJlciBvZiBiYXNpYyBjb2RlIHBvaW50cy5cbiAgdmFyIGhhbmRsZWRDUENvdW50ID0gYmFzaWNMZW5ndGg7IC8vIG51bWJlciBvZiBjb2RlIHBvaW50cyB0aGF0IGhhdmUgYmVlbiBoYW5kbGVkO1xuXG4gIC8vIEZpbmlzaCB0aGUgYmFzaWMgc3RyaW5nIHdpdGggYSBkZWxpbWl0ZXIgdW5sZXNzIGl0J3MgZW1wdHkuXG4gIGlmIChiYXNpY0xlbmd0aCkge1xuICAgIG91dHB1dC5wdXNoKGRlbGltaXRlcik7XG4gIH1cblxuICAvLyBNYWluIGVuY29kaW5nIGxvb3A6XG4gIHdoaWxlIChoYW5kbGVkQ1BDb3VudCA8IGlucHV0TGVuZ3RoKSB7XG4gICAgLy8gQWxsIG5vbi1iYXNpYyBjb2RlIHBvaW50cyA8IG4gaGF2ZSBiZWVuIGhhbmRsZWQgYWxyZWFkeS4gRmluZCB0aGUgbmV4dCBsYXJnZXIgb25lOlxuICAgIHZhciBtID0gbWF4SW50O1xuICAgIGZvciAoaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgICAgY3VycmVudFZhbHVlID0gaW5wdXRbaV07XG4gICAgICBpZiAoY3VycmVudFZhbHVlID49IG4gJiYgY3VycmVudFZhbHVlIDwgbSkge1xuICAgICAgICBtID0gY3VycmVudFZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEluY3JlYXNlIGBkZWx0YWAgZW5vdWdoIHRvIGFkdmFuY2UgdGhlIGRlY29kZXIncyA8bixpPiBzdGF0ZSB0byA8bSwwPiwgYnV0IGd1YXJkIGFnYWluc3Qgb3ZlcmZsb3cuXG4gICAgdmFyIGhhbmRsZWRDUENvdW50UGx1c09uZSA9IGhhbmRsZWRDUENvdW50ICsgMTtcbiAgICBpZiAobSAtIG4gPiBmbG9vcigobWF4SW50IC0gZGVsdGEpIC8gaGFuZGxlZENQQ291bnRQbHVzT25lKSkge1xuICAgICAgdGhyb3cgUmFuZ2VFcnJvcihPVkVSRkxPV19FUlJPUik7XG4gICAgfVxuXG4gICAgZGVsdGEgKz0gKG0gLSBuKSAqIGhhbmRsZWRDUENvdW50UGx1c09uZTtcbiAgICBuID0gbTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgICAgY3VycmVudFZhbHVlID0gaW5wdXRbaV07XG4gICAgICBpZiAoY3VycmVudFZhbHVlIDwgbiAmJiArK2RlbHRhID4gbWF4SW50KSB7XG4gICAgICAgIHRocm93IFJhbmdlRXJyb3IoT1ZFUkZMT1dfRVJST1IpO1xuICAgICAgfVxuICAgICAgaWYgKGN1cnJlbnRWYWx1ZSA9PSBuKSB7XG4gICAgICAgIC8vIFJlcHJlc2VudCBkZWx0YSBhcyBhIGdlbmVyYWxpemVkIHZhcmlhYmxlLWxlbmd0aCBpbnRlZ2VyLlxuICAgICAgICB2YXIgcSA9IGRlbHRhO1xuICAgICAgICBmb3IgKHZhciBrID0gYmFzZTsgLyogbm8gY29uZGl0aW9uICovOyBrICs9IGJhc2UpIHtcbiAgICAgICAgICB2YXIgdCA9IGsgPD0gYmlhcyA/IHRNaW4gOiAoayA+PSBiaWFzICsgdE1heCA/IHRNYXggOiBrIC0gYmlhcyk7XG4gICAgICAgICAgaWYgKHEgPCB0KSBicmVhaztcbiAgICAgICAgICB2YXIgcU1pbnVzVCA9IHEgLSB0O1xuICAgICAgICAgIHZhciBiYXNlTWludXNUID0gYmFzZSAtIHQ7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGRpZ2l0VG9CYXNpYyh0ICsgcU1pbnVzVCAlIGJhc2VNaW51c1QpKSk7XG4gICAgICAgICAgcSA9IGZsb29yKHFNaW51c1QgLyBiYXNlTWludXNUKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG91dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShkaWdpdFRvQmFzaWMocSkpKTtcbiAgICAgICAgYmlhcyA9IGFkYXB0KGRlbHRhLCBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsIGhhbmRsZWRDUENvdW50ID09IGJhc2ljTGVuZ3RoKTtcbiAgICAgICAgZGVsdGEgPSAwO1xuICAgICAgICArK2hhbmRsZWRDUENvdW50O1xuICAgICAgfVxuICAgIH1cblxuICAgICsrZGVsdGE7XG4gICAgKytuO1xuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICB2YXIgZW5jb2RlZCA9IFtdO1xuICB2YXIgbGFiZWxzID0gaW5wdXQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKHJlZ2V4U2VwYXJhdG9ycywgJ1xcdTAwMkUnKS5zcGxpdCgnLicpO1xuICB2YXIgaSwgbGFiZWw7XG4gIGZvciAoaSA9IDA7IGkgPCBsYWJlbHMubGVuZ3RoOyBpKyspIHtcbiAgICBsYWJlbCA9IGxhYmVsc1tpXTtcbiAgICBlbmNvZGVkLnB1c2gocmVnZXhOb25BU0NJSS50ZXN0KGxhYmVsKSA/ICd4bi0tJyArIGVuY29kZShsYWJlbCkgOiBsYWJlbCk7XG4gIH1cbiAgcmV0dXJuIGVuY29kZWQuam9pbignLicpO1xufTtcbiIsInZhciBQUk9QRVJfRlVOQ1RJT05fTkFNRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1uYW1lJykuUFJPUEVSO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgd2hpdGVzcGFjZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2hpdGVzcGFjZXMnKTtcblxudmFyIG5vbiA9ICdcXHUyMDBCXFx1MDA4NVxcdTE4MEUnO1xuXG4vLyBjaGVjayB0aGF0IGEgbWV0aG9kIHdvcmtzIHdpdGggdGhlIGNvcnJlY3QgbGlzdFxuLy8gb2Ygd2hpdGVzcGFjZXMgYW5kIGhhcyBhIGNvcnJlY3QgbmFtZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUpIHtcbiAgcmV0dXJuIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gISF3aGl0ZXNwYWNlc1tNRVRIT0RfTkFNRV0oKVxuICAgICAgfHwgbm9uW01FVEhPRF9OQU1FXSgpICE9PSBub25cbiAgICAgIHx8IChQUk9QRVJfRlVOQ1RJT05fTkFNRSAmJiB3aGl0ZXNwYWNlc1tNRVRIT0RfTkFNRV0ubmFtZSAhPT0gTUVUSE9EX05BTUUpO1xuICB9KTtcbn07XG4iLCJ2YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciB3aGl0ZXNwYWNlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93aGl0ZXNwYWNlcycpO1xuXG52YXIgd2hpdGVzcGFjZSA9ICdbJyArIHdoaXRlc3BhY2VzICsgJ10nO1xudmFyIGx0cmltID0gUmVnRXhwKCdeJyArIHdoaXRlc3BhY2UgKyB3aGl0ZXNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cCh3aGl0ZXNwYWNlICsgd2hpdGVzcGFjZSArICcqJCcpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS57IHRyaW0sIHRyaW1TdGFydCwgdHJpbUVuZCwgdHJpbUxlZnQsIHRyaW1SaWdodCB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKFRZUEUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcykge1xuICAgIHZhciBzdHJpbmcgPSB0b1N0cmluZyhyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKCR0aGlzKSk7XG4gICAgaWYgKFRZUEUgJiAxKSBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShsdHJpbSwgJycpO1xuICAgIGlmIChUWVBFICYgMikgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgICByZXR1cm4gc3RyaW5nO1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8vIGBTdHJpbmcucHJvdG90eXBlLnsgdHJpbUxlZnQsIHRyaW1TdGFydCB9YCBtZXRob2RzXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS50cmltc3RhcnRcbiAgc3RhcnQ6IGNyZWF0ZU1ldGhvZCgxKSxcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUueyB0cmltUmlnaHQsIHRyaW1FbmQgfWAgbWV0aG9kc1xuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUudHJpbWVuZFxuICBlbmQ6IGNyZWF0ZU1ldGhvZCgyKSxcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUudHJpbWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS50cmltXG4gIHRyaW06IGNyZWF0ZU1ldGhvZCgzKVxufTtcbiIsInZhciB2YWx1ZU9mID0gMS4wLnZhbHVlT2Y7XG5cbi8vIGB0aGlzTnVtYmVyVmFsdWVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10aGlzbnVtYmVydmFsdWVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZU9mLmNhbGwodmFsdWUpO1xufTtcbiIsInZhciB0b0ludGVnZXJPckluZmluaXR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHknKTtcblxudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG4vLyBIZWxwZXIgZm9yIGEgcG9wdWxhciByZXBlYXRpbmcgY2FzZSBvZiB0aGUgc3BlYzpcbi8vIExldCBpbnRlZ2VyIGJlID8gVG9JbnRlZ2VyKGluZGV4KS5cbi8vIElmIGludGVnZXIgPCAwLCBsZXQgcmVzdWx0IGJlIG1heCgobGVuZ3RoICsgaW50ZWdlciksIDApOyBlbHNlIGxldCByZXN1bHQgYmUgbWluKGludGVnZXIsIGxlbmd0aCkuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIHZhciBpbnRlZ2VyID0gdG9JbnRlZ2VyT3JJbmZpbml0eShpbmRleCk7XG4gIHJldHVybiBpbnRlZ2VyIDwgMCA/IG1heChpbnRlZ2VyICsgbGVuZ3RoLCAwKSA6IG1pbihpbnRlZ2VyLCBsZW5ndGgpO1xufTtcbiIsIi8vIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJbmRleGVkT2JqZWN0KHJlcXVpcmVPYmplY3RDb2VyY2libGUoaXQpKTtcbn07XG4iLCJ2YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cbi8vIGBUb0ludGVnZXJPckluZmluaXR5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9pbnRlZ2Vyb3JpbmZpbml0eVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIG51bWJlciA9ICthcmd1bWVudDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZSAtLSBzYWZlXG4gIHJldHVybiBudW1iZXIgIT09IG51bWJlciB8fCBudW1iZXIgPT09IDAgPyAwIDogKG51bWJlciA+IDAgPyBmbG9vciA6IGNlaWwpKG51bWJlcik7XG59O1xuIiwidmFyIHRvSW50ZWdlck9ySW5maW5pdHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW50ZWdlci1vci1pbmZpbml0eScpO1xuXG52YXIgbWluID0gTWF0aC5taW47XG5cbi8vIGBUb0xlbmd0aGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbGVuZ3RoXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gYXJndW1lbnQgPiAwID8gbWluKHRvSW50ZWdlck9ySW5maW5pdHkoYXJndW1lbnQpLCAweDFGRkZGRkZGRkZGRkZGKSA6IDA7IC8vIDIgKiogNTMgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCJ2YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcblxuLy8gYFRvT2JqZWN0YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9vYmplY3Rcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiBPYmplY3QocmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudCkpO1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1zeW1ib2wnKTtcbnZhciBnZXRNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LW1ldGhvZCcpO1xudmFyIG9yZGluYXJ5VG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3JkaW5hcnktdG8tcHJpbWl0aXZlJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBUT19QUklNSVRJVkUgPSB3ZWxsS25vd25TeW1ib2woJ3RvUHJpbWl0aXZlJyk7XG5cbi8vIGBUb1ByaW1pdGl2ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvcHJpbWl0aXZlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbnB1dCwgcHJlZikge1xuICBpZiAoIWlzT2JqZWN0KGlucHV0KSB8fCBpc1N5bWJvbChpbnB1dCkpIHJldHVybiBpbnB1dDtcbiAgdmFyIGV4b3RpY1RvUHJpbSA9IGdldE1ldGhvZChpbnB1dCwgVE9fUFJJTUlUSVZFKTtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKGV4b3RpY1RvUHJpbSkge1xuICAgIGlmIChwcmVmID09PSB1bmRlZmluZWQpIHByZWYgPSAnZGVmYXVsdCc7XG4gICAgcmVzdWx0ID0gZXhvdGljVG9QcmltLmNhbGwoaW5wdXQsIHByZWYpO1xuICAgIGlmICghaXNPYmplY3QocmVzdWx0KSB8fCBpc1N5bWJvbChyZXN1bHQpKSByZXR1cm4gcmVzdWx0O1xuICAgIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbiAgfVxuICBpZiAocHJlZiA9PT0gdW5kZWZpbmVkKSBwcmVmID0gJ251bWJlcic7XG4gIHJldHVybiBvcmRpbmFyeVRvUHJpbWl0aXZlKGlucHV0LCBwcmVmKTtcbn07XG4iLCJ2YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlJyk7XG52YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtc3ltYm9sJyk7XG5cbi8vIGBUb1Byb3BlcnR5S2V5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9wcm9wZXJ0eWtleVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIGtleSA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCAnc3RyaW5nJyk7XG4gIHJldHVybiBpc1N5bWJvbChrZXkpID8ga2V5IDogU3RyaW5nKGtleSk7XG59O1xuIiwidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgVE9fU1RSSU5HX1RBRyA9IHdlbGxLbm93blN5bWJvbCgndG9TdHJpbmdUYWcnKTtcbnZhciB0ZXN0ID0ge307XG5cbnRlc3RbVE9fU1RSSU5HX1RBR10gPSAneic7XG5cbm1vZHVsZS5leHBvcnRzID0gU3RyaW5nKHRlc3QpID09PSAnW29iamVjdCB6XSc7XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChjbGFzc29mKGFyZ3VtZW50KSA9PT0gJ1N5bWJvbCcpIHRocm93IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmcnKTtcbiAgcmV0dXJuIFN0cmluZyhhcmd1bWVudCk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gU3RyaW5nKGFyZ3VtZW50KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gJ09iamVjdCc7XG4gIH1cbn07XG4iLCJ2YXIgaWQgPSAwO1xudmFyIHBvc3RmaXggPSBNYXRoLnJhbmRvbSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJyArIFN0cmluZyhrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5KSArICcpXycgKyAoKytpZCArIHBvc3RmaXgpLnRvU3RyaW5nKDM2KTtcbn07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1zeW1ib2wgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcgKi9cbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2wnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfU1lNQk9MXG4gICYmICFTeW1ib2wuc2hhbVxuICAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnO1xuIiwidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG5leHBvcnRzLmYgPSB3ZWxsS25vd25TeW1ib2w7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2wnKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xuXG52YXIgV2VsbEtub3duU3ltYm9sc1N0b3JlID0gc2hhcmVkKCd3a3MnKTtcbnZhciBTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyIGNyZWF0ZVdlbGxLbm93blN5bWJvbCA9IFVTRV9TWU1CT0xfQVNfVUlEID8gU3ltYm9sIDogU3ltYm9sICYmIFN5bWJvbC53aXRob3V0U2V0dGVyIHx8IHVpZDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICBpZiAoIWhhc093bihXZWxsS25vd25TeW1ib2xzU3RvcmUsIG5hbWUpIHx8ICEoTkFUSVZFX1NZTUJPTCB8fCB0eXBlb2YgV2VsbEtub3duU3ltYm9sc1N0b3JlW25hbWVdID09ICdzdHJpbmcnKSkge1xuICAgIGlmIChOQVRJVkVfU1lNQk9MICYmIGhhc093bihTeW1ib2wsIG5hbWUpKSB7XG4gICAgICBXZWxsS25vd25TeW1ib2xzU3RvcmVbbmFtZV0gPSBTeW1ib2xbbmFtZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIFdlbGxLbm93blN5bWJvbHNTdG9yZVtuYW1lXSA9IGNyZWF0ZVdlbGxLbm93blN5bWJvbCgnU3ltYm9sLicgKyBuYW1lKTtcbiAgICB9XG4gIH0gcmV0dXJuIFdlbGxLbm93blN5bWJvbHNTdG9yZVtuYW1lXTtcbn07XG4iLCIvLyBhIHN0cmluZyBvZiBhbGwgdmFsaWQgdW5pY29kZSB3aGl0ZXNwYWNlc1xubW9kdWxlLmV4cG9ydHMgPSAnXFx1MDAwOVxcdTAwMEFcXHUwMDBCXFx1MDAwQ1xcdTAwMERcXHUwMDIwXFx1MDBBMFxcdTE2ODBcXHUyMDAwXFx1MjAwMVxcdTIwMDInICtcbiAgJ1xcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBBXFx1MjAyRlxcdTIwNUZcXHUzMDAwXFx1MjAyOFxcdTIwMjlcXHVGRUZGJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgYXJyYXlTcGVjaWVzQ3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG52YXIgYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydCcpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIFY4X1ZFUlNJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTtcblxudmFyIElTX0NPTkNBVF9TUFJFQURBQkxFID0gd2VsbEtub3duU3ltYm9sKCdpc0NvbmNhdFNwcmVhZGFibGUnKTtcbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gMHgxRkZGRkZGRkZGRkZGRjtcbnZhciBNQVhJTVVNX0FMTE9XRURfSU5ERVhfRVhDRUVERUQgPSAnTWF4aW11bSBhbGxvd2VkIGluZGV4IGV4Y2VlZGVkJztcblxuLy8gV2UgY2FuJ3QgdXNlIHRoaXMgZmVhdHVyZSBkZXRlY3Rpb24gaW4gVjggc2luY2UgaXQgY2F1c2VzXG4vLyBkZW9wdGltaXphdGlvbiBhbmQgc2VyaW91cyBwZXJmb3JtYW5jZSBkZWdyYWRhdGlvblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzY3OVxudmFyIElTX0NPTkNBVF9TUFJFQURBQkxFX1NVUFBPUlQgPSBWOF9WRVJTSU9OID49IDUxIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBhcnJheSA9IFtdO1xuICBhcnJheVtJU19DT05DQVRfU1BSRUFEQUJMRV0gPSBmYWxzZTtcbiAgcmV0dXJuIGFycmF5LmNvbmNhdCgpWzBdICE9PSBhcnJheTtcbn0pO1xuXG52YXIgU1BFQ0lFU19TVVBQT1JUID0gYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCgnY29uY2F0Jyk7XG5cbnZhciBpc0NvbmNhdFNwcmVhZGFibGUgPSBmdW5jdGlvbiAoTykge1xuICBpZiAoIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzcHJlYWRhYmxlID0gT1tJU19DT05DQVRfU1BSRUFEQUJMRV07XG4gIHJldHVybiBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KE8pO1xufTtcblxudmFyIEZPUkNFRCA9ICFJU19DT05DQVRfU1BSRUFEQUJMRV9TVVBQT1JUIHx8ICFTUEVDSUVTX1NVUFBPUlQ7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUuY29uY2F0YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmNvbmNhdFxuLy8gd2l0aCBhZGRpbmcgc3VwcG9ydCBvZiBAQGlzQ29uY2F0U3ByZWFkYWJsZSBhbmQgQEBzcGVjaWVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBGT1JDRUQgfSwge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYFxuICBjb25jYXQ6IGZ1bmN0aW9uIGNvbmNhdChhcmcpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBBID0gYXJyYXlTcGVjaWVzQ3JlYXRlKE8sIDApO1xuICAgIHZhciBuID0gMDtcbiAgICB2YXIgaSwgaywgbGVuZ3RoLCBsZW4sIEU7XG4gICAgZm9yIChpID0gLTEsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgRSA9IGkgPT09IC0xID8gTyA6IGFyZ3VtZW50c1tpXTtcbiAgICAgIGlmIChpc0NvbmNhdFNwcmVhZGFibGUoRSkpIHtcbiAgICAgICAgbGVuID0gbGVuZ3RoT2ZBcnJheUxpa2UoRSk7XG4gICAgICAgIGlmIChuICsgbGVuID4gTUFYX1NBRkVfSU5URUdFUikgdGhyb3cgVHlwZUVycm9yKE1BWElNVU1fQUxMT1dFRF9JTkRFWF9FWENFRURFRCk7XG4gICAgICAgIGZvciAoayA9IDA7IGsgPCBsZW47IGsrKywgbisrKSBpZiAoayBpbiBFKSBjcmVhdGVQcm9wZXJ0eShBLCBuLCBFW2tdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChuID49IE1BWF9TQUZFX0lOVEVHRVIpIHRocm93IFR5cGVFcnJvcihNQVhJTVVNX0FMTE9XRURfSU5ERVhfRVhDRUVERUQpO1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShBLCBuKyssIEUpO1xuICAgICAgfVxuICAgIH1cbiAgICBBLmxlbmd0aCA9IG47XG4gICAgcmV0dXJuIEE7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGZpbHRlciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5maWx0ZXI7XG52YXIgYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydCcpO1xuXG52YXIgSEFTX1NQRUNJRVNfU1VQUE9SVCA9IGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQoJ2ZpbHRlcicpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmZpbHRlcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maWx0ZXJcbi8vIHdpdGggYWRkaW5nIHN1cHBvcnQgb2YgQEBzcGVjaWVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhSEFTX1NQRUNJRVNfU1VQUE9SVCB9LCB7XG4gIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRmaWx0ZXIodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbiIsInZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZyb20gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktZnJvbScpO1xudmFyIGNoZWNrQ29ycmVjdG5lc3NPZkl0ZXJhdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jaGVjay1jb3JyZWN0bmVzcy1vZi1pdGVyYXRpb24nKTtcblxudmFyIElOQ09SUkVDVF9JVEVSQVRJT04gPSAhY2hlY2tDb3JyZWN0bmVzc09mSXRlcmF0aW9uKGZ1bmN0aW9uIChpdGVyYWJsZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tYXJyYXktZnJvbSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICBBcnJheS5mcm9tKGl0ZXJhYmxlKTtcbn0pO1xuXG4vLyBgQXJyYXkuZnJvbWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LmZyb21cbiQoeyB0YXJnZXQ6ICdBcnJheScsIHN0YXQ6IHRydWUsIGZvcmNlZDogSU5DT1JSRUNUX0lURVJBVElPTiB9LCB7XG4gIGZyb206IGZyb21cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzJykuaW5jbHVkZXM7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUgfSwge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoZWwgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUtQEB1bnNjb3BhYmxlc1xuYWRkVG9VbnNjb3BhYmxlcygnaW5jbHVkZXMnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvcnMnKTtcbnZhciBJbnRlcm5hbFN0YXRlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJyk7XG52YXIgZGVmaW5lSXRlcmF0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWl0ZXJhdG9yJyk7XG5cbnZhciBBUlJBWV9JVEVSQVRPUiA9ICdBcnJheSBJdGVyYXRvcic7XG52YXIgc2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuc2V0O1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihBUlJBWV9JVEVSQVRPUik7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUuZW50cmllc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5lbnRyaWVzXG4vLyBgQXJyYXkucHJvdG90eXBlLmtleXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUua2V5c1xuLy8gYEFycmF5LnByb3RvdHlwZS52YWx1ZXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUudmFsdWVzXG4vLyBgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAaXRlcmF0b3Jcbi8vIGBDcmVhdGVBcnJheUl0ZXJhdG9yYCBpbnRlcm5hbCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtY3JlYXRlYXJyYXlpdGVyYXRvclxubW9kdWxlLmV4cG9ydHMgPSBkZWZpbmVJdGVyYXRvcihBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgIHR5cGU6IEFSUkFZX0lURVJBVE9SLFxuICAgIHRhcmdldDogdG9JbmRleGVkT2JqZWN0KGl0ZXJhdGVkKSwgLy8gdGFyZ2V0XG4gICAgaW5kZXg6IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gICAga2luZDoga2luZCAgICAgICAgICAgICAgICAgICAgICAgICAvLyBraW5kXG4gIH0pO1xuLy8gYCVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtJWFycmF5aXRlcmF0b3Jwcm90b3R5cGUlLm5leHRcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKTtcbiAgdmFyIHRhcmdldCA9IHN0YXRlLnRhcmdldDtcbiAgdmFyIGtpbmQgPSBzdGF0ZS5raW5kO1xuICB2YXIgaW5kZXggPSBzdGF0ZS5pbmRleCsrO1xuICBpZiAoIXRhcmdldCB8fCBpbmRleCA+PSB0YXJnZXQubGVuZ3RoKSB7XG4gICAgc3RhdGUudGFyZ2V0ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiB7IHZhbHVlOiBpbmRleCwgZG9uZTogZmFsc2UgfTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiB7IHZhbHVlOiB0YXJnZXRbaW5kZXhdLCBkb25lOiBmYWxzZSB9O1xuICByZXR1cm4geyB2YWx1ZTogW2luZGV4LCB0YXJnZXRbaW5kZXhdXSwgZG9uZTogZmFsc2UgfTtcbn0sICd2YWx1ZXMnKTtcblxuLy8gYXJndW1lbnRzTGlzdFtAQGl0ZXJhdG9yXSBpcyAlQXJyYXlQcm90b192YWx1ZXMlXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWNyZWF0ZXVubWFwcGVkYXJndW1lbnRzb2JqZWN0XG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWNyZWF0ZW1hcHBlZGFyZ3VtZW50c29iamVjdFxuSXRlcmF0b3JzLkFyZ3VtZW50cyA9IEl0ZXJhdG9ycy5BcnJheTtcblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUtQEB1bnNjb3BhYmxlc1xuYWRkVG9VbnNjb3BhYmxlcygna2V5cycpO1xuYWRkVG9VbnNjb3BhYmxlcygndmFsdWVzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCdlbnRyaWVzJyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBJbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luZGV4ZWQtb2JqZWN0Jyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgYXJyYXlNZXRob2RJc1N0cmljdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0Jyk7XG5cbnZhciBuYXRpdmVKb2luID0gW10uam9pbjtcblxudmFyIEVTM19TVFJJTkdTID0gSW5kZXhlZE9iamVjdCAhPSBPYmplY3Q7XG52YXIgU1RSSUNUX01FVEhPRCA9IGFycmF5TWV0aG9kSXNTdHJpY3QoJ2pvaW4nLCAnLCcpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmpvaW5gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuam9pblxuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogRVMzX1NUUklOR1MgfHwgIVNUUklDVF9NRVRIT0QgfSwge1xuICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikge1xuICAgIHJldHVybiBuYXRpdmVKb2luLmNhbGwodG9JbmRleGVkT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJG1hcCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5tYXA7XG52YXIgYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydCcpO1xuXG52YXIgSEFTX1NQRUNJRVNfU1VQUE9SVCA9IGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQoJ21hcCcpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLm1hcGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5tYXBcbi8vIHdpdGggYWRkaW5nIHN1cHBvcnQgb2YgQEBzcGVjaWVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhSEFTX1NQRUNJRVNfU1VQUE9SVCB9LCB7XG4gIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXknKTtcbnZhciBpc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNvbnN0cnVjdG9yJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgbGVuZ3RoT2ZBcnJheUxpa2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbGVuZ3RoLW9mLWFycmF5LWxpa2UnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHknKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0Jyk7XG5cbnZhciBIQVNfU1BFQ0lFU19TVVBQT1JUID0gYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCgnc2xpY2UnKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcbnZhciBuYXRpdmVTbGljZSA9IFtdLnNsaWNlO1xudmFyIG1heCA9IE1hdGgubWF4O1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLnNsaWNlYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLnNsaWNlXG4vLyBmYWxsYmFjayBmb3Igbm90IGFycmF5LWxpa2UgRVMzIHN0cmluZ3MgYW5kIERPTSBvYmplY3RzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhSEFTX1NQRUNJRVNfU1VQUE9SVCB9LCB7XG4gIHNsaWNlOiBmdW5jdGlvbiBzbGljZShzdGFydCwgZW5kKSB7XG4gICAgdmFyIE8gPSB0b0luZGV4ZWRPYmplY3QodGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKE8pO1xuICAgIHZhciBrID0gdG9BYnNvbHV0ZUluZGV4KHN0YXJ0LCBsZW5ndGgpO1xuICAgIHZhciBmaW4gPSB0b0Fic29sdXRlSW5kZXgoZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiBlbmQsIGxlbmd0aCk7XG4gICAgLy8gaW5saW5lIGBBcnJheVNwZWNpZXNDcmVhdGVgIGZvciB1c2FnZSBuYXRpdmUgYEFycmF5I3NsaWNlYCB3aGVyZSBpdCdzIHBvc3NpYmxlXG4gICAgdmFyIENvbnN0cnVjdG9yLCByZXN1bHQsIG47XG4gICAgaWYgKGlzQXJyYXkoTykpIHtcbiAgICAgIENvbnN0cnVjdG9yID0gTy5jb25zdHJ1Y3RvcjtcbiAgICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgICBpZiAoaXNDb25zdHJ1Y3RvcihDb25zdHJ1Y3RvcikgJiYgKENvbnN0cnVjdG9yID09PSBBcnJheSB8fCBpc0FycmF5KENvbnN0cnVjdG9yLnByb3RvdHlwZSkpKSB7XG4gICAgICAgIENvbnN0cnVjdG9yID0gdW5kZWZpbmVkO1xuICAgICAgfSBlbHNlIGlmIChpc09iamVjdChDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgQ29uc3RydWN0b3IgPSBDb25zdHJ1Y3RvcltTUEVDSUVTXTtcbiAgICAgICAgaWYgKENvbnN0cnVjdG9yID09PSBudWxsKSBDb25zdHJ1Y3RvciA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGlmIChDb25zdHJ1Y3RvciA9PT0gQXJyYXkgfHwgQ29uc3RydWN0b3IgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbmF0aXZlU2xpY2UuY2FsbChPLCBrLCBmaW4pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQgPSBuZXcgKENvbnN0cnVjdG9yID09PSB1bmRlZmluZWQgPyBBcnJheSA6IENvbnN0cnVjdG9yKShtYXgoZmluIC0gaywgMCkpO1xuICAgIGZvciAobiA9IDA7IGsgPCBmaW47IGsrKywgbisrKSBpZiAoayBpbiBPKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIG4sIE9ba10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgRlVOQ1RJT05fTkFNRV9FWElTVFMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tbmFtZScpLkVYSVNUUztcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxudmFyIEZ1bmN0aW9uUHJvdG90eXBlID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIEZ1bmN0aW9uUHJvdG90eXBlVG9TdHJpbmcgPSBGdW5jdGlvblByb3RvdHlwZS50b1N0cmluZztcbnZhciBuYW1lUkUgPSAvXlxccypmdW5jdGlvbiAoW14gKF0qKS87XG52YXIgTkFNRSA9ICduYW1lJztcblxuLy8gRnVuY3Rpb24gaW5zdGFuY2VzIGAubmFtZWAgcHJvcGVydHlcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZnVuY3Rpb24taW5zdGFuY2VzLW5hbWVcbmlmIChERVNDUklQVE9SUyAmJiAhRlVOQ1RJT05fTkFNRV9FWElTVFMpIHtcbiAgZGVmaW5lUHJvcGVydHkoRnVuY3Rpb25Qcm90b3R5cGUsIE5BTUUsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gRnVuY3Rpb25Qcm90b3R5cGVUb1N0cmluZy5jYWxsKHRoaXMpLm1hdGNoKG5hbWVSRSlbMV07XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpLmY7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIHRoaXNOdW1iZXJWYWx1ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90aGlzLW51bWJlci12YWx1ZScpO1xudmFyIHRyaW0gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW0nKS50cmltO1xuXG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgTmF0aXZlTnVtYmVyID0gZ2xvYmFsW05VTUJFUl07XG52YXIgTnVtYmVyUHJvdG90eXBlID0gTmF0aXZlTnVtYmVyLnByb3RvdHlwZTtcblxuLy8gYFRvTnVtZXJpY2AgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbnVtZXJpY1xudmFyIHRvTnVtZXJpYyA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJpbVZhbHVlID0gdG9QcmltaXRpdmUodmFsdWUsICdudW1iZXInKTtcbiAgcmV0dXJuIHR5cGVvZiBwcmltVmFsdWUgPT09ICdiaWdpbnQnID8gcHJpbVZhbHVlIDogdG9OdW1iZXIocHJpbVZhbHVlKTtcbn07XG5cbi8vIGBUb051bWJlcmAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbnVtYmVyXG52YXIgdG9OdW1iZXIgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIGl0ID0gdG9QcmltaXRpdmUoYXJndW1lbnQsICdudW1iZXInKTtcbiAgdmFyIGZpcnN0LCB0aGlyZCwgcmFkaXgsIG1heENvZGUsIGRpZ2l0cywgbGVuZ3RoLCBpbmRleCwgY29kZTtcbiAgaWYgKGlzU3ltYm9sKGl0KSkgdGhyb3cgVHlwZUVycm9yKCdDYW5ub3QgY29udmVydCBhIFN5bWJvbCB2YWx1ZSB0byBhIG51bWJlcicpO1xuICBpZiAodHlwZW9mIGl0ID09ICdzdHJpbmcnICYmIGl0Lmxlbmd0aCA+IDIpIHtcbiAgICBpdCA9IHRyaW0oaXQpO1xuICAgIGZpcnN0ID0gaXQuY2hhckNvZGVBdCgwKTtcbiAgICBpZiAoZmlyc3QgPT09IDQzIHx8IGZpcnN0ID09PSA0NSkge1xuICAgICAgdGhpcmQgPSBpdC5jaGFyQ29kZUF0KDIpO1xuICAgICAgaWYgKHRoaXJkID09PSA4OCB8fCB0aGlyZCA9PT0gMTIwKSByZXR1cm4gTmFOOyAvLyBOdW1iZXIoJysweDEnKSBzaG91bGQgYmUgTmFOLCBvbGQgVjggZml4XG4gICAgfSBlbHNlIGlmIChmaXJzdCA9PT0gNDgpIHtcbiAgICAgIHN3aXRjaCAoaXQuY2hhckNvZGVBdCgxKSkge1xuICAgICAgICBjYXNlIDY2OiBjYXNlIDk4OiByYWRpeCA9IDI7IG1heENvZGUgPSA0OTsgYnJlYWs7IC8vIGZhc3QgZXF1YWwgb2YgL14wYlswMV0rJC9pXG4gICAgICAgIGNhc2UgNzk6IGNhc2UgMTExOiByYWRpeCA9IDg7IG1heENvZGUgPSA1NTsgYnJlYWs7IC8vIGZhc3QgZXF1YWwgb2YgL14wb1swLTddKyQvaVxuICAgICAgICBkZWZhdWx0OiByZXR1cm4gK2l0O1xuICAgICAgfVxuICAgICAgZGlnaXRzID0gaXQuc2xpY2UoMik7XG4gICAgICBsZW5ndGggPSBkaWdpdHMubGVuZ3RoO1xuICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGNvZGUgPSBkaWdpdHMuY2hhckNvZGVBdChpbmRleCk7XG4gICAgICAgIC8vIHBhcnNlSW50IHBhcnNlcyBhIHN0cmluZyB0byBhIGZpcnN0IHVuYXZhaWxhYmxlIHN5bWJvbFxuICAgICAgICAvLyBidXQgVG9OdW1iZXIgc2hvdWxkIHJldHVybiBOYU4gaWYgYSBzdHJpbmcgY29udGFpbnMgdW5hdmFpbGFibGUgc3ltYm9sc1xuICAgICAgICBpZiAoY29kZSA8IDQ4IHx8IGNvZGUgPiBtYXhDb2RlKSByZXR1cm4gTmFOO1xuICAgICAgfSByZXR1cm4gcGFyc2VJbnQoZGlnaXRzLCByYWRpeCk7XG4gICAgfVxuICB9IHJldHVybiAraXQ7XG59O1xuXG4vLyBgTnVtYmVyYCBjb25zdHJ1Y3RvclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1udW1iZXItY29uc3RydWN0b3JcbmlmIChpc0ZvcmNlZChOVU1CRVIsICFOYXRpdmVOdW1iZXIoJyAwbzEnKSB8fCAhTmF0aXZlTnVtYmVyKCcwYjEnKSB8fCBOYXRpdmVOdW1iZXIoJysweDEnKSkpIHtcbiAgdmFyIE51bWJlcldyYXBwZXIgPSBmdW5jdGlvbiBOdW1iZXIodmFsdWUpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IE5hdGl2ZU51bWJlcih0b051bWVyaWModmFsdWUpKTtcbiAgICB2YXIgZHVtbXkgPSB0aGlzO1xuICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgIHJldHVybiBkdW1teSBpbnN0YW5jZW9mIE51bWJlcldyYXBwZXIgJiYgZmFpbHMoZnVuY3Rpb24gKCkgeyB0aGlzTnVtYmVyVmFsdWUoZHVtbXkpOyB9KVxuICAgICAgPyBpbmhlcml0SWZSZXF1aXJlZChPYmplY3QobiksIGR1bW15LCBOdW1iZXJXcmFwcGVyKSA6IG47XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSBERVNDUklQVE9SUyA/IGdldE93blByb3BlcnR5TmFtZXMoTmF0aXZlTnVtYmVyKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTMjAxNSAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTMjAxNSBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLE1BWF9TQUZFX0lOVEVHRVIsTUlOX1NBRkVfSU5URUdFUixpc0Zpbml0ZSxpc0ludGVnZXIsaXNOYU4saXNTYWZlSW50ZWdlcixwYXJzZUZsb2F0LHBhcnNlSW50LCcgK1xuICAgIC8vIEVTTmV4dFxuICAgICdmcm9tU3RyaW5nLHJhbmdlJ1xuICApLnNwbGl0KCcsJyksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajsgaisrKSB7XG4gICAgaWYgKGhhc093bihOYXRpdmVOdW1iZXIsIGtleSA9IGtleXNbal0pICYmICFoYXNPd24oTnVtYmVyV3JhcHBlciwga2V5KSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkoTnVtYmVyV3JhcHBlciwga2V5LCBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTmF0aXZlTnVtYmVyLCBrZXkpKTtcbiAgICB9XG4gIH1cbiAgTnVtYmVyV3JhcHBlci5wcm90b3R5cGUgPSBOdW1iZXJQcm90b3R5cGU7XG4gIE51bWJlclByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IE51bWJlcldyYXBwZXI7XG4gIHJlZGVmaW5lKGdsb2JhbCwgTlVNQkVSLCBOdW1iZXJXcmFwcGVyKTtcbn1cbiIsInZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtYXNzaWduJyk7XG5cbi8vIGBPYmplY3QuYXNzaWduYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmFzc2lnblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1hc3NpZ24gLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IE9iamVjdC5hc3NpZ24gIT09IGFzc2lnbiB9LCB7XG4gIGFzc2lnbjogYXNzaWduXG59KTtcbiIsInZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG5cbnZhciBGQUlMU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoMSk7IH0pO1xudmFyIEZPUkNFRCA9ICFERVNDUklQVE9SUyB8fCBGQUlMU19PTl9QUklNSVRJVkVTO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IEZPUkNFRCwgc2hhbTogIURFU0NSSVBUT1JTIH0sIHtcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JbmRleGVkT2JqZWN0KGl0KSwga2V5KTtcbiAgfVxufSk7XG4iLCJ2YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIG93bktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3duLWtleXMnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eScpO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIHNoYW06ICFERVNDUklQVE9SUyB9LCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0luZGV4ZWRPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlLmY7XG4gICAgdmFyIGtleXMgPSBvd25LZXlzKE8pO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBrZXksIGRlc2NyaXB0b3I7XG4gICAgd2hpbGUgKGtleXMubGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywga2V5ID0ga2V5c1tpbmRleCsrXSk7XG4gICAgICBpZiAoZGVzY3JpcHRvciAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwidmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgbmF0aXZlS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbnZhciBGQUlMU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyBuYXRpdmVLZXlzKDEpOyB9KTtcblxuLy8gYE9iamVjdC5rZXlzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmtleXNcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IEZBSUxTX09OX1BSSU1JVElWRVMgfSwge1xuICBrZXlzOiBmdW5jdGlvbiBrZXlzKGl0KSB7XG4gICAgcmV0dXJuIG5hdGl2ZUtleXModG9PYmplY3QoaXQpKTtcbiAgfVxufSk7XG4iLCJ2YXIgVE9fU1RSSU5HX1RBR19TVVBQT1JUID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXRvLXN0cmluZycpO1xuXG4vLyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmdcbmlmICghVE9fU1RSSU5HX1RBR19TVVBQT1JUKSB7XG4gIHJlZGVmaW5lKE9iamVjdC5wcm90b3R5cGUsICd0b1N0cmluZycsIHRvU3RyaW5nLCB7IHVuc2FmZTogdHJ1ZSB9KTtcbn1cbiIsInZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyICR2YWx1ZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXRvLWFycmF5JykudmFsdWVzO1xuXG4vLyBgT2JqZWN0LnZhbHVlc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC52YWx1ZXNcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlIH0sIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoTykge1xuICAgIHJldHVybiAkdmFsdWVzKE8pO1xuICB9XG59KTtcbiIsInZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMnKS5mO1xudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXJlZ2V4cCcpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIGdldEZsYWdzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1mbGFncycpO1xudmFyIHN0aWNreUhlbHBlcnMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXN0aWNreS1oZWxwZXJzJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVkZWZpbmUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgZW5mb3JjZUludGVybmFsU3RhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKS5lbmZvcmNlO1xudmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXNwZWNpZXMnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBVTlNVUFBPUlRFRF9ET1RfQUxMID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1kb3QtYWxsJyk7XG52YXIgVU5TVVBQT1JURURfTkNHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1uY2cnKTtcblxudmFyIE1BVENIID0gd2VsbEtub3duU3ltYm9sKCdtYXRjaCcpO1xudmFyIE5hdGl2ZVJlZ0V4cCA9IGdsb2JhbC5SZWdFeHA7XG52YXIgUmVnRXhwUHJvdG90eXBlID0gTmF0aXZlUmVnRXhwLnByb3RvdHlwZTtcbi8vIFRPRE86IFVzZSBvbmx5IHByb3BwZXIgUmVnRXhwSWRlbnRpZmllck5hbWVcbnZhciBJU19OQ0cgPSAvXlxcPzxbXlxcc1xcZCEjJSYqKzw9PkBeXVteXFxzISMlJiorPD0+QF5dKj4vO1xudmFyIHJlMSA9IC9hL2c7XG52YXIgcmUyID0gL2EvZztcblxuLy8gXCJuZXdcIiBzaG91bGQgY3JlYXRlIGEgbmV3IG9iamVjdCwgb2xkIHdlYmtpdCBidWdcbnZhciBDT1JSRUNUX05FVyA9IG5ldyBOYXRpdmVSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG52YXIgVU5TVVBQT1JURURfWSA9IHN0aWNreUhlbHBlcnMuVU5TVVBQT1JURURfWTtcblxudmFyIEJBU0VfRk9SQ0VEID0gREVTQ1JJUFRPUlMgJiZcbiAgKCFDT1JSRUNUX05FVyB8fCBVTlNVUFBPUlRFRF9ZIHx8IFVOU1VQUE9SVEVEX0RPVF9BTEwgfHwgVU5TVVBQT1JURURfTkNHIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICByZTJbTUFUQ0hdID0gZmFsc2U7XG4gICAgLy8gUmVnRXhwIGNvbnN0cnVjdG9yIGNhbiBhbHRlciBmbGFncyBhbmQgSXNSZWdFeHAgd29ya3MgY29ycmVjdCB3aXRoIEBAbWF0Y2hcbiAgICByZXR1cm4gTmF0aXZlUmVnRXhwKHJlMSkgIT0gcmUxIHx8IE5hdGl2ZVJlZ0V4cChyZTIpID09IHJlMiB8fCBOYXRpdmVSZWdFeHAocmUxLCAnaScpICE9ICcvYS9pJztcbiAgfSkpO1xuXG52YXIgaGFuZGxlRG90QWxsID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgYnJhY2tldHMgPSBmYWxzZTtcbiAgdmFyIGNocjtcbiAgZm9yICg7IGluZGV4IDw9IGxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNociA9IHN0cmluZy5jaGFyQXQoaW5kZXgpO1xuICAgIGlmIChjaHIgPT09ICdcXFxcJykge1xuICAgICAgcmVzdWx0ICs9IGNociArIHN0cmluZy5jaGFyQXQoKytpbmRleCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKCFicmFja2V0cyAmJiBjaHIgPT09ICcuJykge1xuICAgICAgcmVzdWx0ICs9ICdbXFxcXHNcXFxcU10nO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoY2hyID09PSAnWycpIHtcbiAgICAgICAgYnJhY2tldHMgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChjaHIgPT09ICddJykge1xuICAgICAgICBicmFja2V0cyA9IGZhbHNlO1xuICAgICAgfSByZXN1bHQgKz0gY2hyO1xuICAgIH1cbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIGhhbmRsZU5DRyA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgdmFyIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciByZXN1bHQgPSAnJztcbiAgdmFyIG5hbWVkID0gW107XG4gIHZhciBuYW1lcyA9IHt9O1xuICB2YXIgYnJhY2tldHMgPSBmYWxzZTtcbiAgdmFyIG5jZyA9IGZhbHNlO1xuICB2YXIgZ3JvdXBpZCA9IDA7XG4gIHZhciBncm91cG5hbWUgPSAnJztcbiAgdmFyIGNocjtcbiAgZm9yICg7IGluZGV4IDw9IGxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNociA9IHN0cmluZy5jaGFyQXQoaW5kZXgpO1xuICAgIGlmIChjaHIgPT09ICdcXFxcJykge1xuICAgICAgY2hyID0gY2hyICsgc3RyaW5nLmNoYXJBdCgrK2luZGV4KTtcbiAgICB9IGVsc2UgaWYgKGNociA9PT0gJ10nKSB7XG4gICAgICBicmFja2V0cyA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoIWJyYWNrZXRzKSBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgY2hyID09PSAnWyc6XG4gICAgICAgIGJyYWNrZXRzID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGNociA9PT0gJygnOlxuICAgICAgICBpZiAoSVNfTkNHLnRlc3Qoc3RyaW5nLnNsaWNlKGluZGV4ICsgMSkpKSB7XG4gICAgICAgICAgaW5kZXggKz0gMjtcbiAgICAgICAgICBuY2cgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCArPSBjaHI7XG4gICAgICAgIGdyb3VwaWQrKztcbiAgICAgICAgY29udGludWU7XG4gICAgICBjYXNlIGNociA9PT0gJz4nICYmIG5jZzpcbiAgICAgICAgaWYgKGdyb3VwbmFtZSA9PT0gJycgfHwgaGFzT3duKG5hbWVzLCBncm91cG5hbWUpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdJbnZhbGlkIGNhcHR1cmUgZ3JvdXAgbmFtZScpO1xuICAgICAgICB9XG4gICAgICAgIG5hbWVzW2dyb3VwbmFtZV0gPSB0cnVlO1xuICAgICAgICBuYW1lZC5wdXNoKFtncm91cG5hbWUsIGdyb3VwaWRdKTtcbiAgICAgICAgbmNnID0gZmFsc2U7XG4gICAgICAgIGdyb3VwbmFtZSA9ICcnO1xuICAgICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKG5jZykgZ3JvdXBuYW1lICs9IGNocjtcbiAgICBlbHNlIHJlc3VsdCArPSBjaHI7XG4gIH0gcmV0dXJuIFtyZXN1bHQsIG5hbWVkXTtcbn07XG5cbi8vIGBSZWdFeHBgIGNvbnN0cnVjdG9yXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC1jb25zdHJ1Y3RvclxuaWYgKGlzRm9yY2VkKCdSZWdFeHAnLCBCQVNFX0ZPUkNFRCkpIHtcbiAgdmFyIFJlZ0V4cFdyYXBwZXIgPSBmdW5jdGlvbiBSZWdFeHAocGF0dGVybiwgZmxhZ3MpIHtcbiAgICB2YXIgdGhpc0lzUmVnRXhwID0gdGhpcyBpbnN0YW5jZW9mIFJlZ0V4cFdyYXBwZXI7XG4gICAgdmFyIHBhdHRlcm5Jc1JlZ0V4cCA9IGlzUmVnRXhwKHBhdHRlcm4pO1xuICAgIHZhciBmbGFnc0FyZVVuZGVmaW5lZCA9IGZsYWdzID09PSB1bmRlZmluZWQ7XG4gICAgdmFyIGdyb3VwcyA9IFtdO1xuICAgIHZhciByYXdQYXR0ZXJuID0gcGF0dGVybjtcbiAgICB2YXIgcmF3RmxhZ3MsIGRvdEFsbCwgc3RpY2t5LCBoYW5kbGVkLCByZXN1bHQsIHN0YXRlO1xuXG4gICAgaWYgKCF0aGlzSXNSZWdFeHAgJiYgcGF0dGVybklzUmVnRXhwICYmIGZsYWdzQXJlVW5kZWZpbmVkICYmIHBhdHRlcm4uY29uc3RydWN0b3IgPT09IFJlZ0V4cFdyYXBwZXIpIHtcbiAgICAgIHJldHVybiBwYXR0ZXJuO1xuICAgIH1cblxuICAgIGlmIChwYXR0ZXJuSXNSZWdFeHAgfHwgcGF0dGVybiBpbnN0YW5jZW9mIFJlZ0V4cFdyYXBwZXIpIHtcbiAgICAgIHBhdHRlcm4gPSBwYXR0ZXJuLnNvdXJjZTtcbiAgICAgIGlmIChmbGFnc0FyZVVuZGVmaW5lZCkgZmxhZ3MgPSAnZmxhZ3MnIGluIHJhd1BhdHRlcm4gPyByYXdQYXR0ZXJuLmZsYWdzIDogZ2V0RmxhZ3MuY2FsbChyYXdQYXR0ZXJuKTtcbiAgICB9XG5cbiAgICBwYXR0ZXJuID0gcGF0dGVybiA9PT0gdW5kZWZpbmVkID8gJycgOiB0b1N0cmluZyhwYXR0ZXJuKTtcbiAgICBmbGFncyA9IGZsYWdzID09PSB1bmRlZmluZWQgPyAnJyA6IHRvU3RyaW5nKGZsYWdzKTtcbiAgICByYXdQYXR0ZXJuID0gcGF0dGVybjtcblxuICAgIGlmIChVTlNVUFBPUlRFRF9ET1RfQUxMICYmICdkb3RBbGwnIGluIHJlMSkge1xuICAgICAgZG90QWxsID0gISFmbGFncyAmJiBmbGFncy5pbmRleE9mKCdzJykgPiAtMTtcbiAgICAgIGlmIChkb3RBbGwpIGZsYWdzID0gZmxhZ3MucmVwbGFjZSgvcy9nLCAnJyk7XG4gICAgfVxuXG4gICAgcmF3RmxhZ3MgPSBmbGFncztcblxuICAgIGlmIChVTlNVUFBPUlRFRF9ZICYmICdzdGlja3knIGluIHJlMSkge1xuICAgICAgc3RpY2t5ID0gISFmbGFncyAmJiBmbGFncy5pbmRleE9mKCd5JykgPiAtMTtcbiAgICAgIGlmIChzdGlja3kpIGZsYWdzID0gZmxhZ3MucmVwbGFjZSgveS9nLCAnJyk7XG4gICAgfVxuXG4gICAgaWYgKFVOU1VQUE9SVEVEX05DRykge1xuICAgICAgaGFuZGxlZCA9IGhhbmRsZU5DRyhwYXR0ZXJuKTtcbiAgICAgIHBhdHRlcm4gPSBoYW5kbGVkWzBdO1xuICAgICAgZ3JvdXBzID0gaGFuZGxlZFsxXTtcbiAgICB9XG5cbiAgICByZXN1bHQgPSBpbmhlcml0SWZSZXF1aXJlZChOYXRpdmVSZWdFeHAocGF0dGVybiwgZmxhZ3MpLCB0aGlzSXNSZWdFeHAgPyB0aGlzIDogUmVnRXhwUHJvdG90eXBlLCBSZWdFeHBXcmFwcGVyKTtcblxuICAgIGlmIChkb3RBbGwgfHwgc3RpY2t5IHx8IGdyb3Vwcy5sZW5ndGgpIHtcbiAgICAgIHN0YXRlID0gZW5mb3JjZUludGVybmFsU3RhdGUocmVzdWx0KTtcbiAgICAgIGlmIChkb3RBbGwpIHtcbiAgICAgICAgc3RhdGUuZG90QWxsID0gdHJ1ZTtcbiAgICAgICAgc3RhdGUucmF3ID0gUmVnRXhwV3JhcHBlcihoYW5kbGVEb3RBbGwocGF0dGVybiksIHJhd0ZsYWdzKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdGlja3kpIHN0YXRlLnN0aWNreSA9IHRydWU7XG4gICAgICBpZiAoZ3JvdXBzLmxlbmd0aCkgc3RhdGUuZ3JvdXBzID0gZ3JvdXBzO1xuICAgIH1cblxuICAgIGlmIChwYXR0ZXJuICE9PSByYXdQYXR0ZXJuKSB0cnkge1xuICAgICAgLy8gZmFpbHMgaW4gb2xkIGVuZ2luZXMsIGJ1dCB3ZSBoYXZlIG5vIGFsdGVybmF0aXZlcyBmb3IgdW5zdXBwb3J0ZWQgcmVnZXggc3ludGF4XG4gICAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkocmVzdWx0LCAnc291cmNlJywgcmF3UGF0dGVybiA9PT0gJycgPyAnKD86KScgOiByYXdQYXR0ZXJuKTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBrZXkgaW4gUmVnRXhwV3JhcHBlciB8fCBkZWZpbmVQcm9wZXJ0eShSZWdFeHBXcmFwcGVyLCBrZXksIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTmF0aXZlUmVnRXhwW2tleV07IH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIChpdCkgeyBOYXRpdmVSZWdFeHBba2V5XSA9IGl0OyB9XG4gICAgfSk7XG4gIH07XG5cbiAgZm9yICh2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoTmF0aXZlUmVnRXhwKSwgaW5kZXggPSAwOyBrZXlzLmxlbmd0aCA+IGluZGV4Oykge1xuICAgIHByb3h5KGtleXNbaW5kZXgrK10pO1xuICB9XG5cbiAgUmVnRXhwUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gUmVnRXhwV3JhcHBlcjtcbiAgUmVnRXhwV3JhcHBlci5wcm90b3R5cGUgPSBSZWdFeHBQcm90b3R5cGU7XG4gIHJlZGVmaW5lKGdsb2JhbCwgJ1JlZ0V4cCcsIFJlZ0V4cFdyYXBwZXIpO1xufVxuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldC1yZWdleHAtQEBzcGVjaWVzXG5zZXRTcGVjaWVzKCdSZWdFeHAnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMnKTtcblxuLy8gYFJlZ0V4cC5wcm90b3R5cGUuZXhlY2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUuZXhlY1xuJCh7IHRhcmdldDogJ1JlZ0V4cCcsIHByb3RvOiB0cnVlLCBmb3JjZWQ6IC8uLy5leGVjICE9PSBleGVjIH0sIHtcbiAgZXhlYzogZXhlY1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgUFJPUEVSX0ZVTkNUSU9OX05BTUUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tbmFtZScpLlBST1BFUjtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyICR0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGZsYWdzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1mbGFncycpO1xuXG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xudmFyIG5hdGl2ZVRvU3RyaW5nID0gUmVnRXhwUHJvdG90eXBlW1RPX1NUUklOR107XG5cbnZhciBOT1RfR0VORVJJQyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5hdGl2ZVRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPSAnL2EvYic7IH0pO1xuLy8gRkY0NC0gUmVnRXhwI3RvU3RyaW5nIGhhcyBhIHdyb25nIG5hbWVcbnZhciBJTkNPUlJFQ1RfTkFNRSA9IFBST1BFUl9GVU5DVElPTl9OQU1FICYmIG5hdGl2ZVRvU3RyaW5nLm5hbWUgIT0gVE9fU1RSSU5HO1xuXG4vLyBgUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZ2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUudG9zdHJpbmdcbmlmIChOT1RfR0VORVJJQyB8fCBJTkNPUlJFQ1RfTkFNRSkge1xuICByZWRlZmluZShSZWdFeHAucHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgdmFyIHAgPSAkdG9TdHJpbmcoUi5zb3VyY2UpO1xuICAgIHZhciByZiA9IFIuZmxhZ3M7XG4gICAgdmFyIGYgPSAkdG9TdHJpbmcocmYgPT09IHVuZGVmaW5lZCAmJiBSIGluc3RhbmNlb2YgUmVnRXhwICYmICEoJ2ZsYWdzJyBpbiBSZWdFeHBQcm90b3R5cGUpID8gZmxhZ3MuY2FsbChSKSA6IHJmKTtcbiAgICByZXR1cm4gJy8nICsgcCArICcvJyArIGY7XG4gIH0sIHsgdW5zYWZlOiB0cnVlIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgbm90QVJlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9ub3QtYS1yZWdleHAnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIGNvcnJlY3RJc1JlZ0V4cExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NvcnJlY3QtaXMtcmVnZXhwLWxvZ2ljJyk7XG5cbi8vIGBTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlc1xuJCh7IHRhcmdldDogJ1N0cmluZycsIHByb3RvOiB0cnVlLCBmb3JjZWQ6ICFjb3JyZWN0SXNSZWdFeHBMb2dpYygnaW5jbHVkZXMnKSB9LCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICByZXR1cm4gISF+dG9TdHJpbmcocmVxdWlyZU9iamVjdENvZXJjaWJsZSh0aGlzKSlcbiAgICAgIC5pbmRleE9mKHRvU3RyaW5nKG5vdEFSZWdFeHAoc2VhcmNoU3RyaW5nKSksIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2hhckF0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGUnKS5jaGFyQXQ7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyIGRlZmluZUl0ZXJhdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1pdGVyYXRvcicpO1xuXG52YXIgU1RSSU5HX0lURVJBVE9SID0gJ1N0cmluZyBJdGVyYXRvcic7XG52YXIgc2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuc2V0O1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihTVFJJTkdfSVRFUkFUT1IpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUtQEBpdGVyYXRvclxuZGVmaW5lSXRlcmF0b3IoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgIHR5cGU6IFNUUklOR19JVEVSQVRPUixcbiAgICBzdHJpbmc6IHRvU3RyaW5nKGl0ZXJhdGVkKSxcbiAgICBpbmRleDogMFxuICB9KTtcbi8vIGAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHRgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy0lc3RyaW5naXRlcmF0b3Jwcm90b3R5cGUlLm5leHRcbn0sIGZ1bmN0aW9uIG5leHQoKSB7XG4gIHZhciBzdGF0ZSA9IGdldEludGVybmFsU3RhdGUodGhpcyk7XG4gIHZhciBzdHJpbmcgPSBzdGF0ZS5zdHJpbmc7XG4gIHZhciBpbmRleCA9IHN0YXRlLmluZGV4O1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBzdHJpbmcubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gY2hhckF0KHN0cmluZywgaW5kZXgpO1xuICBzdGF0ZS5pbmRleCArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQG1hdGNoIGxvZ2ljXG5maXhSZWdFeHBXZWxsS25vd25TeW1ib2xMb2dpYygnbWF0Y2gnLCBmdW5jdGlvbiAoTUFUQ0gsIG5hdGl2ZU1hdGNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5tYXRjaGAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLm1hdGNoXG4gICAgZnVuY3Rpb24gbWF0Y2gocmVnZXhwKSB7XG4gICAgICB2YXIgTyA9IHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcyk7XG4gICAgICB2YXIgbWF0Y2hlciA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBnZXRNZXRob2QocmVnZXhwLCBNQVRDSCk7XG4gICAgICByZXR1cm4gbWF0Y2hlciA/IG1hdGNoZXIuY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW01BVENIXSh0b1N0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAbWF0Y2hcbiAgICBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBTID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUobmF0aXZlTWF0Y2gsIHJ4LCBTKTtcblxuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuXG4gICAgICB2YXIgZnVsbFVuaWNvZGUgPSByeC51bmljb2RlO1xuICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB2YXIgbiA9IDA7XG4gICAgICB2YXIgcmVzdWx0O1xuICAgICAgd2hpbGUgKChyZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKSkgIT09IG51bGwpIHtcbiAgICAgICAgdmFyIG1hdGNoU3RyID0gdG9TdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgQVtuXSA9IG1hdGNoU3RyO1xuICAgICAgICBpZiAobWF0Y2hTdHIgPT09ICcnKSByeC5sYXN0SW5kZXggPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgdG9MZW5ndGgocngubGFzdEluZGV4KSwgZnVsbFVuaWNvZGUpO1xuICAgICAgICBuKys7XG4gICAgICB9XG4gICAgICByZXR1cm4gbiA9PT0gMCA/IG51bGwgOiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciB0b0ludGVnZXJPckluZmluaXR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHknKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgZ2V0U3Vic3RpdHV0aW9uID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1zdWJzdGl0dXRpb24nKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBSRVBMQUNFID0gd2VsbEtub3duU3ltYm9sKCdyZXBsYWNlJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5cbnZhciBtYXliZVRvU3RyaW5nID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gaXQgOiBTdHJpbmcoaXQpO1xufTtcblxuLy8gSUUgPD0gMTEgcmVwbGFjZXMgJDAgd2l0aCB0aGUgd2hvbGUgbWF0Y2gsIGFzIGlmIGl0IHdhcyAkJlxuLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNjAyNDY2Ni9nZXR0aW5nLWllLXRvLXJlcGxhY2UtYS1yZWdleC13aXRoLXRoZS1saXRlcmFsLXN0cmluZy0wXG52YXIgUkVQTEFDRV9LRUVQU18kMCA9IChmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvcHJlZmVyLWVzY2FwZS1yZXBsYWNlbWVudC1kb2xsYXItY2hhciAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gJ2EnLnJlcGxhY2UoLy4vLCAnJDAnKSA9PT0gJyQwJztcbn0pKCk7XG5cbi8vIFNhZmFyaSA8PSAxMy4wLjMoPykgc3Vic3RpdHV0ZXMgbnRoIGNhcHR1cmUgd2hlcmUgbj5tIHdpdGggYW4gZW1wdHkgc3RyaW5nXG52YXIgUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUgPSAoZnVuY3Rpb24gKCkge1xuICBpZiAoLy4vW1JFUExBQ0VdKSB7XG4gICAgcmV0dXJuIC8uL1tSRVBMQUNFXSgnYScsICckMCcpID09PSAnJztcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59KSgpO1xuXG52YXIgUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUgPSAvLi87XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHJlc3VsdC5ncm91cHMgPSB7IGE6ICc3JyB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tdXNlbGVzcy1kb2xsYXItcmVwbGFjZW1lbnRzIC0tIGZhbHNlIHBvc2l0aXZlXG4gIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7XG59KTtcblxuLy8gQEByZXBsYWNlIGxvZ2ljXG5maXhSZWdFeHBXZWxsS25vd25TeW1ib2xMb2dpYygncmVwbGFjZScsIGZ1bmN0aW9uIChfLCBuYXRpdmVSZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgdmFyIFVOU0FGRV9TVUJTVElUVVRFID0gUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUgPyAnJCcgOiAnJDAnO1xuXG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gcmVxdWlyZU9iamVjdENvZXJjaWJsZSh0aGlzKTtcbiAgICAgIHZhciByZXBsYWNlciA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGdldE1ldGhvZChzZWFyY2hWYWx1ZSwgUkVQTEFDRSk7XG4gICAgICByZXR1cm4gcmVwbGFjZXJcbiAgICAgICAgPyByZXBsYWNlci5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogbmF0aXZlUmVwbGFjZS5jYWxsKHRvU3RyaW5nKE8pLCBzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTtcbiAgICB9LFxuICAgIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAcmVwbGFjZV1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAoc3RyaW5nLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByeCA9IGFuT2JqZWN0KHRoaXMpO1xuICAgICAgdmFyIFMgPSB0b1N0cmluZyhzdHJpbmcpO1xuXG4gICAgICBpZiAoXG4gICAgICAgIHR5cGVvZiByZXBsYWNlVmFsdWUgPT09ICdzdHJpbmcnICYmXG4gICAgICAgIHJlcGxhY2VWYWx1ZS5pbmRleE9mKFVOU0FGRV9TVUJTVElUVVRFKSA9PT0gLTEgJiZcbiAgICAgICAgcmVwbGFjZVZhbHVlLmluZGV4T2YoJyQ8JykgPT09IC0xXG4gICAgICApIHtcbiAgICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShuYXRpdmVSZXBsYWNlLCByeCwgUywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgZnVuY3Rpb25hbFJlcGxhY2UgPSBpc0NhbGxhYmxlKHJlcGxhY2VWYWx1ZSk7XG4gICAgICBpZiAoIWZ1bmN0aW9uYWxSZXBsYWNlKSByZXBsYWNlVmFsdWUgPSB0b1N0cmluZyhyZXBsYWNlVmFsdWUpO1xuXG4gICAgICB2YXIgZ2xvYmFsID0gcnguZ2xvYmFsO1xuICAgICAgaWYgKGdsb2JhbCkge1xuICAgICAgICB2YXIgZnVsbFVuaWNvZGUgPSByeC51bmljb2RlO1xuICAgICAgICByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgfVxuICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gbnVsbCkgYnJlYWs7XG5cbiAgICAgICAgcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIGlmICghZ2xvYmFsKSBicmVhaztcblxuICAgICAgICB2YXIgbWF0Y2hTdHIgPSB0b1N0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBpZiAobWF0Y2hTdHIgPT09ICcnKSByeC5sYXN0SW5kZXggPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgdG9MZW5ndGgocngubGFzdEluZGV4KSwgZnVsbFVuaWNvZGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgYWNjdW11bGF0ZWRSZXN1bHQgPSAnJztcbiAgICAgIHZhciBuZXh0U291cmNlUG9zaXRpb24gPSAwO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdHNbaV07XG5cbiAgICAgICAgdmFyIG1hdGNoZWQgPSB0b1N0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSBtYXgobWluKHRvSW50ZWdlck9ySW5maW5pdHkocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gdG9TdHJpbmcocmVwbGFjZVZhbHVlLmFwcGx5KHVuZGVmaW5lZCwgcmVwbGFjZXJBcmdzKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVwbGFjZW1lbnQgPSBnZXRTdWJzdGl0dXRpb24obWF0Y2hlZCwgUywgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3NpdGlvbiA+PSBuZXh0U291cmNlUG9zaXRpb24pIHtcbiAgICAgICAgICBhY2N1bXVsYXRlZFJlc3VsdCArPSBTLnNsaWNlKG5leHRTb3VyY2VQb3NpdGlvbiwgcG9zaXRpb24pICsgcmVwbGFjZW1lbnQ7XG4gICAgICAgICAgbmV4dFNvdXJjZVBvc2l0aW9uID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGFjY3VtdWxhdGVkUmVzdWx0ICsgUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24pO1xuICAgIH1cbiAgXTtcbn0sICFSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyB8fCAhUkVQTEFDRV9LRUVQU18kMCB8fCBSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpYycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NhbWUtdmFsdWUnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBnZXRNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LW1ldGhvZCcpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcblxuLy8gQEBzZWFyY2ggbG9naWNcbmZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljKCdzZWFyY2gnLCBmdW5jdGlvbiAoU0VBUkNILCBuYXRpdmVTZWFyY2gsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICByZXR1cm4gW1xuICAgIC8vIGBTdHJpbmcucHJvdG90eXBlLnNlYXJjaGAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNlYXJjaFxuICAgIGZ1bmN0aW9uIHNlYXJjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gcmVxdWlyZU9iamVjdENvZXJjaWJsZSh0aGlzKTtcbiAgICAgIHZhciBzZWFyY2hlciA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBnZXRNZXRob2QocmVnZXhwLCBTRUFSQ0gpO1xuICAgICAgcmV0dXJuIHNlYXJjaGVyID8gc2VhcmNoZXIuY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW1NFQVJDSF0odG9TdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzZWFyY2hcbiAgICBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBTID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUobmF0aXZlU2VhcmNoLCByeCwgUyk7XG5cbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTtcbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgZ2V0TWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1tZXRob2QnKTtcbnZhciBjYWxsUmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMnKTtcbnZhciBzdGlja3lIZWxwZXJzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1zdGlja3ktaGVscGVycycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbnZhciBVTlNVUFBPUlRFRF9ZID0gc3RpY2t5SGVscGVycy5VTlNVUFBPUlRFRF9ZO1xudmFyIGFycmF5UHVzaCA9IFtdLnB1c2g7XG52YXIgbWluID0gTWF0aC5taW47XG52YXIgTUFYX1VJTlQzMiA9IDB4RkZGRkZGRkY7XG5cbi8vIENocm9tZSA1MSBoYXMgYSBidWdneSBcInNwbGl0XCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlY1xuLy8gV2VleCBKUyBoYXMgZnJvemVuIGJ1aWx0LWluIHByb3RvdHlwZXMsIHNvIHVzZSB0cnkgLyBjYXRjaCB3cmFwcGVyXG52YXIgU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1lbXB0eS1ncm91cCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICB2YXIgcmUgPSAvKD86KS87XG4gIHZhciBvcmlnaW5hbEV4ZWMgPSByZS5leGVjO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG4gIHZhciByZXN1bHQgPSAnYWInLnNwbGl0KHJlKTtcbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggIT09IDIgfHwgcmVzdWx0WzBdICE9PSAnYScgfHwgcmVzdWx0WzFdICE9PSAnYic7XG59KTtcblxuLy8gQEBzcGxpdCBsb2dpY1xuZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMoJ3NwbGl0JywgZnVuY3Rpb24gKFNQTElULCBuYXRpdmVTcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHZhciBpbnRlcm5hbFNwbGl0O1xuICBpZiAoXG4gICAgJ2FiYmMnLnNwbGl0KC8oYikqLylbMV0gPT0gJ2MnIHx8XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1lbXB0eS1ncm91cCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICAgICd0ZXN0Jy5zcGxpdCgvKD86KS8sIC0xKS5sZW5ndGggIT0gNCB8fFxuICAgICdhYicuc3BsaXQoLyg/OmFiKSovKS5sZW5ndGggIT0gMiB8fFxuICAgICcuJy5zcGxpdCgvKC4/KSguPykvKS5sZW5ndGggIT0gNCB8fFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tZW1wdHktY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgICAnLicuc3BsaXQoLygpKCkvKS5sZW5ndGggPiAxIHx8XG4gICAgJycuc3BsaXQoLy4/LykubGVuZ3RoXG4gICkge1xuICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdFxuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIHN0cmluZyA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcykpO1xuICAgICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7XG4gICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107XG4gICAgICBpZiAoc2VwYXJhdG9yID09PSB1bmRlZmluZWQpIHJldHVybiBbc3RyaW5nXTtcbiAgICAgIC8vIElmIGBzZXBhcmF0b3JgIGlzIG5vdCBhIHJlZ2V4LCB1c2UgbmF0aXZlIHNwbGl0XG4gICAgICBpZiAoIWlzUmVnRXhwKHNlcGFyYXRvcikpIHtcbiAgICAgICAgcmV0dXJuIG5hdGl2ZVNwbGl0LmNhbGwoc3RyaW5nLCBzZXBhcmF0b3IsIGxpbSk7XG4gICAgICB9XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDtcbiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7XG4gICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHkubGFzdEluZGV4O1xuICAgICAgICBpZiAobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCkge1xuICAgICAgICAgIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4LCBtYXRjaC5pbmRleCkpO1xuICAgICAgICAgIGlmIChtYXRjaC5sZW5ndGggPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nLmxlbmd0aCkgYXJyYXlQdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXS5sZW5ndGg7XG4gICAgICAgICAgbGFzdExhc3RJbmRleCA9IGxhc3RJbmRleDtcbiAgICAgICAgICBpZiAob3V0cHV0Lmxlbmd0aCA+PSBsaW0pIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0b3JDb3B5Lmxhc3RJbmRleCA9PT0gbWF0Y2guaW5kZXgpIHNlcGFyYXRvckNvcHkubGFzdEluZGV4Kys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3BcbiAgICAgIH1cbiAgICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHJpbmcubGVuZ3RoKSB7XG4gICAgICAgIGlmIChsYXN0TGVuZ3RoIHx8ICFzZXBhcmF0b3JDb3B5LnRlc3QoJycpKSBvdXRwdXQucHVzaCgnJyk7XG4gICAgICB9IGVsc2Ugb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTtcbiAgICAgIHJldHVybiBvdXRwdXQubGVuZ3RoID4gbGltID8gb3V0cHV0LnNsaWNlKDAsIGxpbSkgOiBvdXRwdXQ7XG4gICAgfTtcbiAgLy8gQ2hha3JhLCBWOFxuICB9IGVsc2UgaWYgKCcwJy5zcGxpdCh1bmRlZmluZWQsIDApLmxlbmd0aCkge1xuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgcmV0dXJuIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkICYmIGxpbWl0ID09PSAwID8gW10gOiBuYXRpdmVTcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG4gIH0gZWxzZSBpbnRlcm5hbFNwbGl0ID0gbmF0aXZlU3BsaXQ7XG5cbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdGAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNwbGl0XG4gICAgZnVuY3Rpb24gc3BsaXQoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIE8gPSByZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpO1xuICAgICAgdmFyIHNwbGl0dGVyID0gc2VwYXJhdG9yID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGdldE1ldGhvZChzZXBhcmF0b3IsIFNQTElUKTtcbiAgICAgIHJldHVybiBzcGxpdHRlclxuICAgICAgICA/IHNwbGl0dGVyLmNhbGwoc2VwYXJhdG9yLCBPLCBsaW1pdClcbiAgICAgICAgOiBpbnRlcm5hbFNwbGl0LmNhbGwodG9TdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHNwbGl0XG4gICAgLy9cbiAgICAvLyBOT1RFOiBUaGlzIGNhbm5vdCBiZSBwcm9wZXJseSBwb2x5ZmlsbGVkIGluIGVuZ2luZXMgdGhhdCBkb24ndCBzdXBwb3J0XG4gICAgLy8gdGhlICd5JyBmbGFnLlxuICAgIGZ1bmN0aW9uIChzdHJpbmcsIGxpbWl0KSB7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBTID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoaW50ZXJuYWxTcGxpdCwgcngsIFMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSBuYXRpdmVTcGxpdCk7XG5cbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IocngsIFJlZ0V4cCk7XG5cbiAgICAgIHZhciB1bmljb2RlTWF0Y2hpbmcgPSByeC51bmljb2RlO1xuICAgICAgdmFyIGZsYWdzID0gKHJ4Lmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHJ4Lm11bHRpbGluZSA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngudW5pY29kZSA/ICd1JyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAoVU5TVVBQT1JURURfWSA/ICdnJyA6ICd5Jyk7XG5cbiAgICAgIC8vIF4oPyArIHJ4ICsgKSBpcyBuZWVkZWQsIGluIGNvbWJpbmF0aW9uIHdpdGggc29tZSBTIHNsaWNpbmcsIHRvXG4gICAgICAvLyBzaW11bGF0ZSB0aGUgJ3knIGZsYWcuXG4gICAgICB2YXIgc3BsaXR0ZXIgPSBuZXcgQyhVTlNVUFBPUlRFRF9ZID8gJ14oPzonICsgcnguc291cmNlICsgJyknIDogcngsIGZsYWdzKTtcbiAgICAgIHZhciBsaW0gPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgaWYgKGxpbSA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgaWYgKFMubGVuZ3RoID09PSAwKSByZXR1cm4gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFMpID09PSBudWxsID8gW1NdIDogW107XG4gICAgICB2YXIgcCA9IDA7XG4gICAgICB2YXIgcSA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgd2hpbGUgKHEgPCBTLmxlbmd0aCkge1xuICAgICAgICBzcGxpdHRlci5sYXN0SW5kZXggPSBVTlNVUFBPUlRFRF9ZID8gMCA6IHE7XG4gICAgICAgIHZhciB6ID0gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFVOU1VQUE9SVEVEX1kgPyBTLnNsaWNlKHEpIDogUyk7XG4gICAgICAgIHZhciBlO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgeiA9PT0gbnVsbCB8fFxuICAgICAgICAgIChlID0gbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChVTlNVUFBPUlRFRF9ZID8gcSA6IDApKSwgUy5sZW5ndGgpKSA9PT0gcFxuICAgICAgICApIHtcbiAgICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpO1xuICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgQS5wdXNoKHpbaV0pO1xuICAgICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIH1cbiAgICAgICAgICBxID0gcCA9IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEEucHVzaChTLnNsaWNlKHApKTtcbiAgICAgIHJldHVybiBBO1xuICAgIH1cbiAgXTtcbn0sICFTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMsIFVOU1VQUE9SVEVEX1kpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWxlbmd0aCcpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIG5vdEFSZWdFeHAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbm90LWEtcmVnZXhwJyk7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciBjb3JyZWN0SXNSZWdFeHBMb2dpYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3JyZWN0LWlzLXJlZ2V4cC1sb2dpYycpO1xudmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tc3RyaW5nLXByb3RvdHlwZS1zdGFydHN3aXRoIC0tIHNhZmVcbnZhciAkc3RhcnRzV2l0aCA9ICcnLnN0YXJ0c1dpdGg7XG52YXIgbWluID0gTWF0aC5taW47XG5cbnZhciBDT1JSRUNUX0lTX1JFR0VYUF9MT0dJQyA9IGNvcnJlY3RJc1JlZ0V4cExvZ2ljKCdzdGFydHNXaXRoJyk7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9wdWxsLzcwMlxudmFyIE1ETl9QT0xZRklMTF9CVUcgPSAhSVNfUFVSRSAmJiAhQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgJiYgISFmdW5jdGlvbiAoKSB7XG4gIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFN0cmluZy5wcm90b3R5cGUsICdzdGFydHNXaXRoJyk7XG4gIHJldHVybiBkZXNjcmlwdG9yICYmICFkZXNjcmlwdG9yLndyaXRhYmxlO1xufSgpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5zdGFydHN3aXRoXG4kKHsgdGFyZ2V0OiAnU3RyaW5nJywgcHJvdG86IHRydWUsIGZvcmNlZDogIU1ETl9QT0xZRklMTF9CVUcgJiYgIUNPUlJFQ1RfSVNfUkVHRVhQX0xPR0lDIH0sIHtcbiAgc3RhcnRzV2l0aDogZnVuY3Rpb24gc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICB2YXIgdGhhdCA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcykpO1xuICAgIG5vdEFSZWdFeHAoc2VhcmNoU3RyaW5nKTtcbiAgICB2YXIgaW5kZXggPSB0b0xlbmd0aChtaW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSk7XG4gICAgdmFyIHNlYXJjaCA9IHRvU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRzdGFydHNXaXRoXG4gICAgICA/ICRzdGFydHNXaXRoLmNhbGwodGhhdCwgc2VhcmNoLCBpbmRleClcbiAgICAgIDogdGhhdC5zbGljZShpbmRleCwgaW5kZXggKyBzZWFyY2gubGVuZ3RoKSA9PT0gc2VhcmNoO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyICR0cmltID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy10cmltJykudHJpbTtcbnZhciBmb3JjZWRTdHJpbmdUcmltTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy10cmltLWZvcmNlZCcpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS50cmltYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS50cmltXG4kKHsgdGFyZ2V0OiAnU3RyaW5nJywgcHJvdG86IHRydWUsIGZvcmNlZDogZm9yY2VkU3RyaW5nVHJpbU1ldGhvZCgndHJpbScpIH0sIHtcbiAgdHJpbTogZnVuY3Rpb24gdHJpbSgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcyk7XG4gIH1cbn0pO1xuIiwiLy8gYFN5bWJvbC5wcm90b3R5cGUuZGVzY3JpcHRpb25gIGdldHRlclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zeW1ib2wucHJvdG90eXBlLmRlc2NyaXB0aW9uXG4ndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcbnZhciBjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NvcHktY29uc3RydWN0b3ItcHJvcGVydGllcycpO1xuXG52YXIgTmF0aXZlU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcblxuaWYgKERFU0NSSVBUT1JTICYmIGlzQ2FsbGFibGUoTmF0aXZlU3ltYm9sKSAmJiAoISgnZGVzY3JpcHRpb24nIGluIE5hdGl2ZVN5bWJvbC5wcm90b3R5cGUpIHx8XG4gIC8vIFNhZmFyaSAxMiBidWdcbiAgTmF0aXZlU3ltYm9sKCkuZGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZFxuKSkge1xuICB2YXIgRW1wdHlTdHJpbmdEZXNjcmlwdGlvblN0b3JlID0ge307XG4gIC8vIHdyYXAgU3ltYm9sIGNvbnN0cnVjdG9yIGZvciBjb3JyZWN0IHdvcmsgd2l0aCB1bmRlZmluZWQgZGVzY3JpcHRpb25cbiAgdmFyIFN5bWJvbFdyYXBwZXIgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgdmFyIGRlc2NyaXB0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBTdHJpbmcoYXJndW1lbnRzWzBdKTtcbiAgICB2YXIgcmVzdWx0ID0gdGhpcyBpbnN0YW5jZW9mIFN5bWJvbFdyYXBwZXJcbiAgICAgID8gbmV3IE5hdGl2ZVN5bWJvbChkZXNjcmlwdGlvbilcbiAgICAgIC8vIGluIEVkZ2UgMTMsIFN0cmluZyhTeW1ib2wodW5kZWZpbmVkKSkgPT09ICdTeW1ib2wodW5kZWZpbmVkKSdcbiAgICAgIDogZGVzY3JpcHRpb24gPT09IHVuZGVmaW5lZCA/IE5hdGl2ZVN5bWJvbCgpIDogTmF0aXZlU3ltYm9sKGRlc2NyaXB0aW9uKTtcbiAgICBpZiAoZGVzY3JpcHRpb24gPT09ICcnKSBFbXB0eVN0cmluZ0Rlc2NyaXB0aW9uU3RvcmVbcmVzdWx0XSA9IHRydWU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyhTeW1ib2xXcmFwcGVyLCBOYXRpdmVTeW1ib2wpO1xuICB2YXIgc3ltYm9sUHJvdG90eXBlID0gU3ltYm9sV3JhcHBlci5wcm90b3R5cGUgPSBOYXRpdmVTeW1ib2wucHJvdG90eXBlO1xuICBzeW1ib2xQcm90b3R5cGUuY29uc3RydWN0b3IgPSBTeW1ib2xXcmFwcGVyO1xuXG4gIHZhciBzeW1ib2xUb1N0cmluZyA9IHN5bWJvbFByb3RvdHlwZS50b1N0cmluZztcbiAgdmFyIG5hdGl2ZVN5bWJvbCA9IFN0cmluZyhOYXRpdmVTeW1ib2woJ3Rlc3QnKSkgPT0gJ1N5bWJvbCh0ZXN0KSc7XG4gIHZhciByZWdleHAgPSAvXlN5bWJvbFxcKCguKilcXClbXildKyQvO1xuICBkZWZpbmVQcm9wZXJ0eShzeW1ib2xQcm90b3R5cGUsICdkZXNjcmlwdGlvbicsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBkZXNjcmlwdGlvbigpIHtcbiAgICAgIHZhciBzeW1ib2wgPSBpc09iamVjdCh0aGlzKSA/IHRoaXMudmFsdWVPZigpIDogdGhpcztcbiAgICAgIHZhciBzdHJpbmcgPSBzeW1ib2xUb1N0cmluZy5jYWxsKHN5bWJvbCk7XG4gICAgICBpZiAoaGFzT3duKEVtcHR5U3RyaW5nRGVzY3JpcHRpb25TdG9yZSwgc3ltYm9sKSkgcmV0dXJuICcnO1xuICAgICAgdmFyIGRlc2MgPSBuYXRpdmVTeW1ib2wgPyBzdHJpbmcuc2xpY2UoNywgLTEpIDogc3RyaW5nLnJlcGxhY2UocmVnZXhwLCAnJDEnKTtcbiAgICAgIHJldHVybiBkZXNjID09PSAnJyA/IHVuZGVmaW5lZCA6IGRlc2M7XG4gICAgfVxuICB9KTtcblxuICAkKHsgZ2xvYmFsOiB0cnVlLCBmb3JjZWQ6IHRydWUgfSwge1xuICAgIFN5bWJvbDogU3ltYm9sV3JhcHBlclxuICB9KTtcbn1cbiIsInZhciBkZWZpbmVXZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLXdlbGwta25vd24tc3ltYm9sJyk7XG5cbi8vIGBTeW1ib2wuaXRlcmF0b3JgIHdlbGwta25vd24gc3ltYm9sXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5pdGVyYXRvclxuZGVmaW5lV2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2wnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1zeW1ib2wnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xudmFyICR0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciBuYXRpdmVPYmplY3RDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLWV4dGVybmFsJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZCcpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciB3cmFwcGVkV2VsbEtub3duU3ltYm9sTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sLXdyYXBwZWQnKTtcbnZhciBkZWZpbmVXZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLXdlbGwta25vd24tc3ltYm9sJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJbnRlcm5hbFN0YXRlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uJykuZm9yRWFjaDtcblxudmFyIEhJRERFTiA9IHNoYXJlZEtleSgnaGlkZGVuJyk7XG52YXIgU1lNQk9MID0gJ1N5bWJvbCc7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgVE9fUFJJTUlUSVZFID0gd2VsbEtub3duU3ltYm9sKCd0b1ByaW1pdGl2ZScpO1xudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXR0ZXJGb3IoU1lNQk9MKTtcbnZhciBPYmplY3RQcm90b3R5cGUgPSBPYmplY3RbUFJPVE9UWVBFXTtcbnZhciAkU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciAkc3RyaW5naWZ5ID0gZ2V0QnVpbHRJbignSlNPTicsICdzdHJpbmdpZnknKTtcbnZhciBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUuZjtcbnZhciBuYXRpdmVEZWZpbmVQcm9wZXJ0eSA9IGRlZmluZVByb3BlcnR5TW9kdWxlLmY7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyA9IGdldE93blByb3BlcnR5TmFtZXNFeHRlcm5hbC5mO1xudmFyIG5hdGl2ZVByb3BlcnR5SXNFbnVtZXJhYmxlID0gcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZjtcbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG90eXBlU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIFN0cmluZ1RvU3ltYm9sUmVnaXN0cnkgPSBzaGFyZWQoJ3N0cmluZy10by1zeW1ib2wtcmVnaXN0cnknKTtcbnZhciBTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtdG8tc3RyaW5nLXJlZ2lzdHJ5Jyk7XG52YXIgV2VsbEtub3duU3ltYm9sc1N0b3JlID0gc2hhcmVkKCd3a3MnKTtcbnZhciBRT2JqZWN0ID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBVU0VfU0VUVEVSID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzY3JpcHRvciA9IERFU0NSSVBUT1JTICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdENyZWF0ZShuYXRpdmVEZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuYXRpdmVEZWZpbmVQcm9wZXJ0eSh0aGlzLCAnYScsIHsgdmFsdWU6IDcgfSkuYTsgfVxuICB9KSkuYSAhPSA3O1xufSkgPyBmdW5jdGlvbiAoTywgUCwgQXR0cmlidXRlcykge1xuICB2YXIgT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvciA9IG5hdGl2ZUdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3RQcm90b3R5cGUsIFApO1xuICBpZiAoT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvcikgZGVsZXRlIE9iamVjdFByb3RvdHlwZVtQXTtcbiAgbmF0aXZlRGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcyk7XG4gIGlmIChPYmplY3RQcm90b3R5cGVEZXNjcmlwdG9yICYmIE8gIT09IE9iamVjdFByb3RvdHlwZSkge1xuICAgIG5hdGl2ZURlZmluZVByb3BlcnR5KE9iamVjdFByb3RvdHlwZSwgUCwgT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvcik7XG4gIH1cbn0gOiBuYXRpdmVEZWZpbmVQcm9wZXJ0eTtcblxudmFyIHdyYXAgPSBmdW5jdGlvbiAodGFnLCBkZXNjcmlwdGlvbikge1xuICB2YXIgc3ltYm9sID0gQWxsU3ltYm9sc1t0YWddID0gbmF0aXZlT2JqZWN0Q3JlYXRlKCRTeW1ib2xbUFJPVE9UWVBFXSk7XG4gIHNldEludGVybmFsU3RhdGUoc3ltYm9sLCB7XG4gICAgdHlwZTogU1lNQk9MLFxuICAgIHRhZzogdGFnLFxuICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvblxuICB9KTtcbiAgaWYgKCFERVNDUklQVE9SUykgc3ltYm9sLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gIHJldHVybiBzeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBpZiAoTyA9PT0gT2JqZWN0UHJvdG90eXBlKSAkZGVmaW5lUHJvcGVydHkoT2JqZWN0UHJvdG90eXBlU3ltYm9scywgUCwgQXR0cmlidXRlcyk7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5ID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChoYXNPd24oQWxsU3ltYm9scywga2V5KSkge1xuICAgIGlmICghQXR0cmlidXRlcy5lbnVtZXJhYmxlKSB7XG4gICAgICBpZiAoIWhhc093bihPLCBISURERU4pKSBuYXRpdmVEZWZpbmVQcm9wZXJ0eShPLCBISURERU4sIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcigxLCB7fSkpO1xuICAgICAgT1tISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzT3duKE8sIEhJRERFTikgJiYgT1tISURERU5dW2tleV0pIE9bSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBBdHRyaWJ1dGVzID0gbmF0aXZlT2JqZWN0Q3JlYXRlKEF0dHJpYnV0ZXMsIHsgZW51bWVyYWJsZTogY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIGZhbHNlKSB9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjcmlwdG9yKE8sIGtleSwgQXR0cmlidXRlcyk7XG4gIH0gcmV0dXJuIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIGtleSwgQXR0cmlidXRlcyk7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBwcm9wZXJ0aWVzID0gdG9JbmRleGVkT2JqZWN0KFByb3BlcnRpZXMpO1xuICB2YXIga2V5cyA9IG9iamVjdEtleXMocHJvcGVydGllcykuY29uY2F0KCRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMocHJvcGVydGllcykpO1xuICAkZm9yRWFjaChrZXlzLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKCFERVNDUklQVE9SUyB8fCAkcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChwcm9wZXJ0aWVzLCBrZXkpKSAkZGVmaW5lUHJvcGVydHkoTywga2V5LCBwcm9wZXJ0aWVzW2tleV0pO1xuICB9KTtcbiAgcmV0dXJuIE87XG59O1xuXG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHJldHVybiBQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyBuYXRpdmVPYmplY3RDcmVhdGUoTykgOiAkZGVmaW5lUHJvcGVydGllcyhuYXRpdmVPYmplY3RDcmVhdGUoTyksIFByb3BlcnRpZXMpO1xufTtcblxudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKFYpIHtcbiAgdmFyIFAgPSB0b1Byb3BlcnR5S2V5KFYpO1xuICB2YXIgZW51bWVyYWJsZSA9IG5hdGl2ZVByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodGhpcywgUCk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90b3R5cGUgJiYgaGFzT3duKEFsbFN5bWJvbHMsIFApICYmICFoYXNPd24oT2JqZWN0UHJvdG90eXBlU3ltYm9scywgUCkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIGVudW1lcmFibGUgfHwgIWhhc093bih0aGlzLCBQKSB8fCAhaGFzT3duKEFsbFN5bWJvbHMsIFApIHx8IGhhc093bih0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtQXVxuICAgID8gZW51bWVyYWJsZSA6IHRydWU7XG59O1xuXG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIHZhciBpdCA9IHRvSW5kZXhlZE9iamVjdChPKTtcbiAgdmFyIGtleSA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG90eXBlICYmIGhhc093bihBbGxTeW1ib2xzLCBrZXkpICYmICFoYXNPd24oT2JqZWN0UHJvdG90eXBlU3ltYm9scywga2V5KSkgcmV0dXJuO1xuICB2YXIgZGVzY3JpcHRvciA9IG5hdGl2ZUdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KTtcbiAgaWYgKGRlc2NyaXB0b3IgJiYgaGFzT3duKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXNPd24oaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkge1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IHRydWU7XG4gIH1cbiAgcmV0dXJuIGRlc2NyaXB0b3I7XG59O1xuXG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pIHtcbiAgdmFyIG5hbWVzID0gbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyh0b0luZGV4ZWRPYmplY3QoTykpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gICRmb3JFYWNoKG5hbWVzLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKCFoYXNPd24oQWxsU3ltYm9scywga2V5KSAmJiAhaGFzT3duKGhpZGRlbktleXMsIGtleSkpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTykge1xuICB2YXIgSVNfT0JKRUNUX1BST1RPVFlQRSA9IE8gPT09IE9iamVjdFByb3RvdHlwZTtcbiAgdmFyIG5hbWVzID0gbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyhJU19PQkpFQ1RfUFJPVE9UWVBFID8gT2JqZWN0UHJvdG90eXBlU3ltYm9scyA6IHRvSW5kZXhlZE9iamVjdChPKSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgJGZvckVhY2gobmFtZXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoaGFzT3duKEFsbFN5bWJvbHMsIGtleSkgJiYgKCFJU19PQkpFQ1RfUFJPVE9UWVBFIHx8IGhhc093bihPYmplY3RQcm90b3R5cGUsIGtleSkpKSB7XG4gICAgICByZXN1bHQucHVzaChBbGxTeW1ib2xzW2tleV0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyBgU3ltYm9sYCBjb25zdHJ1Y3RvclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zeW1ib2wtY29uc3RydWN0b3JcbmlmICghTkFUSVZFX1NZTUJPTCkge1xuICAkU3ltYm9sID0gZnVuY3Rpb24gU3ltYm9sKCkge1xuICAgIGlmICh0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCkgdGhyb3cgVHlwZUVycm9yKCdTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3InKTtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSAhYXJndW1lbnRzLmxlbmd0aCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICR0b1N0cmluZyhhcmd1bWVudHNbMF0pO1xuICAgIHZhciB0YWcgPSB1aWQoZGVzY3JpcHRpb24pO1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIGlmICh0aGlzID09PSBPYmplY3RQcm90b3R5cGUpIHNldHRlci5jYWxsKE9iamVjdFByb3RvdHlwZVN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXNPd24odGhpcywgSElEREVOKSAmJiBoYXNPd24odGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzY3JpcHRvcih0aGlzLCB0YWcsIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcigxLCB2YWx1ZSkpO1xuICAgIH07XG4gICAgaWYgKERFU0NSSVBUT1JTICYmIFVTRV9TRVRURVIpIHNldFN5bWJvbERlc2NyaXB0b3IoT2JqZWN0UHJvdG90eXBlLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6IHNldHRlciB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcsIGRlc2NyaXB0aW9uKTtcbiAgfTtcblxuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLnRhZztcbiAgfSk7XG5cbiAgcmVkZWZpbmUoJFN5bWJvbCwgJ3dpdGhvdXRTZXR0ZXInLCBmdW5jdGlvbiAoZGVzY3JpcHRpb24pIHtcbiAgICByZXR1cm4gd3JhcCh1aWQoZGVzY3JpcHRpb24pLCBkZXNjcmlwdGlvbik7XG4gIH0pO1xuXG4gIHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIGRlZmluZVByb3BlcnR5TW9kdWxlLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZS5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZS5mID0gZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsLmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIHdyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2VsbEtub3duU3ltYm9sKG5hbWUpLCBuYW1lKTtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1TeW1ib2wtZGVzY3JpcHRpb25cbiAgICBuYXRpdmVEZWZpbmVQcm9wZXJ0eSgkU3ltYm9sW1BST1RPVFlQRV0sICdkZXNjcmlwdGlvbicsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gZGVzY3JpcHRpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLmRlc2NyaXB0aW9uO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmICghSVNfUFVSRSkge1xuICAgICAgcmVkZWZpbmUoT2JqZWN0UHJvdG90eXBlLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHsgdW5zYWZlOiB0cnVlIH0pO1xuICAgIH1cbiAgfVxufVxuXG4kKHsgZ2xvYmFsOiB0cnVlLCB3cmFwOiB0cnVlLCBmb3JjZWQ6ICFOQVRJVkVfU1lNQk9MLCBzaGFtOiAhTkFUSVZFX1NZTUJPTCB9LCB7XG4gIFN5bWJvbDogJFN5bWJvbFxufSk7XG5cbiRmb3JFYWNoKG9iamVjdEtleXMoV2VsbEtub3duU3ltYm9sc1N0b3JlKSwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgZGVmaW5lV2VsbEtub3duU3ltYm9sKG5hbWUpO1xufSk7XG5cbiQoeyB0YXJnZXQ6IFNZTUJPTCwgc3RhdDogdHJ1ZSwgZm9yY2VkOiAhTkFUSVZFX1NZTUJPTCB9LCB7XG4gIC8vIGBTeW1ib2wuZm9yYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zeW1ib2wuZm9yXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHN0cmluZyA9ICR0b1N0cmluZyhrZXkpO1xuICAgIGlmIChoYXNPd24oU3RyaW5nVG9TeW1ib2xSZWdpc3RyeSwgc3RyaW5nKSkgcmV0dXJuIFN0cmluZ1RvU3ltYm9sUmVnaXN0cnlbc3RyaW5nXTtcbiAgICB2YXIgc3ltYm9sID0gJFN5bWJvbChzdHJpbmcpO1xuICAgIFN0cmluZ1RvU3ltYm9sUmVnaXN0cnlbc3RyaW5nXSA9IHN5bWJvbDtcbiAgICBTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5W3N5bWJvbF0gPSBzdHJpbmc7XG4gICAgcmV0dXJuIHN5bWJvbDtcbiAgfSxcbiAgLy8gYFN5bWJvbC5rZXlGb3JgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5rZXlmb3JcbiAga2V5Rm9yOiBmdW5jdGlvbiBrZXlGb3Ioc3ltKSB7XG4gICAgaWYgKCFpc1N5bWJvbChzeW0pKSB0aHJvdyBUeXBlRXJyb3Ioc3ltICsgJyBpcyBub3QgYSBzeW1ib2wnKTtcbiAgICBpZiAoaGFzT3duKFN5bWJvbFRvU3RyaW5nUmVnaXN0cnksIHN5bSkpIHJldHVybiBTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5W3N5bV07XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBVU0VfU0VUVEVSID0gdHJ1ZTsgfSxcbiAgdXNlU2ltcGxlOiBmdW5jdGlvbiAoKSB7IFVTRV9TRVRURVIgPSBmYWxzZTsgfVxufSk7XG5cbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6ICFOQVRJVkVfU1lNQk9MLCBzaGFtOiAhREVTQ1JJUFRPUlMgfSwge1xuICAvLyBgT2JqZWN0LmNyZWF0ZWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmNyZWF0ZVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIGBPYmplY3QuZGVmaW5lUHJvcGVydHlgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5kZWZpbmVwcm9wZXJ0eVxuICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LFxuICAvLyBgT2JqZWN0LmRlZmluZVByb3BlcnRpZXNgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5kZWZpbmVwcm9wZXJ0aWVzXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcmAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5ZGVzY3JpcHRvcnNcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yXG59KTtcblxuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIGZvcmNlZDogIU5BVElWRV9TWU1CT0wgfSwge1xuICAvLyBgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eW5hbWVzXG4gIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAvLyBgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5c3ltYm9sc1xuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHNcbn0pO1xuXG4vLyBDaHJvbWUgMzggYW5kIDM5IGBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzYCBmYWlscyBvbiBwcmltaXRpdmVzXG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNDQzXG4kKHsgdGFyZ2V0OiAnT2JqZWN0Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBmYWlscyhmdW5jdGlvbiAoKSB7IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mKDEpOyB9KSB9LCB7XG4gIGdldE93blByb3BlcnR5U3ltYm9sczogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSB7XG4gICAgcmV0dXJuIGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mKHRvT2JqZWN0KGl0KSk7XG4gIH1cbn0pO1xuXG4vLyBgSlNPTi5zdHJpbmdpZnlgIG1ldGhvZCBiZWhhdmlvciB3aXRoIHN5bWJvbHNcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtanNvbi5zdHJpbmdpZnlcbmlmICgkc3RyaW5naWZ5KSB7XG4gIHZhciBGT1JDRURfSlNPTl9TVFJJTkdJRlkgPSAhTkFUSVZFX1NZTUJPTCB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN5bWJvbCA9ICRTeW1ib2woKTtcbiAgICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAgIHJldHVybiAkc3RyaW5naWZ5KFtzeW1ib2xdKSAhPSAnW251bGxdJ1xuICAgICAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gICAgICB8fCAkc3RyaW5naWZ5KHsgYTogc3ltYm9sIH0pICE9ICd7fSdcbiAgICAgIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gICAgICB8fCAkc3RyaW5naWZ5KE9iamVjdChzeW1ib2wpKSAhPSAne30nO1xuICB9KTtcblxuICAkKHsgdGFyZ2V0OiAnSlNPTicsIHN0YXQ6IHRydWUsIGZvcmNlZDogRk9SQ0VEX0pTT05fU1RSSU5HSUZZIH0sIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYFxuICAgIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0LCByZXBsYWNlciwgc3BhY2UpIHtcbiAgICAgIHZhciBhcmdzID0gW2l0XTtcbiAgICAgIHZhciBpbmRleCA9IDE7XG4gICAgICB2YXIgJHJlcGxhY2VyO1xuICAgICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpbmRleCkgYXJncy5wdXNoKGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgICAkcmVwbGFjZXIgPSByZXBsYWNlcjtcbiAgICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICAgIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJlcGxhY2VyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKGlzQ2FsbGFibGUoJHJlcGxhY2VyKSkgdmFsdWUgPSAkcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcbiAgICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICAgIH07XG4gICAgICBhcmdzWzFdID0gcmVwbGFjZXI7XG4gICAgICByZXR1cm4gJHN0cmluZ2lmeS5hcHBseShudWxsLCBhcmdzKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vLyBgU3ltYm9sLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5wcm90b3R5cGUtQEB0b3ByaW1pdGl2ZVxuaWYgKCEkU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSkge1xuICB2YXIgdmFsdWVPZiA9ICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mO1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB2YWx1ZU9mLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH0pO1xufVxuLy8gYFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11gIHByb3BlcnR5XG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5wcm90b3R5cGUtQEB0b3N0cmluZ3RhZ1xuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgU1lNQk9MKTtcblxuaGlkZGVuS2V5c1tISURERU5dID0gdHJ1ZTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgRE9NSXRlcmFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXMnKTtcbnZhciBET01Ub2tlbkxpc3RQcm90b3R5cGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9tLXRva2VuLWxpc3QtcHJvdG90eXBlJyk7XG52YXIgZm9yRWFjaCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1mb3ItZWFjaCcpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcblxudmFyIGhhbmRsZVByb3RvdHlwZSA9IGZ1bmN0aW9uIChDb2xsZWN0aW9uUHJvdG90eXBlKSB7XG4gIC8vIHNvbWUgQ2hyb21lIHZlcnNpb25zIGhhdmUgbm9uLWNvbmZpZ3VyYWJsZSBtZXRob2RzIG9uIERPTVRva2VuTGlzdFxuICBpZiAoQ29sbGVjdGlvblByb3RvdHlwZSAmJiBDb2xsZWN0aW9uUHJvdG90eXBlLmZvckVhY2ggIT09IGZvckVhY2gpIHRyeSB7XG4gICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KENvbGxlY3Rpb25Qcm90b3R5cGUsICdmb3JFYWNoJywgZm9yRWFjaCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgQ29sbGVjdGlvblByb3RvdHlwZS5mb3JFYWNoID0gZm9yRWFjaDtcbiAgfVxufTtcblxuZm9yICh2YXIgQ09MTEVDVElPTl9OQU1FIGluIERPTUl0ZXJhYmxlcykge1xuICBpZiAoRE9NSXRlcmFibGVzW0NPTExFQ1RJT05fTkFNRV0pIHtcbiAgICBoYW5kbGVQcm90b3R5cGUoZ2xvYmFsW0NPTExFQ1RJT05fTkFNRV0gJiYgZ2xvYmFsW0NPTExFQ1RJT05fTkFNRV0ucHJvdG90eXBlKTtcbiAgfVxufVxuXG5oYW5kbGVQcm90b3R5cGUoRE9NVG9rZW5MaXN0UHJvdG90eXBlKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgRE9NSXRlcmFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXMnKTtcbnZhciBET01Ub2tlbkxpc3RQcm90b3R5cGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9tLXRva2VuLWxpc3QtcHJvdG90eXBlJyk7XG52YXIgQXJyYXlJdGVyYXRvck1ldGhvZHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yJyk7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgSVRFUkFUT1IgPSB3ZWxsS25vd25TeW1ib2woJ2l0ZXJhdG9yJyk7XG52YXIgVE9fU1RSSU5HX1RBRyA9IHdlbGxLbm93blN5bWJvbCgndG9TdHJpbmdUYWcnKTtcbnZhciBBcnJheVZhbHVlcyA9IEFycmF5SXRlcmF0b3JNZXRob2RzLnZhbHVlcztcblxudmFyIGhhbmRsZVByb3RvdHlwZSA9IGZ1bmN0aW9uIChDb2xsZWN0aW9uUHJvdG90eXBlLCBDT0xMRUNUSU9OX05BTUUpIHtcbiAgaWYgKENvbGxlY3Rpb25Qcm90b3R5cGUpIHtcbiAgICAvLyBzb21lIENocm9tZSB2ZXJzaW9ucyBoYXZlIG5vbi1jb25maWd1cmFibGUgbWV0aG9kcyBvbiBET01Ub2tlbkxpc3RcbiAgICBpZiAoQ29sbGVjdGlvblByb3RvdHlwZVtJVEVSQVRPUl0gIT09IEFycmF5VmFsdWVzKSB0cnkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KENvbGxlY3Rpb25Qcm90b3R5cGUsIElURVJBVE9SLCBBcnJheVZhbHVlcyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIENvbGxlY3Rpb25Qcm90b3R5cGVbSVRFUkFUT1JdID0gQXJyYXlWYWx1ZXM7XG4gICAgfVxuICAgIGlmICghQ29sbGVjdGlvblByb3RvdHlwZVtUT19TVFJJTkdfVEFHXSkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KENvbGxlY3Rpb25Qcm90b3R5cGUsIFRPX1NUUklOR19UQUcsIENPTExFQ1RJT05fTkFNRSk7XG4gICAgfVxuICAgIGlmIChET01JdGVyYWJsZXNbQ09MTEVDVElPTl9OQU1FXSkgZm9yICh2YXIgTUVUSE9EX05BTUUgaW4gQXJyYXlJdGVyYXRvck1ldGhvZHMpIHtcbiAgICAgIC8vIHNvbWUgQ2hyb21lIHZlcnNpb25zIGhhdmUgbm9uLWNvbmZpZ3VyYWJsZSBtZXRob2RzIG9uIERPTVRva2VuTGlzdFxuICAgICAgaWYgKENvbGxlY3Rpb25Qcm90b3R5cGVbTUVUSE9EX05BTUVdICE9PSBBcnJheUl0ZXJhdG9yTWV0aG9kc1tNRVRIT0RfTkFNRV0pIHRyeSB7XG4gICAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShDb2xsZWN0aW9uUHJvdG90eXBlLCBNRVRIT0RfTkFNRSwgQXJyYXlJdGVyYXRvck1ldGhvZHNbTUVUSE9EX05BTUVdKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIENvbGxlY3Rpb25Qcm90b3R5cGVbTUVUSE9EX05BTUVdID0gQXJyYXlJdGVyYXRvck1ldGhvZHNbTUVUSE9EX05BTUVdO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuZm9yICh2YXIgQ09MTEVDVElPTl9OQU1FIGluIERPTUl0ZXJhYmxlcykge1xuICBoYW5kbGVQcm90b3R5cGUoZ2xvYmFsW0NPTExFQ1RJT05fTkFNRV0gJiYgZ2xvYmFsW0NPTExFQ1RJT05fTkFNRV0ucHJvdG90eXBlLCBDT0xMRUNUSU9OX05BTUUpO1xufVxuXG5oYW5kbGVQcm90b3R5cGUoRE9NVG9rZW5MaXN0UHJvdG90eXBlLCAnRE9NVG9rZW5MaXN0Jyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBUT0RPOiBpbiBjb3JlLWpzQDQsIG1vdmUgL21vZHVsZXMvIGRlcGVuZGVuY2llcyB0byBwdWJsaWMgZW50cmllcyBmb3IgYmV0dGVyIG9wdGltaXphdGlvbiBieSB0b29scyBsaWtlIGBwcmVzZXQtZW52YFxucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvcicpO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciBVU0VfTkFUSVZFX1VSTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9uYXRpdmUtdXJsJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVkZWZpbmUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZS1hbGwnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXJhdG9yLWNvbnN0cnVjdG9yJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4taW5zdGFuY2UnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyICR0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGdldEl0ZXJhdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvcicpO1xudmFyIGdldEl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2QnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIG5hdGl2ZUZldGNoID0gZ2V0QnVpbHRJbignZmV0Y2gnKTtcbnZhciBOYXRpdmVSZXF1ZXN0ID0gZ2V0QnVpbHRJbignUmVxdWVzdCcpO1xudmFyIFJlcXVlc3RQcm90b3R5cGUgPSBOYXRpdmVSZXF1ZXN0ICYmIE5hdGl2ZVJlcXVlc3QucHJvdG90eXBlO1xudmFyIEhlYWRlcnMgPSBnZXRCdWlsdEluKCdIZWFkZXJzJyk7XG52YXIgSVRFUkFUT1IgPSB3ZWxsS25vd25TeW1ib2woJ2l0ZXJhdG9yJyk7XG52YXIgVVJMX1NFQVJDSF9QQVJBTVMgPSAnVVJMU2VhcmNoUGFyYW1zJztcbnZhciBVUkxfU0VBUkNIX1BBUkFNU19JVEVSQVRPUiA9IFVSTF9TRUFSQ0hfUEFSQU1TICsgJ0l0ZXJhdG9yJztcbnZhciBzZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5zZXQ7XG52YXIgZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuZ2V0dGVyRm9yKFVSTF9TRUFSQ0hfUEFSQU1TKTtcbnZhciBnZXRJbnRlcm5hbEl0ZXJhdG9yU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihVUkxfU0VBUkNIX1BBUkFNU19JVEVSQVRPUik7XG5cbnZhciBwbHVzID0gL1xcKy9nO1xudmFyIHNlcXVlbmNlcyA9IEFycmF5KDQpO1xuXG52YXIgcGVyY2VudFNlcXVlbmNlID0gZnVuY3Rpb24gKGJ5dGVzKSB7XG4gIHJldHVybiBzZXF1ZW5jZXNbYnl0ZXMgLSAxXSB8fCAoc2VxdWVuY2VzW2J5dGVzIC0gMV0gPSBSZWdFeHAoJygoPzolW1xcXFxkYS1mXXsyfSl7JyArIGJ5dGVzICsgJ30pJywgJ2dpJykpO1xufTtcblxudmFyIHBlcmNlbnREZWNvZGUgPSBmdW5jdGlvbiAoc2VxdWVuY2UpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHNlcXVlbmNlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gc2VxdWVuY2U7XG4gIH1cbn07XG5cbnZhciBkZXNlcmlhbGl6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gaXQucmVwbGFjZShwbHVzLCAnICcpO1xuICB2YXIgYnl0ZXMgPSA0O1xuICB0cnkge1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB3aGlsZSAoYnl0ZXMpIHtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKHBlcmNlbnRTZXF1ZW5jZShieXRlcy0tKSwgcGVyY2VudERlY29kZSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5cbnZhciBmaW5kID0gL1shJygpfl18JTIwL2c7XG5cbnZhciByZXBsYWNlID0ge1xuICAnISc6ICclMjEnLFxuICBcIidcIjogJyUyNycsXG4gICcoJzogJyUyOCcsXG4gICcpJzogJyUyOScsXG4gICd+JzogJyU3RScsXG4gICclMjAnOiAnKydcbn07XG5cbnZhciByZXBsYWNlciA9IGZ1bmN0aW9uIChtYXRjaCkge1xuICByZXR1cm4gcmVwbGFjZVttYXRjaF07XG59O1xuXG52YXIgc2VyaWFsaXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoaXQpLnJlcGxhY2UoZmluZCwgcmVwbGFjZXIpO1xufTtcblxudmFyIHBhcnNlU2VhcmNoUGFyYW1zID0gZnVuY3Rpb24gKHJlc3VsdCwgcXVlcnkpIHtcbiAgaWYgKHF1ZXJ5KSB7XG4gICAgdmFyIGF0dHJpYnV0ZXMgPSBxdWVyeS5zcGxpdCgnJicpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGF0dHJpYnV0ZSwgZW50cnk7XG4gICAgd2hpbGUgKGluZGV4IDwgYXR0cmlidXRlcy5sZW5ndGgpIHtcbiAgICAgIGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNbaW5kZXgrK107XG4gICAgICBpZiAoYXR0cmlidXRlLmxlbmd0aCkge1xuICAgICAgICBlbnRyeSA9IGF0dHJpYnV0ZS5zcGxpdCgnPScpO1xuICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAga2V5OiBkZXNlcmlhbGl6ZShlbnRyeS5zaGlmdCgpKSxcbiAgICAgICAgICB2YWx1ZTogZGVzZXJpYWxpemUoZW50cnkuam9pbignPScpKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbnZhciB1cGRhdGVTZWFyY2hQYXJhbXMgPSBmdW5jdGlvbiAocXVlcnkpIHtcbiAgdGhpcy5lbnRyaWVzLmxlbmd0aCA9IDA7XG4gIHBhcnNlU2VhcmNoUGFyYW1zKHRoaXMuZW50cmllcywgcXVlcnkpO1xufTtcblxudmFyIHZhbGlkYXRlQXJndW1lbnRzTGVuZ3RoID0gZnVuY3Rpb24gKHBhc3NlZCwgcmVxdWlyZWQpIHtcbiAgaWYgKHBhc3NlZCA8IHJlcXVpcmVkKSB0aHJvdyBUeXBlRXJyb3IoJ05vdCBlbm91Z2ggYXJndW1lbnRzJyk7XG59O1xuXG52YXIgVVJMU2VhcmNoUGFyYW1zSXRlcmF0b3IgPSBjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yKGZ1bmN0aW9uIEl0ZXJhdG9yKHBhcmFtcywga2luZCkge1xuICBzZXRJbnRlcm5hbFN0YXRlKHRoaXMsIHtcbiAgICB0eXBlOiBVUkxfU0VBUkNIX1BBUkFNU19JVEVSQVRPUixcbiAgICBpdGVyYXRvcjogZ2V0SXRlcmF0b3IoZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZShwYXJhbXMpLmVudHJpZXMpLFxuICAgIGtpbmQ6IGtpbmRcbiAgfSk7XG59LCAnSXRlcmF0b3InLCBmdW5jdGlvbiBuZXh0KCkge1xuICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbEl0ZXJhdG9yU3RhdGUodGhpcyk7XG4gIHZhciBraW5kID0gc3RhdGUua2luZDtcbiAgdmFyIHN0ZXAgPSBzdGF0ZS5pdGVyYXRvci5uZXh0KCk7XG4gIHZhciBlbnRyeSA9IHN0ZXAudmFsdWU7XG4gIGlmICghc3RlcC5kb25lKSB7XG4gICAgc3RlcC52YWx1ZSA9IGtpbmQgPT09ICdrZXlzJyA/IGVudHJ5LmtleSA6IGtpbmQgPT09ICd2YWx1ZXMnID8gZW50cnkudmFsdWUgOiBbZW50cnkua2V5LCBlbnRyeS52YWx1ZV07XG4gIH0gcmV0dXJuIHN0ZXA7XG59KTtcblxuLy8gYFVSTFNlYXJjaFBhcmFtc2AgY29uc3RydWN0b3Jcbi8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jaW50ZXJmYWNlLXVybHNlYXJjaHBhcmFtc1xudmFyIFVSTFNlYXJjaFBhcmFtc0NvbnN0cnVjdG9yID0gZnVuY3Rpb24gVVJMU2VhcmNoUGFyYW1zKC8qIGluaXQgKi8pIHtcbiAgYW5JbnN0YW5jZSh0aGlzLCBVUkxTZWFyY2hQYXJhbXNDb25zdHJ1Y3RvciwgVVJMX1NFQVJDSF9QQVJBTVMpO1xuICB2YXIgaW5pdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkO1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHZhciBlbnRyaWVzID0gW107XG4gIHZhciBpdGVyYXRvck1ldGhvZCwgaXRlcmF0b3IsIG5leHQsIHN0ZXAsIGVudHJ5SXRlcmF0b3IsIGVudHJ5TmV4dCwgZmlyc3QsIHNlY29uZCwga2V5O1xuXG4gIHNldEludGVybmFsU3RhdGUodGhhdCwge1xuICAgIHR5cGU6IFVSTF9TRUFSQ0hfUEFSQU1TLFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgdXBkYXRlVVJMOiBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sXG4gICAgdXBkYXRlU2VhcmNoUGFyYW1zOiB1cGRhdGVTZWFyY2hQYXJhbXNcbiAgfSk7XG5cbiAgaWYgKGluaXQgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChpc09iamVjdChpbml0KSkge1xuICAgICAgaXRlcmF0b3JNZXRob2QgPSBnZXRJdGVyYXRvck1ldGhvZChpbml0KTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICBpdGVyYXRvciA9IGdldEl0ZXJhdG9yKGluaXQsIGl0ZXJhdG9yTWV0aG9kKTtcbiAgICAgICAgbmV4dCA9IGl0ZXJhdG9yLm5leHQ7XG4gICAgICAgIHdoaWxlICghKHN0ZXAgPSBuZXh0LmNhbGwoaXRlcmF0b3IpKS5kb25lKSB7XG4gICAgICAgICAgZW50cnlJdGVyYXRvciA9IGdldEl0ZXJhdG9yKGFuT2JqZWN0KHN0ZXAudmFsdWUpKTtcbiAgICAgICAgICBlbnRyeU5leHQgPSBlbnRyeUl0ZXJhdG9yLm5leHQ7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgKGZpcnN0ID0gZW50cnlOZXh0LmNhbGwoZW50cnlJdGVyYXRvcikpLmRvbmUgfHxcbiAgICAgICAgICAgIChzZWNvbmQgPSBlbnRyeU5leHQuY2FsbChlbnRyeUl0ZXJhdG9yKSkuZG9uZSB8fFxuICAgICAgICAgICAgIWVudHJ5TmV4dC5jYWxsKGVudHJ5SXRlcmF0b3IpLmRvbmVcbiAgICAgICAgICApIHRocm93IFR5cGVFcnJvcignRXhwZWN0ZWQgc2VxdWVuY2Ugd2l0aCBsZW5ndGggMicpO1xuICAgICAgICAgIGVudHJpZXMucHVzaCh7IGtleTogJHRvU3RyaW5nKGZpcnN0LnZhbHVlKSwgdmFsdWU6ICR0b1N0cmluZyhzZWNvbmQudmFsdWUpIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgZm9yIChrZXkgaW4gaW5pdCkgaWYgKGhhc093bihpbml0LCBrZXkpKSBlbnRyaWVzLnB1c2goeyBrZXk6IGtleSwgdmFsdWU6ICR0b1N0cmluZyhpbml0W2tleV0pIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXJzZVNlYXJjaFBhcmFtcyhcbiAgICAgICAgZW50cmllcyxcbiAgICAgICAgdHlwZW9mIGluaXQgPT09ICdzdHJpbmcnID8gaW5pdC5jaGFyQXQoMCkgPT09ICc/JyA/IGluaXQuc2xpY2UoMSkgOiBpbml0IDogJHRvU3RyaW5nKGluaXQpXG4gICAgICApO1xuICAgIH1cbiAgfVxufTtcblxudmFyIFVSTFNlYXJjaFBhcmFtc1Byb3RvdHlwZSA9IFVSTFNlYXJjaFBhcmFtc0NvbnN0cnVjdG9yLnByb3RvdHlwZTtcblxucmVkZWZpbmVBbGwoVVJMU2VhcmNoUGFyYW1zUHJvdG90eXBlLCB7XG4gIC8vIGBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmFwcGVuZGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybHNlYXJjaHBhcmFtcy1hcHBlbmRcbiAgYXBwZW5kOiBmdW5jdGlvbiBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aChhcmd1bWVudHMubGVuZ3RoLCAyKTtcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFBhcmFtc1N0YXRlKHRoaXMpO1xuICAgIHN0YXRlLmVudHJpZXMucHVzaCh7IGtleTogJHRvU3RyaW5nKG5hbWUpLCB2YWx1ZTogJHRvU3RyaW5nKHZhbHVlKSB9KTtcbiAgICBzdGF0ZS51cGRhdGVVUkwoKTtcbiAgfSxcbiAgLy8gYFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuZGVsZXRlYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsc2VhcmNocGFyYW1zLWRlbGV0ZVxuICAnZGVsZXRlJzogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aChhcmd1bWVudHMubGVuZ3RoLCAxKTtcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFBhcmFtc1N0YXRlKHRoaXMpO1xuICAgIHZhciBlbnRyaWVzID0gc3RhdGUuZW50cmllcztcbiAgICB2YXIga2V5ID0gJHRvU3RyaW5nKG5hbWUpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgd2hpbGUgKGluZGV4IDwgZW50cmllcy5sZW5ndGgpIHtcbiAgICAgIGlmIChlbnRyaWVzW2luZGV4XS5rZXkgPT09IGtleSkgZW50cmllcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgZWxzZSBpbmRleCsrO1xuICAgIH1cbiAgICBzdGF0ZS51cGRhdGVVUkwoKTtcbiAgfSxcbiAgLy8gYFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuZ2V0YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsc2VhcmNocGFyYW1zLWdldFxuICBnZXQ6IGZ1bmN0aW9uIGdldChuYW1lKSB7XG4gICAgdmFsaWRhdGVBcmd1bWVudHNMZW5ndGgoYXJndW1lbnRzLmxlbmd0aCwgMSk7XG4gICAgdmFyIGVudHJpZXMgPSBnZXRJbnRlcm5hbFBhcmFtc1N0YXRlKHRoaXMpLmVudHJpZXM7XG4gICAgdmFyIGtleSA9ICR0b1N0cmluZyhuYW1lKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGZvciAoOyBpbmRleCA8IGVudHJpZXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICBpZiAoZW50cmllc1tpbmRleF0ua2V5ID09PSBrZXkpIHJldHVybiBlbnRyaWVzW2luZGV4XS52YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sXG4gIC8vIGBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmdldEFsbGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybHNlYXJjaHBhcmFtcy1nZXRhbGxcbiAgZ2V0QWxsOiBmdW5jdGlvbiBnZXRBbGwobmFtZSkge1xuICAgIHZhbGlkYXRlQXJndW1lbnRzTGVuZ3RoKGFyZ3VtZW50cy5sZW5ndGgsIDEpO1xuICAgIHZhciBlbnRyaWVzID0gZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZSh0aGlzKS5lbnRyaWVzO1xuICAgIHZhciBrZXkgPSAkdG9TdHJpbmcobmFtZSk7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgZm9yICg7IGluZGV4IDwgZW50cmllcy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIGlmIChlbnRyaWVzW2luZGV4XS5rZXkgPT09IGtleSkgcmVzdWx0LnB1c2goZW50cmllc1tpbmRleF0udmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuICAvLyBgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5oYXNgIG1ldGhvZFxuICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmxzZWFyY2hwYXJhbXMtaGFzXG4gIGhhczogZnVuY3Rpb24gaGFzKG5hbWUpIHtcbiAgICB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aChhcmd1bWVudHMubGVuZ3RoLCAxKTtcbiAgICB2YXIgZW50cmllcyA9IGdldEludGVybmFsUGFyYW1zU3RhdGUodGhpcykuZW50cmllcztcbiAgICB2YXIga2V5ID0gJHRvU3RyaW5nKG5hbWUpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgd2hpbGUgKGluZGV4IDwgZW50cmllcy5sZW5ndGgpIHtcbiAgICAgIGlmIChlbnRyaWVzW2luZGV4KytdLmtleSA9PT0ga2V5KSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuICAvLyBgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5zZXRgIG1ldGhvZFxuICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmxzZWFyY2hwYXJhbXMtc2V0XG4gIHNldDogZnVuY3Rpb24gc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgdmFsaWRhdGVBcmd1bWVudHNMZW5ndGgoYXJndW1lbnRzLmxlbmd0aCwgMSk7XG4gICAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZSh0aGlzKTtcbiAgICB2YXIgZW50cmllcyA9IHN0YXRlLmVudHJpZXM7XG4gICAgdmFyIGZvdW5kID0gZmFsc2U7XG4gICAgdmFyIGtleSA9ICR0b1N0cmluZyhuYW1lKTtcbiAgICB2YXIgdmFsID0gJHRvU3RyaW5nKHZhbHVlKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBlbnRyeTtcbiAgICBmb3IgKDsgaW5kZXggPCBlbnRyaWVzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICAgIGlmIChlbnRyeS5rZXkgPT09IGtleSkge1xuICAgICAgICBpZiAoZm91bmQpIGVudHJpZXMuc3BsaWNlKGluZGV4LS0sIDEpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgZW50cnkudmFsdWUgPSB2YWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKCFmb3VuZCkgZW50cmllcy5wdXNoKHsga2V5OiBrZXksIHZhbHVlOiB2YWwgfSk7XG4gICAgc3RhdGUudXBkYXRlVVJMKCk7XG4gIH0sXG4gIC8vIGBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLnNvcnRgIG1ldGhvZFxuICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmxzZWFyY2hwYXJhbXMtc29ydFxuICBzb3J0OiBmdW5jdGlvbiBzb3J0KCkge1xuICAgIHZhciBzdGF0ZSA9IGdldEludGVybmFsUGFyYW1zU3RhdGUodGhpcyk7XG4gICAgdmFyIGVudHJpZXMgPSBzdGF0ZS5lbnRyaWVzO1xuICAgIC8vIEFycmF5I3NvcnQgaXMgbm90IHN0YWJsZSBpbiBzb21lIGVuZ2luZXNcbiAgICB2YXIgc2xpY2UgPSBlbnRyaWVzLnNsaWNlKCk7XG4gICAgdmFyIGVudHJ5LCBlbnRyaWVzSW5kZXgsIHNsaWNlSW5kZXg7XG4gICAgZW50cmllcy5sZW5ndGggPSAwO1xuICAgIGZvciAoc2xpY2VJbmRleCA9IDA7IHNsaWNlSW5kZXggPCBzbGljZS5sZW5ndGg7IHNsaWNlSW5kZXgrKykge1xuICAgICAgZW50cnkgPSBzbGljZVtzbGljZUluZGV4XTtcbiAgICAgIGZvciAoZW50cmllc0luZGV4ID0gMDsgZW50cmllc0luZGV4IDwgc2xpY2VJbmRleDsgZW50cmllc0luZGV4KyspIHtcbiAgICAgICAgaWYgKGVudHJpZXNbZW50cmllc0luZGV4XS5rZXkgPiBlbnRyeS5rZXkpIHtcbiAgICAgICAgICBlbnRyaWVzLnNwbGljZShlbnRyaWVzSW5kZXgsIDAsIGVudHJ5KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGVudHJpZXNJbmRleCA9PT0gc2xpY2VJbmRleCkgZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICB9XG4gICAgc3RhdGUudXBkYXRlVVJMKCk7XG4gIH0sXG4gIC8vIGBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmZvckVhY2hgIG1ldGhvZFxuICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHZhciBlbnRyaWVzID0gZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZSh0aGlzKS5lbnRyaWVzO1xuICAgIHZhciBib3VuZEZ1bmN0aW9uID0gYmluZChjYWxsYmFjaywgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGVudHJ5O1xuICAgIHdoaWxlIChpbmRleCA8IGVudHJpZXMubGVuZ3RoKSB7XG4gICAgICBlbnRyeSA9IGVudHJpZXNbaW5kZXgrK107XG4gICAgICBib3VuZEZ1bmN0aW9uKGVudHJ5LnZhbHVlLCBlbnRyeS5rZXksIHRoaXMpO1xuICAgIH1cbiAgfSxcbiAgLy8gYFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUua2V5c2AgbWV0aG9kXG4gIGtleXM6IGZ1bmN0aW9uIGtleXMoKSB7XG4gICAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXNJdGVyYXRvcih0aGlzLCAna2V5cycpO1xuICB9LFxuICAvLyBgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS52YWx1ZXNgIG1ldGhvZFxuICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcygpIHtcbiAgICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtc0l0ZXJhdG9yKHRoaXMsICd2YWx1ZXMnKTtcbiAgfSxcbiAgLy8gYFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuZW50cmllc2AgbWV0aG9kXG4gIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoKSB7XG4gICAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXNJdGVyYXRvcih0aGlzLCAnZW50cmllcycpO1xuICB9XG59LCB7IGVudW1lcmFibGU6IHRydWUgfSk7XG5cbi8vIGBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlW0BAaXRlcmF0b3JdYCBtZXRob2RcbnJlZGVmaW5lKFVSTFNlYXJjaFBhcmFtc1Byb3RvdHlwZSwgSVRFUkFUT1IsIFVSTFNlYXJjaFBhcmFtc1Byb3RvdHlwZS5lbnRyaWVzLCB7IG5hbWU6ICdlbnRyaWVzJyB9KTtcblxuLy8gYFVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUudG9TdHJpbmdgIG1ldGhvZFxuLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmxzZWFyY2hwYXJhbXMtc3RyaW5naWZpY2F0aW9uLWJlaGF2aW9yXG5yZWRlZmluZShVUkxTZWFyY2hQYXJhbXNQcm90b3R5cGUsICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICB2YXIgZW50cmllcyA9IGdldEludGVybmFsUGFyYW1zU3RhdGUodGhpcykuZW50cmllcztcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgZW50cnk7XG4gIHdoaWxlIChpbmRleCA8IGVudHJpZXMubGVuZ3RoKSB7XG4gICAgZW50cnkgPSBlbnRyaWVzW2luZGV4KytdO1xuICAgIHJlc3VsdC5wdXNoKHNlcmlhbGl6ZShlbnRyeS5rZXkpICsgJz0nICsgc2VyaWFsaXplKGVudHJ5LnZhbHVlKSk7XG4gIH0gcmV0dXJuIHJlc3VsdC5qb2luKCcmJyk7XG59LCB7IGVudW1lcmFibGU6IHRydWUgfSk7XG5cbnNldFRvU3RyaW5nVGFnKFVSTFNlYXJjaFBhcmFtc0NvbnN0cnVjdG9yLCBVUkxfU0VBUkNIX1BBUkFNUyk7XG5cbiQoeyBnbG9iYWw6IHRydWUsIGZvcmNlZDogIVVTRV9OQVRJVkVfVVJMIH0sIHtcbiAgVVJMU2VhcmNoUGFyYW1zOiBVUkxTZWFyY2hQYXJhbXNDb25zdHJ1Y3RvclxufSk7XG5cbi8vIFdyYXAgYGZldGNoYCBhbmQgYFJlcXVlc3RgIGZvciBjb3JyZWN0IHdvcmsgd2l0aCBwb2x5ZmlsbGVkIGBVUkxTZWFyY2hQYXJhbXNgXG5pZiAoIVVTRV9OQVRJVkVfVVJMICYmIGlzQ2FsbGFibGUoSGVhZGVycykpIHtcbiAgdmFyIHdyYXBSZXF1ZXN0T3B0aW9ucyA9IGZ1bmN0aW9uIChpbml0KSB7XG4gICAgaWYgKGlzT2JqZWN0KGluaXQpKSB7XG4gICAgICB2YXIgYm9keSA9IGluaXQuYm9keTtcbiAgICAgIHZhciBoZWFkZXJzO1xuICAgICAgaWYgKGNsYXNzb2YoYm9keSkgPT09IFVSTF9TRUFSQ0hfUEFSQU1TKSB7XG4gICAgICAgIGhlYWRlcnMgPSBpbml0LmhlYWRlcnMgPyBuZXcgSGVhZGVycyhpbml0LmhlYWRlcnMpIDogbmV3IEhlYWRlcnMoKTtcbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhcygnY29udGVudC10eXBlJykpIHtcbiAgICAgICAgICBoZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNyZWF0ZShpbml0LCB7XG4gICAgICAgICAgYm9keTogY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIFN0cmluZyhib2R5KSksXG4gICAgICAgICAgaGVhZGVyczogY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIGhlYWRlcnMpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gcmV0dXJuIGluaXQ7XG4gIH07XG5cbiAgaWYgKGlzQ2FsbGFibGUobmF0aXZlRmV0Y2gpKSB7XG4gICAgJCh7IGdsb2JhbDogdHJ1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgZm9yY2VkOiB0cnVlIH0sIHtcbiAgICAgIGZldGNoOiBmdW5jdGlvbiBmZXRjaChpbnB1dCAvKiAsIGluaXQgKi8pIHtcbiAgICAgICAgcmV0dXJuIG5hdGl2ZUZldGNoKGlucHV0LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHdyYXBSZXF1ZXN0T3B0aW9ucyhhcmd1bWVudHNbMV0pIDoge30pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKGlzQ2FsbGFibGUoTmF0aXZlUmVxdWVzdCkpIHtcbiAgICB2YXIgUmVxdWVzdENvbnN0cnVjdG9yID0gZnVuY3Rpb24gUmVxdWVzdChpbnB1dCAvKiAsIGluaXQgKi8pIHtcbiAgICAgIGFuSW5zdGFuY2UodGhpcywgUmVxdWVzdENvbnN0cnVjdG9yLCAnUmVxdWVzdCcpO1xuICAgICAgcmV0dXJuIG5ldyBOYXRpdmVSZXF1ZXN0KGlucHV0LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHdyYXBSZXF1ZXN0T3B0aW9ucyhhcmd1bWVudHNbMV0pIDoge30pO1xuICAgIH07XG5cbiAgICBSZXF1ZXN0UHJvdG90eXBlLmNvbnN0cnVjdG9yID0gUmVxdWVzdENvbnN0cnVjdG9yO1xuICAgIFJlcXVlc3RDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBSZXF1ZXN0UHJvdG90eXBlO1xuXG4gICAgJCh7IGdsb2JhbDogdHJ1ZSwgZm9yY2VkOiB0cnVlIH0sIHtcbiAgICAgIFJlcXVlc3Q6IFJlcXVlc3RDb25zdHJ1Y3RvclxuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBVUkxTZWFyY2hQYXJhbXM6IFVSTFNlYXJjaFBhcmFtc0NvbnN0cnVjdG9yLFxuICBnZXRTdGF0ZTogZ2V0SW50ZXJuYWxQYXJhbXNTdGF0ZVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIFRPRE86IGluIGNvcmUtanNANCwgbW92ZSAvbW9kdWxlcy8gZGVwZW5kZW5jaWVzIHRvIHB1YmxpYyBlbnRyaWVzIGZvciBiZXR0ZXIgb3B0aW1pemF0aW9uIGJ5IHRvb2xzIGxpa2UgYHByZXNldC1lbnZgXG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvcicpO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBVU0VfTkFUSVZFX1VSTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9uYXRpdmUtdXJsJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGRlZmluZVByb3BlcnRpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0aWVzJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVkZWZpbmUnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnbicpO1xudmFyIGFycmF5RnJvbSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1mcm9tJyk7XG52YXIgY29kZUF0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGUnKS5jb2RlQXQ7XG52YXIgdG9BU0NJSSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctcHVueWNvZGUtdG8tYXNjaWknKTtcbnZhciAkdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBVUkxTZWFyY2hQYXJhbXNNb2R1bGUgPSByZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi51cmwtc2VhcmNoLXBhcmFtcycpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcblxudmFyIE5hdGl2ZVVSTCA9IGdsb2JhbC5VUkw7XG52YXIgVVJMU2VhcmNoUGFyYW1zID0gVVJMU2VhcmNoUGFyYW1zTW9kdWxlLlVSTFNlYXJjaFBhcmFtcztcbnZhciBnZXRJbnRlcm5hbFNlYXJjaFBhcmFtc1N0YXRlID0gVVJMU2VhcmNoUGFyYW1zTW9kdWxlLmdldFN0YXRlO1xudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBnZXRJbnRlcm5hbFVSTFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXR0ZXJGb3IoJ1VSTCcpO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBwb3cgPSBNYXRoLnBvdztcblxudmFyIElOVkFMSURfQVVUSE9SSVRZID0gJ0ludmFsaWQgYXV0aG9yaXR5JztcbnZhciBJTlZBTElEX1NDSEVNRSA9ICdJbnZhbGlkIHNjaGVtZSc7XG52YXIgSU5WQUxJRF9IT1NUID0gJ0ludmFsaWQgaG9zdCc7XG52YXIgSU5WQUxJRF9QT1JUID0gJ0ludmFsaWQgcG9ydCc7XG5cbnZhciBBTFBIQSA9IC9bYS16XS9pO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1vYnNjdXJlLXJhbmdlIC0tIHNhZmVcbnZhciBBTFBIQU5VTUVSSUMgPSAvW1xcZCstLmEtel0vaTtcbnZhciBESUdJVCA9IC9cXGQvO1xudmFyIEhFWF9TVEFSVCA9IC9eMHgvaTtcbnZhciBPQ1QgPSAvXlswLTddKyQvO1xudmFyIERFQyA9IC9eXFxkKyQvO1xudmFyIEhFWCA9IC9eW1xcZGEtZl0rJC9pO1xuLyogZXNsaW50LWRpc2FibGUgcmVnZXhwL25vLWNvbnRyb2wtY2hhcmFjdGVyIC0tIHNhZmUgKi9cbnZhciBGT1JCSURERU5fSE9TVF9DT0RFX1BPSU5UID0gL1tcXDBcXHRcXG5cXHIgIyUvOjw+P0BbXFxcXFxcXV58XS87XG52YXIgRk9SQklEREVOX0hPU1RfQ09ERV9QT0lOVF9FWENMVURJTkdfUEVSQ0VOVCA9IC9bXFwwXFx0XFxuXFxyICMvOjw+P0BbXFxcXFxcXV58XS87XG52YXIgTEVBRElOR19BTkRfVFJBSUxJTkdfQzBfQ09OVFJPTF9PUl9TUEFDRSA9IC9eW1xcdTAwMDAtXFx1MDAyMF0rfFtcXHUwMDAwLVxcdTAwMjBdKyQvZztcbnZhciBUQUJfQU5EX05FV19MSU5FID0gL1tcXHRcXG5cXHJdL2c7XG4vKiBlc2xpbnQtZW5hYmxlIHJlZ2V4cC9uby1jb250cm9sLWNoYXJhY3RlciAtLSBzYWZlICovXG52YXIgRU9GO1xuXG52YXIgcGFyc2VIb3N0ID0gZnVuY3Rpb24gKHVybCwgaW5wdXQpIHtcbiAgdmFyIHJlc3VsdCwgY29kZVBvaW50cywgaW5kZXg7XG4gIGlmIChpbnB1dC5jaGFyQXQoMCkgPT0gJ1snKSB7XG4gICAgaWYgKGlucHV0LmNoYXJBdChpbnB1dC5sZW5ndGggLSAxKSAhPSAnXScpIHJldHVybiBJTlZBTElEX0hPU1Q7XG4gICAgcmVzdWx0ID0gcGFyc2VJUHY2KGlucHV0LnNsaWNlKDEsIC0xKSk7XG4gICAgaWYgKCFyZXN1bHQpIHJldHVybiBJTlZBTElEX0hPU1Q7XG4gICAgdXJsLmhvc3QgPSByZXN1bHQ7XG4gIC8vIG9wYXF1ZSBob3N0XG4gIH0gZWxzZSBpZiAoIWlzU3BlY2lhbCh1cmwpKSB7XG4gICAgaWYgKEZPUkJJRERFTl9IT1NUX0NPREVfUE9JTlRfRVhDTFVESU5HX1BFUkNFTlQudGVzdChpbnB1dCkpIHJldHVybiBJTlZBTElEX0hPU1Q7XG4gICAgcmVzdWx0ID0gJyc7XG4gICAgY29kZVBvaW50cyA9IGFycmF5RnJvbShpbnB1dCk7XG4gICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgY29kZVBvaW50cy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIHJlc3VsdCArPSBwZXJjZW50RW5jb2RlKGNvZGVQb2ludHNbaW5kZXhdLCBDMENvbnRyb2xQZXJjZW50RW5jb2RlU2V0KTtcbiAgICB9XG4gICAgdXJsLmhvc3QgPSByZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgaW5wdXQgPSB0b0FTQ0lJKGlucHV0KTtcbiAgICBpZiAoRk9SQklEREVOX0hPU1RfQ09ERV9QT0lOVC50ZXN0KGlucHV0KSkgcmV0dXJuIElOVkFMSURfSE9TVDtcbiAgICByZXN1bHQgPSBwYXJzZUlQdjQoaW5wdXQpO1xuICAgIGlmIChyZXN1bHQgPT09IG51bGwpIHJldHVybiBJTlZBTElEX0hPU1Q7XG4gICAgdXJsLmhvc3QgPSByZXN1bHQ7XG4gIH1cbn07XG5cbnZhciBwYXJzZUlQdjQgPSBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgdmFyIHBhcnRzID0gaW5wdXQuc3BsaXQoJy4nKTtcbiAgdmFyIHBhcnRzTGVuZ3RoLCBudW1iZXJzLCBpbmRleCwgcGFydCwgcmFkaXgsIG51bWJlciwgaXB2NDtcbiAgaWYgKHBhcnRzLmxlbmd0aCAmJiBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXSA9PSAnJykge1xuICAgIHBhcnRzLnBvcCgpO1xuICB9XG4gIHBhcnRzTGVuZ3RoID0gcGFydHMubGVuZ3RoO1xuICBpZiAocGFydHNMZW5ndGggPiA0KSByZXR1cm4gaW5wdXQ7XG4gIG51bWJlcnMgPSBbXTtcbiAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgcGFydHNMZW5ndGg7IGluZGV4KyspIHtcbiAgICBwYXJ0ID0gcGFydHNbaW5kZXhdO1xuICAgIGlmIChwYXJ0ID09ICcnKSByZXR1cm4gaW5wdXQ7XG4gICAgcmFkaXggPSAxMDtcbiAgICBpZiAocGFydC5sZW5ndGggPiAxICYmIHBhcnQuY2hhckF0KDApID09ICcwJykge1xuICAgICAgcmFkaXggPSBIRVhfU1RBUlQudGVzdChwYXJ0KSA/IDE2IDogODtcbiAgICAgIHBhcnQgPSBwYXJ0LnNsaWNlKHJhZGl4ID09IDggPyAxIDogMik7XG4gICAgfVxuICAgIGlmIChwYXJ0ID09PSAnJykge1xuICAgICAgbnVtYmVyID0gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCEocmFkaXggPT0gMTAgPyBERUMgOiByYWRpeCA9PSA4ID8gT0NUIDogSEVYKS50ZXN0KHBhcnQpKSByZXR1cm4gaW5wdXQ7XG4gICAgICBudW1iZXIgPSBwYXJzZUludChwYXJ0LCByYWRpeCk7XG4gICAgfVxuICAgIG51bWJlcnMucHVzaChudW1iZXIpO1xuICB9XG4gIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IHBhcnRzTGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgbnVtYmVyID0gbnVtYmVyc1tpbmRleF07XG4gICAgaWYgKGluZGV4ID09IHBhcnRzTGVuZ3RoIC0gMSkge1xuICAgICAgaWYgKG51bWJlciA+PSBwb3coMjU2LCA1IC0gcGFydHNMZW5ndGgpKSByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2UgaWYgKG51bWJlciA+IDI1NSkgcmV0dXJuIG51bGw7XG4gIH1cbiAgaXB2NCA9IG51bWJlcnMucG9wKCk7XG4gIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IG51bWJlcnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgaXB2NCArPSBudW1iZXJzW2luZGV4XSAqIHBvdygyNTYsIDMgLSBpbmRleCk7XG4gIH1cbiAgcmV0dXJuIGlwdjQ7XG59O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXN0YXRlbWVudHMgLS0gVE9ET1xudmFyIHBhcnNlSVB2NiA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICB2YXIgYWRkcmVzcyA9IFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXTtcbiAgdmFyIHBpZWNlSW5kZXggPSAwO1xuICB2YXIgY29tcHJlc3MgPSBudWxsO1xuICB2YXIgcG9pbnRlciA9IDA7XG4gIHZhciB2YWx1ZSwgbGVuZ3RoLCBudW1iZXJzU2VlbiwgaXB2NFBpZWNlLCBudW1iZXIsIHN3YXBzLCBzd2FwO1xuXG4gIHZhciBjaHIgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGlucHV0LmNoYXJBdChwb2ludGVyKTtcbiAgfTtcblxuICBpZiAoY2hyKCkgPT0gJzonKSB7XG4gICAgaWYgKGlucHV0LmNoYXJBdCgxKSAhPSAnOicpIHJldHVybjtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgcGllY2VJbmRleCsrO1xuICAgIGNvbXByZXNzID0gcGllY2VJbmRleDtcbiAgfVxuICB3aGlsZSAoY2hyKCkpIHtcbiAgICBpZiAocGllY2VJbmRleCA9PSA4KSByZXR1cm47XG4gICAgaWYgKGNocigpID09ICc6Jykge1xuICAgICAgaWYgKGNvbXByZXNzICE9PSBudWxsKSByZXR1cm47XG4gICAgICBwb2ludGVyKys7XG4gICAgICBwaWVjZUluZGV4Kys7XG4gICAgICBjb21wcmVzcyA9IHBpZWNlSW5kZXg7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgdmFsdWUgPSBsZW5ndGggPSAwO1xuICAgIHdoaWxlIChsZW5ndGggPCA0ICYmIEhFWC50ZXN0KGNocigpKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZSAqIDE2ICsgcGFyc2VJbnQoY2hyKCksIDE2KTtcbiAgICAgIHBvaW50ZXIrKztcbiAgICAgIGxlbmd0aCsrO1xuICAgIH1cbiAgICBpZiAoY2hyKCkgPT0gJy4nKSB7XG4gICAgICBpZiAobGVuZ3RoID09IDApIHJldHVybjtcbiAgICAgIHBvaW50ZXIgLT0gbGVuZ3RoO1xuICAgICAgaWYgKHBpZWNlSW5kZXggPiA2KSByZXR1cm47XG4gICAgICBudW1iZXJzU2VlbiA9IDA7XG4gICAgICB3aGlsZSAoY2hyKCkpIHtcbiAgICAgICAgaXB2NFBpZWNlID0gbnVsbDtcbiAgICAgICAgaWYgKG51bWJlcnNTZWVuID4gMCkge1xuICAgICAgICAgIGlmIChjaHIoKSA9PSAnLicgJiYgbnVtYmVyc1NlZW4gPCA0KSBwb2ludGVyKys7XG4gICAgICAgICAgZWxzZSByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFESUdJVC50ZXN0KGNocigpKSkgcmV0dXJuO1xuICAgICAgICB3aGlsZSAoRElHSVQudGVzdChjaHIoKSkpIHtcbiAgICAgICAgICBudW1iZXIgPSBwYXJzZUludChjaHIoKSwgMTApO1xuICAgICAgICAgIGlmIChpcHY0UGllY2UgPT09IG51bGwpIGlwdjRQaWVjZSA9IG51bWJlcjtcbiAgICAgICAgICBlbHNlIGlmIChpcHY0UGllY2UgPT0gMCkgcmV0dXJuO1xuICAgICAgICAgIGVsc2UgaXB2NFBpZWNlID0gaXB2NFBpZWNlICogMTAgKyBudW1iZXI7XG4gICAgICAgICAgaWYgKGlwdjRQaWVjZSA+IDI1NSkgcmV0dXJuO1xuICAgICAgICAgIHBvaW50ZXIrKztcbiAgICAgICAgfVxuICAgICAgICBhZGRyZXNzW3BpZWNlSW5kZXhdID0gYWRkcmVzc1twaWVjZUluZGV4XSAqIDI1NiArIGlwdjRQaWVjZTtcbiAgICAgICAgbnVtYmVyc1NlZW4rKztcbiAgICAgICAgaWYgKG51bWJlcnNTZWVuID09IDIgfHwgbnVtYmVyc1NlZW4gPT0gNCkgcGllY2VJbmRleCsrO1xuICAgICAgfVxuICAgICAgaWYgKG51bWJlcnNTZWVuICE9IDQpIHJldHVybjtcbiAgICAgIGJyZWFrO1xuICAgIH0gZWxzZSBpZiAoY2hyKCkgPT0gJzonKSB7XG4gICAgICBwb2ludGVyKys7XG4gICAgICBpZiAoIWNocigpKSByZXR1cm47XG4gICAgfSBlbHNlIGlmIChjaHIoKSkgcmV0dXJuO1xuICAgIGFkZHJlc3NbcGllY2VJbmRleCsrXSA9IHZhbHVlO1xuICB9XG4gIGlmIChjb21wcmVzcyAhPT0gbnVsbCkge1xuICAgIHN3YXBzID0gcGllY2VJbmRleCAtIGNvbXByZXNzO1xuICAgIHBpZWNlSW5kZXggPSA3O1xuICAgIHdoaWxlIChwaWVjZUluZGV4ICE9IDAgJiYgc3dhcHMgPiAwKSB7XG4gICAgICBzd2FwID0gYWRkcmVzc1twaWVjZUluZGV4XTtcbiAgICAgIGFkZHJlc3NbcGllY2VJbmRleC0tXSA9IGFkZHJlc3NbY29tcHJlc3MgKyBzd2FwcyAtIDFdO1xuICAgICAgYWRkcmVzc1tjb21wcmVzcyArIC0tc3dhcHNdID0gc3dhcDtcbiAgICB9XG4gIH0gZWxzZSBpZiAocGllY2VJbmRleCAhPSA4KSByZXR1cm47XG4gIHJldHVybiBhZGRyZXNzO1xufTtcblxudmFyIGZpbmRMb25nZXN0WmVyb1NlcXVlbmNlID0gZnVuY3Rpb24gKGlwdjYpIHtcbiAgdmFyIG1heEluZGV4ID0gbnVsbDtcbiAgdmFyIG1heExlbmd0aCA9IDE7XG4gIHZhciBjdXJyU3RhcnQgPSBudWxsO1xuICB2YXIgY3Vyckxlbmd0aCA9IDA7XG4gIHZhciBpbmRleCA9IDA7XG4gIGZvciAoOyBpbmRleCA8IDg7IGluZGV4KyspIHtcbiAgICBpZiAoaXB2NltpbmRleF0gIT09IDApIHtcbiAgICAgIGlmIChjdXJyTGVuZ3RoID4gbWF4TGVuZ3RoKSB7XG4gICAgICAgIG1heEluZGV4ID0gY3VyclN0YXJ0O1xuICAgICAgICBtYXhMZW5ndGggPSBjdXJyTGVuZ3RoO1xuICAgICAgfVxuICAgICAgY3VyclN0YXJ0ID0gbnVsbDtcbiAgICAgIGN1cnJMZW5ndGggPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoY3VyclN0YXJ0ID09PSBudWxsKSBjdXJyU3RhcnQgPSBpbmRleDtcbiAgICAgICsrY3Vyckxlbmd0aDtcbiAgICB9XG4gIH1cbiAgaWYgKGN1cnJMZW5ndGggPiBtYXhMZW5ndGgpIHtcbiAgICBtYXhJbmRleCA9IGN1cnJTdGFydDtcbiAgICBtYXhMZW5ndGggPSBjdXJyTGVuZ3RoO1xuICB9XG4gIHJldHVybiBtYXhJbmRleDtcbn07XG5cbnZhciBzZXJpYWxpemVIb3N0ID0gZnVuY3Rpb24gKGhvc3QpIHtcbiAgdmFyIHJlc3VsdCwgaW5kZXgsIGNvbXByZXNzLCBpZ25vcmUwO1xuICAvLyBpcHY0XG4gIGlmICh0eXBlb2YgaG9zdCA9PSAnbnVtYmVyJykge1xuICAgIHJlc3VsdCA9IFtdO1xuICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IDQ7IGluZGV4KyspIHtcbiAgICAgIHJlc3VsdC51bnNoaWZ0KGhvc3QgJSAyNTYpO1xuICAgICAgaG9zdCA9IGZsb29yKGhvc3QgLyAyNTYpO1xuICAgIH0gcmV0dXJuIHJlc3VsdC5qb2luKCcuJyk7XG4gIC8vIGlwdjZcbiAgfSBlbHNlIGlmICh0eXBlb2YgaG9zdCA9PSAnb2JqZWN0Jykge1xuICAgIHJlc3VsdCA9ICcnO1xuICAgIGNvbXByZXNzID0gZmluZExvbmdlc3RaZXJvU2VxdWVuY2UoaG9zdCk7XG4gICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgODsgaW5kZXgrKykge1xuICAgICAgaWYgKGlnbm9yZTAgJiYgaG9zdFtpbmRleF0gPT09IDApIGNvbnRpbnVlO1xuICAgICAgaWYgKGlnbm9yZTApIGlnbm9yZTAgPSBmYWxzZTtcbiAgICAgIGlmIChjb21wcmVzcyA9PT0gaW5kZXgpIHtcbiAgICAgICAgcmVzdWx0ICs9IGluZGV4ID8gJzonIDogJzo6JztcbiAgICAgICAgaWdub3JlMCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgKz0gaG9zdFtpbmRleF0udG9TdHJpbmcoMTYpO1xuICAgICAgICBpZiAoaW5kZXggPCA3KSByZXN1bHQgKz0gJzonO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gJ1snICsgcmVzdWx0ICsgJ10nO1xuICB9IHJldHVybiBob3N0O1xufTtcblxudmFyIEMwQ29udHJvbFBlcmNlbnRFbmNvZGVTZXQgPSB7fTtcbnZhciBmcmFnbWVudFBlcmNlbnRFbmNvZGVTZXQgPSBhc3NpZ24oe30sIEMwQ29udHJvbFBlcmNlbnRFbmNvZGVTZXQsIHtcbiAgJyAnOiAxLCAnXCInOiAxLCAnPCc6IDEsICc+JzogMSwgJ2AnOiAxXG59KTtcbnZhciBwYXRoUGVyY2VudEVuY29kZVNldCA9IGFzc2lnbih7fSwgZnJhZ21lbnRQZXJjZW50RW5jb2RlU2V0LCB7XG4gICcjJzogMSwgJz8nOiAxLCAneyc6IDEsICd9JzogMVxufSk7XG52YXIgdXNlcmluZm9QZXJjZW50RW5jb2RlU2V0ID0gYXNzaWduKHt9LCBwYXRoUGVyY2VudEVuY29kZVNldCwge1xuICAnLyc6IDEsICc6JzogMSwgJzsnOiAxLCAnPSc6IDEsICdAJzogMSwgJ1snOiAxLCAnXFxcXCc6IDEsICddJzogMSwgJ14nOiAxLCAnfCc6IDFcbn0pO1xuXG52YXIgcGVyY2VudEVuY29kZSA9IGZ1bmN0aW9uIChjaHIsIHNldCkge1xuICB2YXIgY29kZSA9IGNvZGVBdChjaHIsIDApO1xuICByZXR1cm4gY29kZSA+IDB4MjAgJiYgY29kZSA8IDB4N0YgJiYgIWhhc093bihzZXQsIGNocikgPyBjaHIgOiBlbmNvZGVVUklDb21wb25lbnQoY2hyKTtcbn07XG5cbnZhciBzcGVjaWFsU2NoZW1lcyA9IHtcbiAgZnRwOiAyMSxcbiAgZmlsZTogbnVsbCxcbiAgaHR0cDogODAsXG4gIGh0dHBzOiA0NDMsXG4gIHdzOiA4MCxcbiAgd3NzOiA0NDNcbn07XG5cbnZhciBpc1NwZWNpYWwgPSBmdW5jdGlvbiAodXJsKSB7XG4gIHJldHVybiBoYXNPd24oc3BlY2lhbFNjaGVtZXMsIHVybC5zY2hlbWUpO1xufTtcblxudmFyIGluY2x1ZGVzQ3JlZGVudGlhbHMgPSBmdW5jdGlvbiAodXJsKSB7XG4gIHJldHVybiB1cmwudXNlcm5hbWUgIT0gJycgfHwgdXJsLnBhc3N3b3JkICE9ICcnO1xufTtcblxudmFyIGNhbm5vdEhhdmVVc2VybmFtZVBhc3N3b3JkUG9ydCA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgcmV0dXJuICF1cmwuaG9zdCB8fCB1cmwuY2Fubm90QmVBQmFzZVVSTCB8fCB1cmwuc2NoZW1lID09ICdmaWxlJztcbn07XG5cbnZhciBpc1dpbmRvd3NEcml2ZUxldHRlciA9IGZ1bmN0aW9uIChzdHJpbmcsIG5vcm1hbGl6ZWQpIHtcbiAgdmFyIHNlY29uZDtcbiAgcmV0dXJuIHN0cmluZy5sZW5ndGggPT0gMiAmJiBBTFBIQS50ZXN0KHN0cmluZy5jaGFyQXQoMCkpXG4gICAgJiYgKChzZWNvbmQgPSBzdHJpbmcuY2hhckF0KDEpKSA9PSAnOicgfHwgKCFub3JtYWxpemVkICYmIHNlY29uZCA9PSAnfCcpKTtcbn07XG5cbnZhciBzdGFydHNXaXRoV2luZG93c0RyaXZlTGV0dGVyID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgdGhpcmQ7XG4gIHJldHVybiBzdHJpbmcubGVuZ3RoID4gMSAmJiBpc1dpbmRvd3NEcml2ZUxldHRlcihzdHJpbmcuc2xpY2UoMCwgMikpICYmIChcbiAgICBzdHJpbmcubGVuZ3RoID09IDIgfHxcbiAgICAoKHRoaXJkID0gc3RyaW5nLmNoYXJBdCgyKSkgPT09ICcvJyB8fCB0aGlyZCA9PT0gJ1xcXFwnIHx8IHRoaXJkID09PSAnPycgfHwgdGhpcmQgPT09ICcjJylcbiAgKTtcbn07XG5cbnZhciBzaG9ydGVuVVJMc1BhdGggPSBmdW5jdGlvbiAodXJsKSB7XG4gIHZhciBwYXRoID0gdXJsLnBhdGg7XG4gIHZhciBwYXRoU2l6ZSA9IHBhdGgubGVuZ3RoO1xuICBpZiAocGF0aFNpemUgJiYgKHVybC5zY2hlbWUgIT0gJ2ZpbGUnIHx8IHBhdGhTaXplICE9IDEgfHwgIWlzV2luZG93c0RyaXZlTGV0dGVyKHBhdGhbMF0sIHRydWUpKSkge1xuICAgIHBhdGgucG9wKCk7XG4gIH1cbn07XG5cbnZhciBpc1NpbmdsZURvdCA9IGZ1bmN0aW9uIChzZWdtZW50KSB7XG4gIHJldHVybiBzZWdtZW50ID09PSAnLicgfHwgc2VnbWVudC50b0xvd2VyQ2FzZSgpID09PSAnJTJlJztcbn07XG5cbnZhciBpc0RvdWJsZURvdCA9IGZ1bmN0aW9uIChzZWdtZW50KSB7XG4gIHNlZ21lbnQgPSBzZWdtZW50LnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiBzZWdtZW50ID09PSAnLi4nIHx8IHNlZ21lbnQgPT09ICclMmUuJyB8fCBzZWdtZW50ID09PSAnLiUyZScgfHwgc2VnbWVudCA9PT0gJyUyZSUyZSc7XG59O1xuXG4vLyBTdGF0ZXM6XG52YXIgU0NIRU1FX1NUQVJUID0ge307XG52YXIgU0NIRU1FID0ge307XG52YXIgTk9fU0NIRU1FID0ge307XG52YXIgU1BFQ0lBTF9SRUxBVElWRV9PUl9BVVRIT1JJVFkgPSB7fTtcbnZhciBQQVRIX09SX0FVVEhPUklUWSA9IHt9O1xudmFyIFJFTEFUSVZFID0ge307XG52YXIgUkVMQVRJVkVfU0xBU0ggPSB7fTtcbnZhciBTUEVDSUFMX0FVVEhPUklUWV9TTEFTSEVTID0ge307XG52YXIgU1BFQ0lBTF9BVVRIT1JJVFlfSUdOT1JFX1NMQVNIRVMgPSB7fTtcbnZhciBBVVRIT1JJVFkgPSB7fTtcbnZhciBIT1NUID0ge307XG52YXIgSE9TVE5BTUUgPSB7fTtcbnZhciBQT1JUID0ge307XG52YXIgRklMRSA9IHt9O1xudmFyIEZJTEVfU0xBU0ggPSB7fTtcbnZhciBGSUxFX0hPU1QgPSB7fTtcbnZhciBQQVRIX1NUQVJUID0ge307XG52YXIgUEFUSCA9IHt9O1xudmFyIENBTk5PVF9CRV9BX0JBU0VfVVJMX1BBVEggPSB7fTtcbnZhciBRVUVSWSA9IHt9O1xudmFyIEZSQUdNRU5UID0ge307XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50cyAtLSBUT0RPXG52YXIgcGFyc2VVUkwgPSBmdW5jdGlvbiAodXJsLCBpbnB1dCwgc3RhdGVPdmVycmlkZSwgYmFzZSkge1xuICB2YXIgc3RhdGUgPSBzdGF0ZU92ZXJyaWRlIHx8IFNDSEVNRV9TVEFSVDtcbiAgdmFyIHBvaW50ZXIgPSAwO1xuICB2YXIgYnVmZmVyID0gJyc7XG4gIHZhciBzZWVuQXQgPSBmYWxzZTtcbiAgdmFyIHNlZW5CcmFja2V0ID0gZmFsc2U7XG4gIHZhciBzZWVuUGFzc3dvcmRUb2tlbiA9IGZhbHNlO1xuICB2YXIgY29kZVBvaW50cywgY2hyLCBidWZmZXJDb2RlUG9pbnRzLCBmYWlsdXJlO1xuXG4gIGlmICghc3RhdGVPdmVycmlkZSkge1xuICAgIHVybC5zY2hlbWUgPSAnJztcbiAgICB1cmwudXNlcm5hbWUgPSAnJztcbiAgICB1cmwucGFzc3dvcmQgPSAnJztcbiAgICB1cmwuaG9zdCA9IG51bGw7XG4gICAgdXJsLnBvcnQgPSBudWxsO1xuICAgIHVybC5wYXRoID0gW107XG4gICAgdXJsLnF1ZXJ5ID0gbnVsbDtcbiAgICB1cmwuZnJhZ21lbnQgPSBudWxsO1xuICAgIHVybC5jYW5ub3RCZUFCYXNlVVJMID0gZmFsc2U7XG4gICAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKExFQURJTkdfQU5EX1RSQUlMSU5HX0MwX0NPTlRST0xfT1JfU1BBQ0UsICcnKTtcbiAgfVxuXG4gIGlucHV0ID0gaW5wdXQucmVwbGFjZShUQUJfQU5EX05FV19MSU5FLCAnJyk7XG5cbiAgY29kZVBvaW50cyA9IGFycmF5RnJvbShpbnB1dCk7XG5cbiAgd2hpbGUgKHBvaW50ZXIgPD0gY29kZVBvaW50cy5sZW5ndGgpIHtcbiAgICBjaHIgPSBjb2RlUG9pbnRzW3BvaW50ZXJdO1xuICAgIHN3aXRjaCAoc3RhdGUpIHtcbiAgICAgIGNhc2UgU0NIRU1FX1NUQVJUOlxuICAgICAgICBpZiAoY2hyICYmIEFMUEhBLnRlc3QoY2hyKSkge1xuICAgICAgICAgIGJ1ZmZlciArPSBjaHIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICBzdGF0ZSA9IFNDSEVNRTtcbiAgICAgICAgfSBlbHNlIGlmICghc3RhdGVPdmVycmlkZSkge1xuICAgICAgICAgIHN0YXRlID0gTk9fU0NIRU1FO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGVsc2UgcmV0dXJuIElOVkFMSURfU0NIRU1FO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBTQ0hFTUU6XG4gICAgICAgIGlmIChjaHIgJiYgKEFMUEhBTlVNRVJJQy50ZXN0KGNocikgfHwgY2hyID09ICcrJyB8fCBjaHIgPT0gJy0nIHx8IGNociA9PSAnLicpKSB7XG4gICAgICAgICAgYnVmZmVyICs9IGNoci50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnOicpIHtcbiAgICAgICAgICBpZiAoc3RhdGVPdmVycmlkZSAmJiAoXG4gICAgICAgICAgICAoaXNTcGVjaWFsKHVybCkgIT0gaGFzT3duKHNwZWNpYWxTY2hlbWVzLCBidWZmZXIpKSB8fFxuICAgICAgICAgICAgKGJ1ZmZlciA9PSAnZmlsZScgJiYgKGluY2x1ZGVzQ3JlZGVudGlhbHModXJsKSB8fCB1cmwucG9ydCAhPT0gbnVsbCkpIHx8XG4gICAgICAgICAgICAodXJsLnNjaGVtZSA9PSAnZmlsZScgJiYgIXVybC5ob3N0KVxuICAgICAgICAgICkpIHJldHVybjtcbiAgICAgICAgICB1cmwuc2NoZW1lID0gYnVmZmVyO1xuICAgICAgICAgIGlmIChzdGF0ZU92ZXJyaWRlKSB7XG4gICAgICAgICAgICBpZiAoaXNTcGVjaWFsKHVybCkgJiYgc3BlY2lhbFNjaGVtZXNbdXJsLnNjaGVtZV0gPT0gdXJsLnBvcnQpIHVybC5wb3J0ID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnVmZmVyID0gJyc7XG4gICAgICAgICAgaWYgKHVybC5zY2hlbWUgPT0gJ2ZpbGUnKSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEZJTEU7XG4gICAgICAgICAgfSBlbHNlIGlmIChpc1NwZWNpYWwodXJsKSAmJiBiYXNlICYmIGJhc2Uuc2NoZW1lID09IHVybC5zY2hlbWUpIHtcbiAgICAgICAgICAgIHN0YXRlID0gU1BFQ0lBTF9SRUxBVElWRV9PUl9BVVRIT1JJVFk7XG4gICAgICAgICAgfSBlbHNlIGlmIChpc1NwZWNpYWwodXJsKSkge1xuICAgICAgICAgICAgc3RhdGUgPSBTUEVDSUFMX0FVVEhPUklUWV9TTEFTSEVTO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY29kZVBvaW50c1twb2ludGVyICsgMV0gPT0gJy8nKSB7XG4gICAgICAgICAgICBzdGF0ZSA9IFBBVEhfT1JfQVVUSE9SSVRZO1xuICAgICAgICAgICAgcG9pbnRlcisrO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB1cmwuY2Fubm90QmVBQmFzZVVSTCA9IHRydWU7XG4gICAgICAgICAgICB1cmwucGF0aC5wdXNoKCcnKTtcbiAgICAgICAgICAgIHN0YXRlID0gQ0FOTk9UX0JFX0FfQkFTRV9VUkxfUEFUSDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoIXN0YXRlT3ZlcnJpZGUpIHtcbiAgICAgICAgICBidWZmZXIgPSAnJztcbiAgICAgICAgICBzdGF0ZSA9IE5PX1NDSEVNRTtcbiAgICAgICAgICBwb2ludGVyID0gMDtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIHJldHVybiBJTlZBTElEX1NDSEVNRTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgTk9fU0NIRU1FOlxuICAgICAgICBpZiAoIWJhc2UgfHwgKGJhc2UuY2Fubm90QmVBQmFzZVVSTCAmJiBjaHIgIT0gJyMnKSkgcmV0dXJuIElOVkFMSURfU0NIRU1FO1xuICAgICAgICBpZiAoYmFzZS5jYW5ub3RCZUFCYXNlVVJMICYmIGNociA9PSAnIycpIHtcbiAgICAgICAgICB1cmwuc2NoZW1lID0gYmFzZS5zY2hlbWU7XG4gICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICB1cmwucXVlcnkgPSBiYXNlLnF1ZXJ5O1xuICAgICAgICAgIHVybC5mcmFnbWVudCA9ICcnO1xuICAgICAgICAgIHVybC5jYW5ub3RCZUFCYXNlVVJMID0gdHJ1ZTtcbiAgICAgICAgICBzdGF0ZSA9IEZSQUdNRU5UO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHN0YXRlID0gYmFzZS5zY2hlbWUgPT0gJ2ZpbGUnID8gRklMRSA6IFJFTEFUSVZFO1xuICAgICAgICBjb250aW51ZTtcblxuICAgICAgY2FzZSBTUEVDSUFMX1JFTEFUSVZFX09SX0FVVEhPUklUWTpcbiAgICAgICAgaWYgKGNociA9PSAnLycgJiYgY29kZVBvaW50c1twb2ludGVyICsgMV0gPT0gJy8nKSB7XG4gICAgICAgICAgc3RhdGUgPSBTUEVDSUFMX0FVVEhPUklUWV9JR05PUkVfU0xBU0hFUztcbiAgICAgICAgICBwb2ludGVyKys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RhdGUgPSBSRUxBVElWRTtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBicmVhaztcblxuICAgICAgY2FzZSBQQVRIX09SX0FVVEhPUklUWTpcbiAgICAgICAgaWYgKGNociA9PSAnLycpIHtcbiAgICAgICAgICBzdGF0ZSA9IEFVVEhPUklUWTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdGF0ZSA9IFBBVEg7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgY2FzZSBSRUxBVElWRTpcbiAgICAgICAgdXJsLnNjaGVtZSA9IGJhc2Uuc2NoZW1lO1xuICAgICAgICBpZiAoY2hyID09IEVPRikge1xuICAgICAgICAgIHVybC51c2VybmFtZSA9IGJhc2UudXNlcm5hbWU7XG4gICAgICAgICAgdXJsLnBhc3N3b3JkID0gYmFzZS5wYXNzd29yZDtcbiAgICAgICAgICB1cmwuaG9zdCA9IGJhc2UuaG9zdDtcbiAgICAgICAgICB1cmwucG9ydCA9IGJhc2UucG9ydDtcbiAgICAgICAgICB1cmwucGF0aCA9IGJhc2UucGF0aC5zbGljZSgpO1xuICAgICAgICAgIHVybC5xdWVyeSA9IGJhc2UucXVlcnk7XG4gICAgICAgIH0gZWxzZSBpZiAoY2hyID09ICcvJyB8fCAoY2hyID09ICdcXFxcJyAmJiBpc1NwZWNpYWwodXJsKSkpIHtcbiAgICAgICAgICBzdGF0ZSA9IFJFTEFUSVZFX1NMQVNIO1xuICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnPycpIHtcbiAgICAgICAgICB1cmwudXNlcm5hbWUgPSBiYXNlLnVzZXJuYW1lO1xuICAgICAgICAgIHVybC5wYXNzd29yZCA9IGJhc2UucGFzc3dvcmQ7XG4gICAgICAgICAgdXJsLmhvc3QgPSBiYXNlLmhvc3Q7XG4gICAgICAgICAgdXJsLnBvcnQgPSBiYXNlLnBvcnQ7XG4gICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICB1cmwucXVlcnkgPSAnJztcbiAgICAgICAgICBzdGF0ZSA9IFFVRVJZO1xuICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnIycpIHtcbiAgICAgICAgICB1cmwudXNlcm5hbWUgPSBiYXNlLnVzZXJuYW1lO1xuICAgICAgICAgIHVybC5wYXNzd29yZCA9IGJhc2UucGFzc3dvcmQ7XG4gICAgICAgICAgdXJsLmhvc3QgPSBiYXNlLmhvc3Q7XG4gICAgICAgICAgdXJsLnBvcnQgPSBiYXNlLnBvcnQ7XG4gICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICB1cmwucXVlcnkgPSBiYXNlLnF1ZXJ5O1xuICAgICAgICAgIHVybC5mcmFnbWVudCA9ICcnO1xuICAgICAgICAgIHN0YXRlID0gRlJBR01FTlQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXJsLnVzZXJuYW1lID0gYmFzZS51c2VybmFtZTtcbiAgICAgICAgICB1cmwucGFzc3dvcmQgPSBiYXNlLnBhc3N3b3JkO1xuICAgICAgICAgIHVybC5ob3N0ID0gYmFzZS5ob3N0O1xuICAgICAgICAgIHVybC5wb3J0ID0gYmFzZS5wb3J0O1xuICAgICAgICAgIHVybC5wYXRoID0gYmFzZS5wYXRoLnNsaWNlKCk7XG4gICAgICAgICAgdXJsLnBhdGgucG9wKCk7XG4gICAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIFJFTEFUSVZFX1NMQVNIOlxuICAgICAgICBpZiAoaXNTcGVjaWFsKHVybCkgJiYgKGNociA9PSAnLycgfHwgY2hyID09ICdcXFxcJykpIHtcbiAgICAgICAgICBzdGF0ZSA9IFNQRUNJQUxfQVVUSE9SSVRZX0lHTk9SRV9TTEFTSEVTO1xuICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnLycpIHtcbiAgICAgICAgICBzdGF0ZSA9IEFVVEhPUklUWTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB1cmwudXNlcm5hbWUgPSBiYXNlLnVzZXJuYW1lO1xuICAgICAgICAgIHVybC5wYXNzd29yZCA9IGJhc2UucGFzc3dvcmQ7XG4gICAgICAgICAgdXJsLmhvc3QgPSBiYXNlLmhvc3Q7XG4gICAgICAgICAgdXJsLnBvcnQgPSBiYXNlLnBvcnQ7XG4gICAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIFNQRUNJQUxfQVVUSE9SSVRZX1NMQVNIRVM6XG4gICAgICAgIHN0YXRlID0gU1BFQ0lBTF9BVVRIT1JJVFlfSUdOT1JFX1NMQVNIRVM7XG4gICAgICAgIGlmIChjaHIgIT0gJy8nIHx8IGJ1ZmZlci5jaGFyQXQocG9pbnRlciArIDEpICE9ICcvJykgY29udGludWU7XG4gICAgICAgIHBvaW50ZXIrKztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgU1BFQ0lBTF9BVVRIT1JJVFlfSUdOT1JFX1NMQVNIRVM6XG4gICAgICAgIGlmIChjaHIgIT0gJy8nICYmIGNociAhPSAnXFxcXCcpIHtcbiAgICAgICAgICBzdGF0ZSA9IEFVVEhPUklUWTtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBicmVhaztcblxuICAgICAgY2FzZSBBVVRIT1JJVFk6XG4gICAgICAgIGlmIChjaHIgPT0gJ0AnKSB7XG4gICAgICAgICAgaWYgKHNlZW5BdCkgYnVmZmVyID0gJyU0MCcgKyBidWZmZXI7XG4gICAgICAgICAgc2VlbkF0ID0gdHJ1ZTtcbiAgICAgICAgICBidWZmZXJDb2RlUG9pbnRzID0gYXJyYXlGcm9tKGJ1ZmZlcik7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXJDb2RlUG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY29kZVBvaW50ID0gYnVmZmVyQ29kZVBvaW50c1tpXTtcbiAgICAgICAgICAgIGlmIChjb2RlUG9pbnQgPT0gJzonICYmICFzZWVuUGFzc3dvcmRUb2tlbikge1xuICAgICAgICAgICAgICBzZWVuUGFzc3dvcmRUb2tlbiA9IHRydWU7XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGVuY29kZWRDb2RlUG9pbnRzID0gcGVyY2VudEVuY29kZShjb2RlUG9pbnQsIHVzZXJpbmZvUGVyY2VudEVuY29kZVNldCk7XG4gICAgICAgICAgICBpZiAoc2VlblBhc3N3b3JkVG9rZW4pIHVybC5wYXNzd29yZCArPSBlbmNvZGVkQ29kZVBvaW50cztcbiAgICAgICAgICAgIGVsc2UgdXJsLnVzZXJuYW1lICs9IGVuY29kZWRDb2RlUG9pbnRzO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIgPSAnJztcbiAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICBjaHIgPT0gRU9GIHx8IGNociA9PSAnLycgfHwgY2hyID09ICc/JyB8fCBjaHIgPT0gJyMnIHx8XG4gICAgICAgICAgKGNociA9PSAnXFxcXCcgJiYgaXNTcGVjaWFsKHVybCkpXG4gICAgICAgICkge1xuICAgICAgICAgIGlmIChzZWVuQXQgJiYgYnVmZmVyID09ICcnKSByZXR1cm4gSU5WQUxJRF9BVVRIT1JJVFk7XG4gICAgICAgICAgcG9pbnRlciAtPSBhcnJheUZyb20oYnVmZmVyKS5sZW5ndGggKyAxO1xuICAgICAgICAgIGJ1ZmZlciA9ICcnO1xuICAgICAgICAgIHN0YXRlID0gSE9TVDtcbiAgICAgICAgfSBlbHNlIGJ1ZmZlciArPSBjaHI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEhPU1Q6XG4gICAgICBjYXNlIEhPU1ROQU1FOlxuICAgICAgICBpZiAoc3RhdGVPdmVycmlkZSAmJiB1cmwuc2NoZW1lID09ICdmaWxlJykge1xuICAgICAgICAgIHN0YXRlID0gRklMRV9IT1NUO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnOicgJiYgIXNlZW5CcmFja2V0KSB7XG4gICAgICAgICAgaWYgKGJ1ZmZlciA9PSAnJykgcmV0dXJuIElOVkFMSURfSE9TVDtcbiAgICAgICAgICBmYWlsdXJlID0gcGFyc2VIb3N0KHVybCwgYnVmZmVyKTtcbiAgICAgICAgICBpZiAoZmFpbHVyZSkgcmV0dXJuIGZhaWx1cmU7XG4gICAgICAgICAgYnVmZmVyID0gJyc7XG4gICAgICAgICAgc3RhdGUgPSBQT1JUO1xuICAgICAgICAgIGlmIChzdGF0ZU92ZXJyaWRlID09IEhPU1ROQU1FKSByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgY2hyID09IEVPRiB8fCBjaHIgPT0gJy8nIHx8IGNociA9PSAnPycgfHwgY2hyID09ICcjJyB8fFxuICAgICAgICAgIChjaHIgPT0gJ1xcXFwnICYmIGlzU3BlY2lhbCh1cmwpKVxuICAgICAgICApIHtcbiAgICAgICAgICBpZiAoaXNTcGVjaWFsKHVybCkgJiYgYnVmZmVyID09ICcnKSByZXR1cm4gSU5WQUxJRF9IT1NUO1xuICAgICAgICAgIGlmIChzdGF0ZU92ZXJyaWRlICYmIGJ1ZmZlciA9PSAnJyAmJiAoaW5jbHVkZXNDcmVkZW50aWFscyh1cmwpIHx8IHVybC5wb3J0ICE9PSBudWxsKSkgcmV0dXJuO1xuICAgICAgICAgIGZhaWx1cmUgPSBwYXJzZUhvc3QodXJsLCBidWZmZXIpO1xuICAgICAgICAgIGlmIChmYWlsdXJlKSByZXR1cm4gZmFpbHVyZTtcbiAgICAgICAgICBidWZmZXIgPSAnJztcbiAgICAgICAgICBzdGF0ZSA9IFBBVEhfU1RBUlQ7XG4gICAgICAgICAgaWYgKHN0YXRlT3ZlcnJpZGUpIHJldHVybjtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoY2hyID09ICdbJykgc2VlbkJyYWNrZXQgPSB0cnVlO1xuICAgICAgICAgIGVsc2UgaWYgKGNociA9PSAnXScpIHNlZW5CcmFja2V0ID0gZmFsc2U7XG4gICAgICAgICAgYnVmZmVyICs9IGNocjtcbiAgICAgICAgfSBicmVhaztcblxuICAgICAgY2FzZSBQT1JUOlxuICAgICAgICBpZiAoRElHSVQudGVzdChjaHIpKSB7XG4gICAgICAgICAgYnVmZmVyICs9IGNocjtcbiAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICBjaHIgPT0gRU9GIHx8IGNociA9PSAnLycgfHwgY2hyID09ICc/JyB8fCBjaHIgPT0gJyMnIHx8XG4gICAgICAgICAgKGNociA9PSAnXFxcXCcgJiYgaXNTcGVjaWFsKHVybCkpIHx8XG4gICAgICAgICAgc3RhdGVPdmVycmlkZVxuICAgICAgICApIHtcbiAgICAgICAgICBpZiAoYnVmZmVyICE9ICcnKSB7XG4gICAgICAgICAgICB2YXIgcG9ydCA9IHBhcnNlSW50KGJ1ZmZlciwgMTApO1xuICAgICAgICAgICAgaWYgKHBvcnQgPiAweEZGRkYpIHJldHVybiBJTlZBTElEX1BPUlQ7XG4gICAgICAgICAgICB1cmwucG9ydCA9IChpc1NwZWNpYWwodXJsKSAmJiBwb3J0ID09PSBzcGVjaWFsU2NoZW1lc1t1cmwuc2NoZW1lXSkgPyBudWxsIDogcG9ydDtcbiAgICAgICAgICAgIGJ1ZmZlciA9ICcnO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc3RhdGVPdmVycmlkZSkgcmV0dXJuO1xuICAgICAgICAgIHN0YXRlID0gUEFUSF9TVEFSVDtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIHJldHVybiBJTlZBTElEX1BPUlQ7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEZJTEU6XG4gICAgICAgIHVybC5zY2hlbWUgPSAnZmlsZSc7XG4gICAgICAgIGlmIChjaHIgPT0gJy8nIHx8IGNociA9PSAnXFxcXCcpIHN0YXRlID0gRklMRV9TTEFTSDtcbiAgICAgICAgZWxzZSBpZiAoYmFzZSAmJiBiYXNlLnNjaGVtZSA9PSAnZmlsZScpIHtcbiAgICAgICAgICBpZiAoY2hyID09IEVPRikge1xuICAgICAgICAgICAgdXJsLmhvc3QgPSBiYXNlLmhvc3Q7XG4gICAgICAgICAgICB1cmwucGF0aCA9IGJhc2UucGF0aC5zbGljZSgpO1xuICAgICAgICAgICAgdXJsLnF1ZXJ5ID0gYmFzZS5xdWVyeTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnPycpIHtcbiAgICAgICAgICAgIHVybC5ob3N0ID0gYmFzZS5ob3N0O1xuICAgICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICAgIHVybC5xdWVyeSA9ICcnO1xuICAgICAgICAgICAgc3RhdGUgPSBRVUVSWTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNociA9PSAnIycpIHtcbiAgICAgICAgICAgIHVybC5ob3N0ID0gYmFzZS5ob3N0O1xuICAgICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICAgIHVybC5xdWVyeSA9IGJhc2UucXVlcnk7XG4gICAgICAgICAgICB1cmwuZnJhZ21lbnQgPSAnJztcbiAgICAgICAgICAgIHN0YXRlID0gRlJBR01FTlQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghc3RhcnRzV2l0aFdpbmRvd3NEcml2ZUxldHRlcihjb2RlUG9pbnRzLnNsaWNlKHBvaW50ZXIpLmpvaW4oJycpKSkge1xuICAgICAgICAgICAgICB1cmwuaG9zdCA9IGJhc2UuaG9zdDtcbiAgICAgICAgICAgICAgdXJsLnBhdGggPSBiYXNlLnBhdGguc2xpY2UoKTtcbiAgICAgICAgICAgICAgc2hvcnRlblVSTHNQYXRoKHVybCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdGF0ZSA9IFBBVEg7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIEZJTEVfU0xBU0g6XG4gICAgICAgIGlmIChjaHIgPT0gJy8nIHx8IGNociA9PSAnXFxcXCcpIHtcbiAgICAgICAgICBzdGF0ZSA9IEZJTEVfSE9TVDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZiAoYmFzZSAmJiBiYXNlLnNjaGVtZSA9PSAnZmlsZScgJiYgIXN0YXJ0c1dpdGhXaW5kb3dzRHJpdmVMZXR0ZXIoY29kZVBvaW50cy5zbGljZShwb2ludGVyKS5qb2luKCcnKSkpIHtcbiAgICAgICAgICBpZiAoaXNXaW5kb3dzRHJpdmVMZXR0ZXIoYmFzZS5wYXRoWzBdLCB0cnVlKSkgdXJsLnBhdGgucHVzaChiYXNlLnBhdGhbMF0pO1xuICAgICAgICAgIGVsc2UgdXJsLmhvc3QgPSBiYXNlLmhvc3Q7XG4gICAgICAgIH1cbiAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICBjb250aW51ZTtcblxuICAgICAgY2FzZSBGSUxFX0hPU1Q6XG4gICAgICAgIGlmIChjaHIgPT0gRU9GIHx8IGNociA9PSAnLycgfHwgY2hyID09ICdcXFxcJyB8fCBjaHIgPT0gJz8nIHx8IGNociA9PSAnIycpIHtcbiAgICAgICAgICBpZiAoIXN0YXRlT3ZlcnJpZGUgJiYgaXNXaW5kb3dzRHJpdmVMZXR0ZXIoYnVmZmVyKSkge1xuICAgICAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYnVmZmVyID09ICcnKSB7XG4gICAgICAgICAgICB1cmwuaG9zdCA9ICcnO1xuICAgICAgICAgICAgaWYgKHN0YXRlT3ZlcnJpZGUpIHJldHVybjtcbiAgICAgICAgICAgIHN0YXRlID0gUEFUSF9TVEFSVDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZmFpbHVyZSA9IHBhcnNlSG9zdCh1cmwsIGJ1ZmZlcik7XG4gICAgICAgICAgICBpZiAoZmFpbHVyZSkgcmV0dXJuIGZhaWx1cmU7XG4gICAgICAgICAgICBpZiAodXJsLmhvc3QgPT0gJ2xvY2FsaG9zdCcpIHVybC5ob3N0ID0gJyc7XG4gICAgICAgICAgICBpZiAoc3RhdGVPdmVycmlkZSkgcmV0dXJuO1xuICAgICAgICAgICAgYnVmZmVyID0gJyc7XG4gICAgICAgICAgICBzdGF0ZSA9IFBBVEhfU1RBUlQ7XG4gICAgICAgICAgfSBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIGJ1ZmZlciArPSBjaHI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFBBVEhfU1RBUlQ6XG4gICAgICAgIGlmIChpc1NwZWNpYWwodXJsKSkge1xuICAgICAgICAgIHN0YXRlID0gUEFUSDtcbiAgICAgICAgICBpZiAoY2hyICE9ICcvJyAmJiBjaHIgIT0gJ1xcXFwnKSBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIGlmICghc3RhdGVPdmVycmlkZSAmJiBjaHIgPT0gJz8nKSB7XG4gICAgICAgICAgdXJsLnF1ZXJ5ID0gJyc7XG4gICAgICAgICAgc3RhdGUgPSBRVUVSWTtcbiAgICAgICAgfSBlbHNlIGlmICghc3RhdGVPdmVycmlkZSAmJiBjaHIgPT0gJyMnKSB7XG4gICAgICAgICAgdXJsLmZyYWdtZW50ID0gJyc7XG4gICAgICAgICAgc3RhdGUgPSBGUkFHTUVOVDtcbiAgICAgICAgfSBlbHNlIGlmIChjaHIgIT0gRU9GKSB7XG4gICAgICAgICAgc3RhdGUgPSBQQVRIO1xuICAgICAgICAgIGlmIChjaHIgIT0gJy8nKSBjb250aW51ZTtcbiAgICAgICAgfSBicmVhaztcblxuICAgICAgY2FzZSBQQVRIOlxuICAgICAgICBpZiAoXG4gICAgICAgICAgY2hyID09IEVPRiB8fCBjaHIgPT0gJy8nIHx8XG4gICAgICAgICAgKGNociA9PSAnXFxcXCcgJiYgaXNTcGVjaWFsKHVybCkpIHx8XG4gICAgICAgICAgKCFzdGF0ZU92ZXJyaWRlICYmIChjaHIgPT0gJz8nIHx8IGNociA9PSAnIycpKVxuICAgICAgICApIHtcbiAgICAgICAgICBpZiAoaXNEb3VibGVEb3QoYnVmZmVyKSkge1xuICAgICAgICAgICAgc2hvcnRlblVSTHNQYXRoKHVybCk7XG4gICAgICAgICAgICBpZiAoY2hyICE9ICcvJyAmJiAhKGNociA9PSAnXFxcXCcgJiYgaXNTcGVjaWFsKHVybCkpKSB7XG4gICAgICAgICAgICAgIHVybC5wYXRoLnB1c2goJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNTaW5nbGVEb3QoYnVmZmVyKSkge1xuICAgICAgICAgICAgaWYgKGNociAhPSAnLycgJiYgIShjaHIgPT0gJ1xcXFwnICYmIGlzU3BlY2lhbCh1cmwpKSkge1xuICAgICAgICAgICAgICB1cmwucGF0aC5wdXNoKCcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHVybC5zY2hlbWUgPT0gJ2ZpbGUnICYmICF1cmwucGF0aC5sZW5ndGggJiYgaXNXaW5kb3dzRHJpdmVMZXR0ZXIoYnVmZmVyKSkge1xuICAgICAgICAgICAgICBpZiAodXJsLmhvc3QpIHVybC5ob3N0ID0gJyc7XG4gICAgICAgICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5jaGFyQXQoMCkgKyAnOic7IC8vIG5vcm1hbGl6ZSB3aW5kb3dzIGRyaXZlIGxldHRlclxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXJsLnBhdGgucHVzaChidWZmZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIgPSAnJztcbiAgICAgICAgICBpZiAodXJsLnNjaGVtZSA9PSAnZmlsZScgJiYgKGNociA9PSBFT0YgfHwgY2hyID09ICc/JyB8fCBjaHIgPT0gJyMnKSkge1xuICAgICAgICAgICAgd2hpbGUgKHVybC5wYXRoLmxlbmd0aCA+IDEgJiYgdXJsLnBhdGhbMF0gPT09ICcnKSB7XG4gICAgICAgICAgICAgIHVybC5wYXRoLnNoaWZ0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjaHIgPT0gJz8nKSB7XG4gICAgICAgICAgICB1cmwucXVlcnkgPSAnJztcbiAgICAgICAgICAgIHN0YXRlID0gUVVFUlk7XG4gICAgICAgICAgfSBlbHNlIGlmIChjaHIgPT0gJyMnKSB7XG4gICAgICAgICAgICB1cmwuZnJhZ21lbnQgPSAnJztcbiAgICAgICAgICAgIHN0YXRlID0gRlJBR01FTlQ7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJ1ZmZlciArPSBwZXJjZW50RW5jb2RlKGNociwgcGF0aFBlcmNlbnRFbmNvZGVTZXQpO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIENBTk5PVF9CRV9BX0JBU0VfVVJMX1BBVEg6XG4gICAgICAgIGlmIChjaHIgPT0gJz8nKSB7XG4gICAgICAgICAgdXJsLnF1ZXJ5ID0gJyc7XG4gICAgICAgICAgc3RhdGUgPSBRVUVSWTtcbiAgICAgICAgfSBlbHNlIGlmIChjaHIgPT0gJyMnKSB7XG4gICAgICAgICAgdXJsLmZyYWdtZW50ID0gJyc7XG4gICAgICAgICAgc3RhdGUgPSBGUkFHTUVOVDtcbiAgICAgICAgfSBlbHNlIGlmIChjaHIgIT0gRU9GKSB7XG4gICAgICAgICAgdXJsLnBhdGhbMF0gKz0gcGVyY2VudEVuY29kZShjaHIsIEMwQ29udHJvbFBlcmNlbnRFbmNvZGVTZXQpO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIFFVRVJZOlxuICAgICAgICBpZiAoIXN0YXRlT3ZlcnJpZGUgJiYgY2hyID09ICcjJykge1xuICAgICAgICAgIHVybC5mcmFnbWVudCA9ICcnO1xuICAgICAgICAgIHN0YXRlID0gRlJBR01FTlQ7XG4gICAgICAgIH0gZWxzZSBpZiAoY2hyICE9IEVPRikge1xuICAgICAgICAgIGlmIChjaHIgPT0gXCInXCIgJiYgaXNTcGVjaWFsKHVybCkpIHVybC5xdWVyeSArPSAnJTI3JztcbiAgICAgICAgICBlbHNlIGlmIChjaHIgPT0gJyMnKSB1cmwucXVlcnkgKz0gJyUyMyc7XG4gICAgICAgICAgZWxzZSB1cmwucXVlcnkgKz0gcGVyY2VudEVuY29kZShjaHIsIEMwQ29udHJvbFBlcmNlbnRFbmNvZGVTZXQpO1xuICAgICAgICB9IGJyZWFrO1xuXG4gICAgICBjYXNlIEZSQUdNRU5UOlxuICAgICAgICBpZiAoY2hyICE9IEVPRikgdXJsLmZyYWdtZW50ICs9IHBlcmNlbnRFbmNvZGUoY2hyLCBmcmFnbWVudFBlcmNlbnRFbmNvZGVTZXQpO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBwb2ludGVyKys7XG4gIH1cbn07XG5cbi8vIGBVUkxgIGNvbnN0cnVjdG9yXG4vLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybC1jbGFzc1xudmFyIFVSTENvbnN0cnVjdG9yID0gZnVuY3Rpb24gVVJMKHVybCAvKiAsIGJhc2UgKi8pIHtcbiAgdmFyIHRoYXQgPSBhbkluc3RhbmNlKHRoaXMsIFVSTENvbnN0cnVjdG9yLCAnVVJMJyk7XG4gIHZhciBiYXNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gIHZhciB1cmxTdHJpbmcgPSAkdG9TdHJpbmcodXJsKTtcbiAgdmFyIHN0YXRlID0gc2V0SW50ZXJuYWxTdGF0ZSh0aGF0LCB7IHR5cGU6ICdVUkwnIH0pO1xuICB2YXIgYmFzZVN0YXRlLCBmYWlsdXJlO1xuICBpZiAoYmFzZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKGJhc2UgaW5zdGFuY2VvZiBVUkxDb25zdHJ1Y3RvcikgYmFzZVN0YXRlID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZShiYXNlKTtcbiAgICBlbHNlIHtcbiAgICAgIGZhaWx1cmUgPSBwYXJzZVVSTChiYXNlU3RhdGUgPSB7fSwgJHRvU3RyaW5nKGJhc2UpKTtcbiAgICAgIGlmIChmYWlsdXJlKSB0aHJvdyBUeXBlRXJyb3IoZmFpbHVyZSk7XG4gICAgfVxuICB9XG4gIGZhaWx1cmUgPSBwYXJzZVVSTChzdGF0ZSwgdXJsU3RyaW5nLCBudWxsLCBiYXNlU3RhdGUpO1xuICBpZiAoZmFpbHVyZSkgdGhyb3cgVHlwZUVycm9yKGZhaWx1cmUpO1xuICB2YXIgc2VhcmNoUGFyYW1zID0gc3RhdGUuc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICB2YXIgc2VhcmNoUGFyYW1zU3RhdGUgPSBnZXRJbnRlcm5hbFNlYXJjaFBhcmFtc1N0YXRlKHNlYXJjaFBhcmFtcyk7XG4gIHNlYXJjaFBhcmFtc1N0YXRlLnVwZGF0ZVNlYXJjaFBhcmFtcyhzdGF0ZS5xdWVyeSk7XG4gIHNlYXJjaFBhcmFtc1N0YXRlLnVwZGF0ZVVSTCA9IGZ1bmN0aW9uICgpIHtcbiAgICBzdGF0ZS5xdWVyeSA9IFN0cmluZyhzZWFyY2hQYXJhbXMpIHx8IG51bGw7XG4gIH07XG4gIGlmICghREVTQ1JJUFRPUlMpIHtcbiAgICB0aGF0LmhyZWYgPSBzZXJpYWxpemVVUkwuY2FsbCh0aGF0KTtcbiAgICB0aGF0Lm9yaWdpbiA9IGdldE9yaWdpbi5jYWxsKHRoYXQpO1xuICAgIHRoYXQucHJvdG9jb2wgPSBnZXRQcm90b2NvbC5jYWxsKHRoYXQpO1xuICAgIHRoYXQudXNlcm5hbWUgPSBnZXRVc2VybmFtZS5jYWxsKHRoYXQpO1xuICAgIHRoYXQucGFzc3dvcmQgPSBnZXRQYXNzd29yZC5jYWxsKHRoYXQpO1xuICAgIHRoYXQuaG9zdCA9IGdldEhvc3QuY2FsbCh0aGF0KTtcbiAgICB0aGF0Lmhvc3RuYW1lID0gZ2V0SG9zdG5hbWUuY2FsbCh0aGF0KTtcbiAgICB0aGF0LnBvcnQgPSBnZXRQb3J0LmNhbGwodGhhdCk7XG4gICAgdGhhdC5wYXRobmFtZSA9IGdldFBhdGhuYW1lLmNhbGwodGhhdCk7XG4gICAgdGhhdC5zZWFyY2ggPSBnZXRTZWFyY2guY2FsbCh0aGF0KTtcbiAgICB0aGF0LnNlYXJjaFBhcmFtcyA9IGdldFNlYXJjaFBhcmFtcy5jYWxsKHRoYXQpO1xuICAgIHRoYXQuaGFzaCA9IGdldEhhc2guY2FsbCh0aGF0KTtcbiAgfVxufTtcblxudmFyIFVSTFByb3RvdHlwZSA9IFVSTENvbnN0cnVjdG9yLnByb3RvdHlwZTtcblxudmFyIHNlcmlhbGl6ZVVSTCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHVybCA9IGdldEludGVybmFsVVJMU3RhdGUodGhpcyk7XG4gIHZhciBzY2hlbWUgPSB1cmwuc2NoZW1lO1xuICB2YXIgdXNlcm5hbWUgPSB1cmwudXNlcm5hbWU7XG4gIHZhciBwYXNzd29yZCA9IHVybC5wYXNzd29yZDtcbiAgdmFyIGhvc3QgPSB1cmwuaG9zdDtcbiAgdmFyIHBvcnQgPSB1cmwucG9ydDtcbiAgdmFyIHBhdGggPSB1cmwucGF0aDtcbiAgdmFyIHF1ZXJ5ID0gdXJsLnF1ZXJ5O1xuICB2YXIgZnJhZ21lbnQgPSB1cmwuZnJhZ21lbnQ7XG4gIHZhciBvdXRwdXQgPSBzY2hlbWUgKyAnOic7XG4gIGlmIChob3N0ICE9PSBudWxsKSB7XG4gICAgb3V0cHV0ICs9ICcvLyc7XG4gICAgaWYgKGluY2x1ZGVzQ3JlZGVudGlhbHModXJsKSkge1xuICAgICAgb3V0cHV0ICs9IHVzZXJuYW1lICsgKHBhc3N3b3JkID8gJzonICsgcGFzc3dvcmQgOiAnJykgKyAnQCc7XG4gICAgfVxuICAgIG91dHB1dCArPSBzZXJpYWxpemVIb3N0KGhvc3QpO1xuICAgIGlmIChwb3J0ICE9PSBudWxsKSBvdXRwdXQgKz0gJzonICsgcG9ydDtcbiAgfSBlbHNlIGlmIChzY2hlbWUgPT0gJ2ZpbGUnKSBvdXRwdXQgKz0gJy8vJztcbiAgb3V0cHV0ICs9IHVybC5jYW5ub3RCZUFCYXNlVVJMID8gcGF0aFswXSA6IHBhdGgubGVuZ3RoID8gJy8nICsgcGF0aC5qb2luKCcvJykgOiAnJztcbiAgaWYgKHF1ZXJ5ICE9PSBudWxsKSBvdXRwdXQgKz0gJz8nICsgcXVlcnk7XG4gIGlmIChmcmFnbWVudCAhPT0gbnVsbCkgb3V0cHV0ICs9ICcjJyArIGZyYWdtZW50O1xuICByZXR1cm4gb3V0cHV0O1xufTtcblxudmFyIGdldE9yaWdpbiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHVybCA9IGdldEludGVybmFsVVJMU3RhdGUodGhpcyk7XG4gIHZhciBzY2hlbWUgPSB1cmwuc2NoZW1lO1xuICB2YXIgcG9ydCA9IHVybC5wb3J0O1xuICBpZiAoc2NoZW1lID09ICdibG9iJykgdHJ5IHtcbiAgICByZXR1cm4gbmV3IFVSTENvbnN0cnVjdG9yKHNjaGVtZS5wYXRoWzBdKS5vcmlnaW47XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuICdudWxsJztcbiAgfVxuICBpZiAoc2NoZW1lID09ICdmaWxlJyB8fCAhaXNTcGVjaWFsKHVybCkpIHJldHVybiAnbnVsbCc7XG4gIHJldHVybiBzY2hlbWUgKyAnOi8vJyArIHNlcmlhbGl6ZUhvc3QodXJsLmhvc3QpICsgKHBvcnQgIT09IG51bGwgPyAnOicgKyBwb3J0IDogJycpO1xufTtcblxudmFyIGdldFByb3RvY29sID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKS5zY2hlbWUgKyAnOic7XG59O1xuXG52YXIgZ2V0VXNlcm5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpLnVzZXJuYW1lO1xufTtcblxudmFyIGdldFBhc3N3b3JkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKS5wYXNzd29yZDtcbn07XG5cbnZhciBnZXRIb3N0ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgdmFyIGhvc3QgPSB1cmwuaG9zdDtcbiAgdmFyIHBvcnQgPSB1cmwucG9ydDtcbiAgcmV0dXJuIGhvc3QgPT09IG51bGwgPyAnJ1xuICAgIDogcG9ydCA9PT0gbnVsbCA/IHNlcmlhbGl6ZUhvc3QoaG9zdClcbiAgICA6IHNlcmlhbGl6ZUhvc3QoaG9zdCkgKyAnOicgKyBwb3J0O1xufTtcblxudmFyIGdldEhvc3RuYW1lID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaG9zdCA9IGdldEludGVybmFsVVJMU3RhdGUodGhpcykuaG9zdDtcbiAgcmV0dXJuIGhvc3QgPT09IG51bGwgPyAnJyA6IHNlcmlhbGl6ZUhvc3QoaG9zdCk7XG59O1xuXG52YXIgZ2V0UG9ydCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHBvcnQgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpLnBvcnQ7XG4gIHJldHVybiBwb3J0ID09PSBudWxsID8gJycgOiBTdHJpbmcocG9ydCk7XG59O1xuXG52YXIgZ2V0UGF0aG5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciB1cmwgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpO1xuICB2YXIgcGF0aCA9IHVybC5wYXRoO1xuICByZXR1cm4gdXJsLmNhbm5vdEJlQUJhc2VVUkwgPyBwYXRoWzBdIDogcGF0aC5sZW5ndGggPyAnLycgKyBwYXRoLmpvaW4oJy8nKSA6ICcnO1xufTtcblxudmFyIGdldFNlYXJjaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHF1ZXJ5ID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKS5xdWVyeTtcbiAgcmV0dXJuIHF1ZXJ5ID8gJz8nICsgcXVlcnkgOiAnJztcbn07XG5cbnZhciBnZXRTZWFyY2hQYXJhbXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpLnNlYXJjaFBhcmFtcztcbn07XG5cbnZhciBnZXRIYXNoID0gZnVuY3Rpb24gKCkge1xuICB2YXIgZnJhZ21lbnQgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpLmZyYWdtZW50O1xuICByZXR1cm4gZnJhZ21lbnQgPyAnIycgKyBmcmFnbWVudCA6ICcnO1xufTtcblxudmFyIGFjY2Vzc29yRGVzY3JpcHRvciA9IGZ1bmN0aW9uIChnZXR0ZXIsIHNldHRlcikge1xuICByZXR1cm4geyBnZXQ6IGdldHRlciwgc2V0OiBzZXR0ZXIsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgZW51bWVyYWJsZTogdHJ1ZSB9O1xufTtcblxuaWYgKERFU0NSSVBUT1JTKSB7XG4gIGRlZmluZVByb3BlcnRpZXMoVVJMUHJvdG90eXBlLCB7XG4gICAgLy8gYFVSTC5wcm90b3R5cGUuaHJlZmAgYWNjZXNzb3JzIHBhaXJcbiAgICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtaHJlZlxuICAgIGhyZWY6IGFjY2Vzc29yRGVzY3JpcHRvcihzZXJpYWxpemVVUkwsIGZ1bmN0aW9uIChocmVmKSB7XG4gICAgICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgICAgIHZhciB1cmxTdHJpbmcgPSAkdG9TdHJpbmcoaHJlZik7XG4gICAgICB2YXIgZmFpbHVyZSA9IHBhcnNlVVJMKHVybCwgdXJsU3RyaW5nKTtcbiAgICAgIGlmIChmYWlsdXJlKSB0aHJvdyBUeXBlRXJyb3IoZmFpbHVyZSk7XG4gICAgICBnZXRJbnRlcm5hbFNlYXJjaFBhcmFtc1N0YXRlKHVybC5zZWFyY2hQYXJhbXMpLnVwZGF0ZVNlYXJjaFBhcmFtcyh1cmwucXVlcnkpO1xuICAgIH0pLFxuICAgIC8vIGBVUkwucHJvdG90eXBlLm9yaWdpbmAgZ2V0dGVyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLW9yaWdpblxuICAgIG9yaWdpbjogYWNjZXNzb3JEZXNjcmlwdG9yKGdldE9yaWdpbiksXG4gICAgLy8gYFVSTC5wcm90b3R5cGUucHJvdG9jb2xgIGFjY2Vzc29ycyBwYWlyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLXByb3RvY29sXG4gICAgcHJvdG9jb2w6IGFjY2Vzc29yRGVzY3JpcHRvcihnZXRQcm90b2NvbCwgZnVuY3Rpb24gKHByb3RvY29sKSB7XG4gICAgICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgICAgIHBhcnNlVVJMKHVybCwgJHRvU3RyaW5nKHByb3RvY29sKSArICc6JywgU0NIRU1FX1NUQVJUKTtcbiAgICB9KSxcbiAgICAvLyBgVVJMLnByb3RvdHlwZS51c2VybmFtZWAgYWNjZXNzb3JzIHBhaXJcbiAgICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtdXNlcm5hbWVcbiAgICB1c2VybmFtZTogYWNjZXNzb3JEZXNjcmlwdG9yKGdldFVzZXJuYW1lLCBmdW5jdGlvbiAodXNlcm5hbWUpIHtcbiAgICAgIHZhciB1cmwgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpO1xuICAgICAgdmFyIGNvZGVQb2ludHMgPSBhcnJheUZyb20oJHRvU3RyaW5nKHVzZXJuYW1lKSk7XG4gICAgICBpZiAoY2Fubm90SGF2ZVVzZXJuYW1lUGFzc3dvcmRQb3J0KHVybCkpIHJldHVybjtcbiAgICAgIHVybC51c2VybmFtZSA9ICcnO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2RlUG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHVybC51c2VybmFtZSArPSBwZXJjZW50RW5jb2RlKGNvZGVQb2ludHNbaV0sIHVzZXJpbmZvUGVyY2VudEVuY29kZVNldCk7XG4gICAgICB9XG4gICAgfSksXG4gICAgLy8gYFVSTC5wcm90b3R5cGUucGFzc3dvcmRgIGFjY2Vzc29ycyBwYWlyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLXBhc3N3b3JkXG4gICAgcGFzc3dvcmQ6IGFjY2Vzc29yRGVzY3JpcHRvcihnZXRQYXNzd29yZCwgZnVuY3Rpb24gKHBhc3N3b3JkKSB7XG4gICAgICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgICAgIHZhciBjb2RlUG9pbnRzID0gYXJyYXlGcm9tKCR0b1N0cmluZyhwYXNzd29yZCkpO1xuICAgICAgaWYgKGNhbm5vdEhhdmVVc2VybmFtZVBhc3N3b3JkUG9ydCh1cmwpKSByZXR1cm47XG4gICAgICB1cmwucGFzc3dvcmQgPSAnJztcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29kZVBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB1cmwucGFzc3dvcmQgKz0gcGVyY2VudEVuY29kZShjb2RlUG9pbnRzW2ldLCB1c2VyaW5mb1BlcmNlbnRFbmNvZGVTZXQpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIC8vIGBVUkwucHJvdG90eXBlLmhvc3RgIGFjY2Vzc29ycyBwYWlyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLWhvc3RcbiAgICBob3N0OiBhY2Nlc3NvckRlc2NyaXB0b3IoZ2V0SG9zdCwgZnVuY3Rpb24gKGhvc3QpIHtcbiAgICAgIHZhciB1cmwgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpO1xuICAgICAgaWYgKHVybC5jYW5ub3RCZUFCYXNlVVJMKSByZXR1cm47XG4gICAgICBwYXJzZVVSTCh1cmwsICR0b1N0cmluZyhob3N0KSwgSE9TVCk7XG4gICAgfSksXG4gICAgLy8gYFVSTC5wcm90b3R5cGUuaG9zdG5hbWVgIGFjY2Vzc29ycyBwYWlyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLWhvc3RuYW1lXG4gICAgaG9zdG5hbWU6IGFjY2Vzc29yRGVzY3JpcHRvcihnZXRIb3N0bmFtZSwgZnVuY3Rpb24gKGhvc3RuYW1lKSB7XG4gICAgICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgICAgIGlmICh1cmwuY2Fubm90QmVBQmFzZVVSTCkgcmV0dXJuO1xuICAgICAgcGFyc2VVUkwodXJsLCAkdG9TdHJpbmcoaG9zdG5hbWUpLCBIT1NUTkFNRSk7XG4gICAgfSksXG4gICAgLy8gYFVSTC5wcm90b3R5cGUucG9ydGAgYWNjZXNzb3JzIHBhaXJcbiAgICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtcG9ydFxuICAgIHBvcnQ6IGFjY2Vzc29yRGVzY3JpcHRvcihnZXRQb3J0LCBmdW5jdGlvbiAocG9ydCkge1xuICAgICAgdmFyIHVybCA9IGdldEludGVybmFsVVJMU3RhdGUodGhpcyk7XG4gICAgICBpZiAoY2Fubm90SGF2ZVVzZXJuYW1lUGFzc3dvcmRQb3J0KHVybCkpIHJldHVybjtcbiAgICAgIHBvcnQgPSAkdG9TdHJpbmcocG9ydCk7XG4gICAgICBpZiAocG9ydCA9PSAnJykgdXJsLnBvcnQgPSBudWxsO1xuICAgICAgZWxzZSBwYXJzZVVSTCh1cmwsIHBvcnQsIFBPUlQpO1xuICAgIH0pLFxuICAgIC8vIGBVUkwucHJvdG90eXBlLnBhdGhuYW1lYCBhY2Nlc3NvcnMgcGFpclxuICAgIC8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybC1wYXRobmFtZVxuICAgIHBhdGhuYW1lOiBhY2Nlc3NvckRlc2NyaXB0b3IoZ2V0UGF0aG5hbWUsIGZ1bmN0aW9uIChwYXRobmFtZSkge1xuICAgICAgdmFyIHVybCA9IGdldEludGVybmFsVVJMU3RhdGUodGhpcyk7XG4gICAgICBpZiAodXJsLmNhbm5vdEJlQUJhc2VVUkwpIHJldHVybjtcbiAgICAgIHVybC5wYXRoID0gW107XG4gICAgICBwYXJzZVVSTCh1cmwsICR0b1N0cmluZyhwYXRobmFtZSksIFBBVEhfU1RBUlQpO1xuICAgIH0pLFxuICAgIC8vIGBVUkwucHJvdG90eXBlLnNlYXJjaGAgYWNjZXNzb3JzIHBhaXJcbiAgICAvLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtc2VhcmNoXG4gICAgc2VhcmNoOiBhY2Nlc3NvckRlc2NyaXB0b3IoZ2V0U2VhcmNoLCBmdW5jdGlvbiAoc2VhcmNoKSB7XG4gICAgICB2YXIgdXJsID0gZ2V0SW50ZXJuYWxVUkxTdGF0ZSh0aGlzKTtcbiAgICAgIHNlYXJjaCA9ICR0b1N0cmluZyhzZWFyY2gpO1xuICAgICAgaWYgKHNlYXJjaCA9PSAnJykge1xuICAgICAgICB1cmwucXVlcnkgPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCc/JyA9PSBzZWFyY2guY2hhckF0KDApKSBzZWFyY2ggPSBzZWFyY2guc2xpY2UoMSk7XG4gICAgICAgIHVybC5xdWVyeSA9ICcnO1xuICAgICAgICBwYXJzZVVSTCh1cmwsIHNlYXJjaCwgUVVFUlkpO1xuICAgICAgfVxuICAgICAgZ2V0SW50ZXJuYWxTZWFyY2hQYXJhbXNTdGF0ZSh1cmwuc2VhcmNoUGFyYW1zKS51cGRhdGVTZWFyY2hQYXJhbXModXJsLnF1ZXJ5KTtcbiAgICB9KSxcbiAgICAvLyBgVVJMLnByb3RvdHlwZS5zZWFyY2hQYXJhbXNgIGdldHRlclxuICAgIC8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybC1zZWFyY2hwYXJhbXNcbiAgICBzZWFyY2hQYXJhbXM6IGFjY2Vzc29yRGVzY3JpcHRvcihnZXRTZWFyY2hQYXJhbXMpLFxuICAgIC8vIGBVUkwucHJvdG90eXBlLmhhc2hgIGFjY2Vzc29ycyBwYWlyXG4gICAgLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkb20tdXJsLWhhc2hcbiAgICBoYXNoOiBhY2Nlc3NvckRlc2NyaXB0b3IoZ2V0SGFzaCwgZnVuY3Rpb24gKGhhc2gpIHtcbiAgICAgIHZhciB1cmwgPSBnZXRJbnRlcm5hbFVSTFN0YXRlKHRoaXMpO1xuICAgICAgaGFzaCA9ICR0b1N0cmluZyhoYXNoKTtcbiAgICAgIGlmIChoYXNoID09ICcnKSB7XG4gICAgICAgIHVybC5mcmFnbWVudCA9IG51bGw7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICgnIycgPT0gaGFzaC5jaGFyQXQoMCkpIGhhc2ggPSBoYXNoLnNsaWNlKDEpO1xuICAgICAgdXJsLmZyYWdtZW50ID0gJyc7XG4gICAgICBwYXJzZVVSTCh1cmwsIGhhc2gsIEZSQUdNRU5UKTtcbiAgICB9KVxuICB9KTtcbn1cblxuLy8gYFVSTC5wcm90b3R5cGUudG9KU09OYCBtZXRob2Rcbi8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybC10b2pzb25cbnJlZGVmaW5lKFVSTFByb3RvdHlwZSwgJ3RvSlNPTicsIGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgcmV0dXJuIHNlcmlhbGl6ZVVSTC5jYWxsKHRoaXMpO1xufSwgeyBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4vLyBgVVJMLnByb3RvdHlwZS50b1N0cmluZ2AgbWV0aG9kXG4vLyBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI1VSTC1zdHJpbmdpZmljYXRpb24tYmVoYXZpb3JcbnJlZGVmaW5lKFVSTFByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiBzZXJpYWxpemVVUkwuY2FsbCh0aGlzKTtcbn0sIHsgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuaWYgKE5hdGl2ZVVSTCkge1xuICB2YXIgbmF0aXZlQ3JlYXRlT2JqZWN0VVJMID0gTmF0aXZlVVJMLmNyZWF0ZU9iamVjdFVSTDtcbiAgdmFyIG5hdGl2ZVJldm9rZU9iamVjdFVSTCA9IE5hdGl2ZVVSTC5yZXZva2VPYmplY3RVUkw7XG4gIC8vIGBVUkwuY3JlYXRlT2JqZWN0VVJMYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1VSTC9jcmVhdGVPYmplY3RVUkxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzIC0tIHJlcXVpcmVkIGZvciBgLmxlbmd0aGBcbiAgaWYgKG5hdGl2ZUNyZWF0ZU9iamVjdFVSTCkgcmVkZWZpbmUoVVJMQ29uc3RydWN0b3IsICdjcmVhdGVPYmplY3RVUkwnLCBmdW5jdGlvbiBjcmVhdGVPYmplY3RVUkwoYmxvYikge1xuICAgIHJldHVybiBuYXRpdmVDcmVhdGVPYmplY3RVUkwuYXBwbHkoTmF0aXZlVVJMLCBhcmd1bWVudHMpO1xuICB9KTtcbiAgLy8gYFVSTC5yZXZva2VPYmplY3RVUkxgIG1ldGhvZFxuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvVVJML3Jldm9rZU9iamVjdFVSTFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYFxuICBpZiAobmF0aXZlUmV2b2tlT2JqZWN0VVJMKSByZWRlZmluZShVUkxDb25zdHJ1Y3RvciwgJ3Jldm9rZU9iamVjdFVSTCcsIGZ1bmN0aW9uIHJldm9rZU9iamVjdFVSTCh1cmwpIHtcbiAgICByZXR1cm4gbmF0aXZlUmV2b2tlT2JqZWN0VVJMLmFwcGx5KE5hdGl2ZVVSTCwgYXJndW1lbnRzKTtcbiAgfSk7XG59XG5cbnNldFRvU3RyaW5nVGFnKFVSTENvbnN0cnVjdG9yLCAnVVJMJyk7XG5cbiQoeyBnbG9iYWw6IHRydWUsIGZvcmNlZDogIVVTRV9OQVRJVkVfVVJMLCBzaGFtOiAhREVTQ1JJUFRPUlMgfSwge1xuICBVUkw6IFVSTENvbnN0cnVjdG9yXG59KTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRpZiAoY2FjaGVkTW9kdWxlLmVycm9yICE9PSB1bmRlZmluZWQpIHRocm93IGNhY2hlZE1vZHVsZS5lcnJvcjtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0dHJ5IHtcblx0XHR2YXIgZXhlY09wdGlvbnMgPSB7IGlkOiBtb2R1bGVJZCwgbW9kdWxlOiBtb2R1bGUsIGZhY3Rvcnk6IF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLCByZXF1aXJlOiBfX3dlYnBhY2tfcmVxdWlyZV9fIH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5pLmZvckVhY2goZnVuY3Rpb24oaGFuZGxlcikgeyBoYW5kbGVyKGV4ZWNPcHRpb25zKTsgfSk7XG5cdFx0bW9kdWxlID0gZXhlY09wdGlvbnMubW9kdWxlO1xuXHRcdGV4ZWNPcHRpb25zLmZhY3RvcnkuY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgZXhlY09wdGlvbnMucmVxdWlyZSk7XG5cdH0gY2F0Y2goZSkge1xuXHRcdG1vZHVsZS5lcnJvciA9IGU7XG5cdFx0dGhyb3cgZTtcblx0fVxuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX187XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlIGV4ZWN1dGlvbiBpbnRlcmNlcHRvclxuX193ZWJwYWNrX3JlcXVpcmVfXy5pID0gW107XG5cbiIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFsbCBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18uaHUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmgoKSArIFwiLmhvdC11cGRhdGUuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGID0gKCkgPT4gKFwiY29tbW9uLWFwcGludGVyZmFjZS5cIiArIF9fd2VicGFja19yZXF1aXJlX18uaCgpICsgXCIuaG90LXVwZGF0ZS5qc29uXCIpOyIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjEzOTgxNWVkMTVjYWZlNTMxODk3XCIpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBjdXJyZW50TW9kdWxlRGF0YSA9IHt9O1xudmFyIGluc3RhbGxlZE1vZHVsZXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmM7XG5cbi8vIG1vZHVsZSBhbmQgcmVxdWlyZSBjcmVhdGlvblxudmFyIGN1cnJlbnRDaGlsZE1vZHVsZTtcbnZhciBjdXJyZW50UGFyZW50cyA9IFtdO1xuXG4vLyBzdGF0dXNcbnZhciByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMgPSBbXTtcbnZhciBjdXJyZW50U3RhdHVzID0gXCJpZGxlXCI7XG5cbi8vIHdoaWxlIGRvd25sb2FkaW5nXG52YXIgYmxvY2tpbmdQcm9taXNlcyA9IDA7XG52YXIgYmxvY2tpbmdQcm9taXNlc1dhaXRpbmcgPSBbXTtcblxuLy8gVGhlIHVwZGF0ZSBpbmZvXG52YXIgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnM7XG52YXIgcXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbl9fd2VicGFja19yZXF1aXJlX18uaG1yRCA9IGN1cnJlbnRNb2R1bGVEYXRhO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmkucHVzaChmdW5jdGlvbiAob3B0aW9ucykge1xuXHR2YXIgbW9kdWxlID0gb3B0aW9ucy5tb2R1bGU7XG5cdHZhciByZXF1aXJlID0gY3JlYXRlUmVxdWlyZShvcHRpb25zLnJlcXVpcmUsIG9wdGlvbnMuaWQpO1xuXHRtb2R1bGUuaG90ID0gY3JlYXRlTW9kdWxlSG90T2JqZWN0KG9wdGlvbnMuaWQsIG1vZHVsZSk7XG5cdG1vZHVsZS5wYXJlbnRzID0gY3VycmVudFBhcmVudHM7XG5cdG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRjdXJyZW50UGFyZW50cyA9IFtdO1xuXHRvcHRpb25zLnJlcXVpcmUgPSByZXF1aXJlO1xufSk7XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yQyA9IHt9O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJID0ge307XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlcXVpcmUocmVxdWlyZSwgbW9kdWxlSWQpIHtcblx0dmFyIG1lID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cdGlmICghbWUpIHJldHVybiByZXF1aXJlO1xuXHR2YXIgZm4gPSBmdW5jdGlvbiAocmVxdWVzdCkge1xuXHRcdGlmIChtZS5ob3QuYWN0aXZlKSB7XG5cdFx0XHRpZiAoaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XSkge1xuXHRcdFx0XHR2YXIgcGFyZW50cyA9IGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cztcblx0XHRcdFx0aWYgKHBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCkgPT09IC0xKSB7XG5cdFx0XHRcdFx0cGFyZW50cy5wdXNoKG1vZHVsZUlkKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xuXHRcdFx0XHRjdXJyZW50Q2hpbGRNb2R1bGUgPSByZXF1ZXN0O1xuXHRcdFx0fVxuXHRcdFx0aWYgKG1lLmNoaWxkcmVuLmluZGV4T2YocmVxdWVzdCkgPT09IC0xKSB7XG5cdFx0XHRcdG1lLmNoaWxkcmVuLnB1c2gocmVxdWVzdCk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgK1xuXHRcdFx0XHRcdHJlcXVlc3QgK1xuXHRcdFx0XHRcdFwiKSBmcm9tIGRpc3Bvc2VkIG1vZHVsZSBcIiArXG5cdFx0XHRcdFx0bW9kdWxlSWRcblx0XHRcdCk7XG5cdFx0XHRjdXJyZW50UGFyZW50cyA9IFtdO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVxdWlyZShyZXF1ZXN0KTtcblx0fTtcblx0dmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIChuYW1lKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0cmV0dXJuIHJlcXVpcmVbbmFtZV07XG5cdFx0XHR9LFxuXHRcdFx0c2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcblx0XHRcdFx0cmVxdWlyZVtuYW1lXSA9IHZhbHVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH07XG5cdGZvciAodmFyIG5hbWUgaW4gcmVxdWlyZSkge1xuXHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmVxdWlyZSwgbmFtZSkgJiYgbmFtZSAhPT0gXCJlXCIpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgbmFtZSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKG5hbWUpKTtcblx0XHR9XG5cdH1cblx0Zm4uZSA9IGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0cmV0dXJuIHRyYWNrQmxvY2tpbmdQcm9taXNlKHJlcXVpcmUuZShjaHVua0lkKSk7XG5cdH07XG5cdHJldHVybiBmbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTW9kdWxlSG90T2JqZWN0KG1vZHVsZUlkLCBtZSkge1xuXHR2YXIgX21haW4gPSBjdXJyZW50Q2hpbGRNb2R1bGUgIT09IG1vZHVsZUlkO1xuXHR2YXIgaG90ID0ge1xuXHRcdC8vIHByaXZhdGUgc3R1ZmZcblx0XHRfYWNjZXB0ZWREZXBlbmRlbmNpZXM6IHt9LFxuXHRcdF9hY2NlcHRlZEVycm9ySGFuZGxlcnM6IHt9LFxuXHRcdF9kZWNsaW5lZERlcGVuZGVuY2llczoge30sXG5cdFx0X3NlbGZBY2NlcHRlZDogZmFsc2UsXG5cdFx0X3NlbGZEZWNsaW5lZDogZmFsc2UsXG5cdFx0X3NlbGZJbnZhbGlkYXRlZDogZmFsc2UsXG5cdFx0X2Rpc3Bvc2VIYW5kbGVyczogW10sXG5cdFx0X21haW46IF9tYWluLFxuXHRcdF9yZXF1aXJlU2VsZjogZnVuY3Rpb24gKCkge1xuXHRcdFx0Y3VycmVudFBhcmVudHMgPSBtZS5wYXJlbnRzLnNsaWNlKCk7XG5cdFx0XHRjdXJyZW50Q2hpbGRNb2R1bGUgPSBfbWFpbiA/IHVuZGVmaW5lZCA6IG1vZHVsZUlkO1xuXHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCk7XG5cdFx0fSxcblxuXHRcdC8vIE1vZHVsZSBBUElcblx0XHRhY3RpdmU6IHRydWUsXG5cdFx0YWNjZXB0OiBmdW5jdGlvbiAoZGVwLCBjYWxsYmFjaywgZXJyb3JIYW5kbGVyKSB7XG5cdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkFjY2VwdGVkID0gdHJ1ZTtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwiZnVuY3Rpb25cIikgaG90Ll9zZWxmQWNjZXB0ZWQgPSBkZXA7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiICYmIGRlcCAhPT0gbnVsbCkge1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uICgpIHt9O1xuXHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcFtpXV0gPSBlcnJvckhhbmRsZXI7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uICgpIHt9O1xuXHRcdFx0XHRob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBdID0gZXJyb3JIYW5kbGVyO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0ZGVjbGluZTogZnVuY3Rpb24gKGRlcCkge1xuXHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZEZWNsaW5lZCA9IHRydWU7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiICYmIGRlcCAhPT0gbnVsbClcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXG5cdFx0XHRcdFx0aG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBbaV1dID0gdHJ1ZTtcblx0XHRcdGVsc2UgaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBdID0gdHJ1ZTtcblx0XHR9LFxuXHRcdGRpc3Bvc2U6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG5cdFx0fSxcblx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcblx0XHR9LFxuXHRcdHJlbW92ZURpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdHZhciBpZHggPSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5pbmRleE9mKGNhbGxiYWNrKTtcblx0XHRcdGlmIChpZHggPj0gMCkgaG90Ll9kaXNwb3NlSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0fSxcblx0XHRpbnZhbGlkYXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aGlzLl9zZWxmSW52YWxpZGF0ZWQgPSB0cnVlO1xuXHRcdFx0c3dpdGNoIChjdXJyZW50U3RhdHVzKSB7XG5cdFx0XHRcdGNhc2UgXCJpZGxlXCI6XG5cdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJJW2tleV0oXG5cdFx0XHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRzZXRTdGF0dXMoXCJyZWFkeVwiKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInJlYWR5XCI6XG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJwcmVwYXJlXCI6XG5cdFx0XHRcdGNhc2UgXCJjaGVja1wiOlxuXHRcdFx0XHRjYXNlIFwiZGlzcG9zZVwiOlxuXHRcdFx0XHRjYXNlIFwiYXBwbHlcIjpcblx0XHRcdFx0XHQocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzID0gcXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIHx8IFtdKS5wdXNoKFxuXHRcdFx0XHRcdFx0bW9kdWxlSWRcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdC8vIGlnbm9yZSByZXF1ZXN0cyBpbiBlcnJvciBzdGF0ZXNcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gTWFuYWdlbWVudCBBUElcblx0XHRjaGVjazogaG90Q2hlY2ssXG5cdFx0YXBwbHk6IGhvdEFwcGx5LFxuXHRcdHN0YXR1czogZnVuY3Rpb24gKGwpIHtcblx0XHRcdGlmICghbCkgcmV0dXJuIGN1cnJlbnRTdGF0dXM7XG5cdFx0XHRyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMucHVzaChsKTtcblx0XHR9LFxuXHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHRyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMucHVzaChsKTtcblx0XHR9LFxuXHRcdHJlbW92ZVN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHR2YXIgaWR4ID0gcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLmluZGV4T2YobCk7XG5cdFx0XHRpZiAoaWR4ID49IDApIHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcblx0XHR9LFxuXG5cdFx0Ly9pbmhlcml0IGZyb20gcHJldmlvdXMgZGlzcG9zZSBjYWxsXG5cdFx0ZGF0YTogY3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdXG5cdH07XG5cdGN1cnJlbnRDaGlsZE1vZHVsZSA9IHVuZGVmaW5lZDtcblx0cmV0dXJuIGhvdDtcbn1cblxuZnVuY3Rpb24gc2V0U3RhdHVzKG5ld1N0YXR1cykge1xuXHRjdXJyZW50U3RhdHVzID0gbmV3U3RhdHVzO1xuXHR2YXIgcmVzdWx0cyA9IFtdO1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLmxlbmd0aDsgaSsrKVxuXHRcdHJlc3VsdHNbaV0gPSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnNbaV0uY2FsbChudWxsLCBuZXdTdGF0dXMpO1xuXG5cdHJldHVybiBQcm9taXNlLmFsbChyZXN1bHRzKTtcbn1cblxuZnVuY3Rpb24gdW5ibG9jaygpIHtcblx0aWYgKC0tYmxvY2tpbmdQcm9taXNlcyA9PT0gMCkge1xuXHRcdHNldFN0YXR1cyhcInJlYWR5XCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0aWYgKGJsb2NraW5nUHJvbWlzZXMgPT09IDApIHtcblx0XHRcdFx0dmFyIGxpc3QgPSBibG9ja2luZ1Byb21pc2VzV2FpdGluZztcblx0XHRcdFx0YmxvY2tpbmdQcm9taXNlc1dhaXRpbmcgPSBbXTtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0bGlzdFtpXSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdHJhY2tCbG9ja2luZ1Byb21pc2UocHJvbWlzZSkge1xuXHRzd2l0Y2ggKGN1cnJlbnRTdGF0dXMpIHtcblx0XHRjYXNlIFwicmVhZHlcIjpcblx0XHRcdHNldFN0YXR1cyhcInByZXBhcmVcIik7XG5cdFx0LyogZmFsbHRocm91Z2ggKi9cblx0XHRjYXNlIFwicHJlcGFyZVwiOlxuXHRcdFx0YmxvY2tpbmdQcm9taXNlcysrO1xuXHRcdFx0cHJvbWlzZS50aGVuKHVuYmxvY2ssIHVuYmxvY2spO1xuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZuKSB7XG5cdGlmIChibG9ja2luZ1Byb21pc2VzID09PSAwKSByZXR1cm4gZm4oKTtcblx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG5cdFx0YmxvY2tpbmdQcm9taXNlc1dhaXRpbmcucHVzaChmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXNvbHZlKGZuKCkpO1xuXHRcdH0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gaG90Q2hlY2soYXBwbHlPblVwZGF0ZSkge1xuXHRpZiAoY3VycmVudFN0YXR1cyAhPT0gXCJpZGxlXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJjaGVjaygpIGlzIG9ubHkgYWxsb3dlZCBpbiBpZGxlIHN0YXR1c1wiKTtcblx0fVxuXHRyZXR1cm4gc2V0U3RhdHVzKFwiY2hlY2tcIilcblx0XHQudGhlbihfX3dlYnBhY2tfcmVxdWlyZV9fLmhtck0pXG5cdFx0LnRoZW4oZnVuY3Rpb24gKHVwZGF0ZSkge1xuXHRcdFx0aWYgKCF1cGRhdGUpIHtcblx0XHRcdFx0cmV0dXJuIHNldFN0YXR1cyhhcHBseUludmFsaWRhdGVkTW9kdWxlcygpID8gXCJyZWFkeVwiIDogXCJpZGxlXCIpLnRoZW4oXG5cdFx0XHRcdFx0ZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gc2V0U3RhdHVzKFwicHJlcGFyZVwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dmFyIHVwZGF0ZWRNb2R1bGVzID0gW107XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cblx0XHRcdFx0cmV0dXJuIFByb21pc2UuYWxsKFxuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1yQykucmVkdWNlKGZ1bmN0aW9uIChcblx0XHRcdFx0XHRcdHByb21pc2VzLFxuXHRcdFx0XHRcdFx0a2V5XG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckNba2V5XShcblx0XHRcdFx0XHRcdFx0dXBkYXRlLmMsXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZS5yLFxuXHRcdFx0XHRcdFx0XHR1cGRhdGUubSxcblx0XHRcdFx0XHRcdFx0cHJvbWlzZXMsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzLFxuXHRcdFx0XHRcdFx0XHR1cGRhdGVkTW9kdWxlc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybiBwcm9taXNlcztcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFtdKVxuXHRcdFx0XHQpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdHJldHVybiB3YWl0Rm9yQmxvY2tpbmdQcm9taXNlcyhmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRpZiAoYXBwbHlPblVwZGF0ZSkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaW50ZXJuYWxBcHBseShhcHBseU9uVXBkYXRlKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzZXRTdGF0dXMoXCJyZWFkeVwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdXBkYXRlZE1vZHVsZXM7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH0pO1xufVxuXG5mdW5jdGlvbiBob3RBcHBseShvcHRpb25zKSB7XG5cdGlmIChjdXJyZW50U3RhdHVzICE9PSBcInJlYWR5XCIpIHtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXG5cdFx0XHRcdFwiYXBwbHkoKSBpcyBvbmx5IGFsbG93ZWQgaW4gcmVhZHkgc3RhdHVzIChzdGF0ZTogXCIgK1xuXHRcdFx0XHRcdGN1cnJlbnRTdGF0dXMgK1xuXHRcdFx0XHRcdFwiKVwiXG5cdFx0XHQpO1xuXHRcdH0pO1xuXHR9XG5cdHJldHVybiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0YXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKTtcblxuXHR2YXIgcmVzdWx0cyA9IGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzLm1hcChmdW5jdGlvbiAoaGFuZGxlcikge1xuXHRcdHJldHVybiBoYW5kbGVyKG9wdGlvbnMpO1xuXHR9KTtcblx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSB1bmRlZmluZWQ7XG5cblx0dmFyIGVycm9ycyA9IHJlc3VsdHNcblx0XHQubWFwKGZ1bmN0aW9uIChyKSB7XG5cdFx0XHRyZXR1cm4gci5lcnJvcjtcblx0XHR9KVxuXHRcdC5maWx0ZXIoQm9vbGVhbik7XG5cblx0aWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG5cdFx0cmV0dXJuIHNldFN0YXR1cyhcImFib3J0XCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhyb3cgZXJyb3JzWzBdO1xuXHRcdH0pO1xuXHR9XG5cblx0Ly8gTm93IGluIFwiZGlzcG9zZVwiIHBoYXNlXG5cdHZhciBkaXNwb3NlUHJvbWlzZSA9IHNldFN0YXR1cyhcImRpc3Bvc2VcIik7XG5cblx0cmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcblx0XHRpZiAocmVzdWx0LmRpc3Bvc2UpIHJlc3VsdC5kaXNwb3NlKCk7XG5cdH0pO1xuXG5cdC8vIE5vdyBpbiBcImFwcGx5XCIgcGhhc2Vcblx0dmFyIGFwcGx5UHJvbWlzZSA9IHNldFN0YXR1cyhcImFwcGx5XCIpO1xuXG5cdHZhciBlcnJvcjtcblx0dmFyIHJlcG9ydEVycm9yID0gZnVuY3Rpb24gKGVycikge1xuXHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuXHR9O1xuXG5cdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcblx0cmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcblx0XHRpZiAocmVzdWx0LmFwcGx5KSB7XG5cdFx0XHR2YXIgbW9kdWxlcyA9IHJlc3VsdC5hcHBseShyZXBvcnRFcnJvcik7XG5cdFx0XHRpZiAobW9kdWxlcykge1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChtb2R1bGVzW2ldKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG5cblx0cmV0dXJuIFByb21pc2UuYWxsKFtkaXNwb3NlUHJvbWlzZSwgYXBwbHlQcm9taXNlXSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0Ly8gaGFuZGxlIGVycm9ycyBpbiBhY2NlcHQgaGFuZGxlcnMgYW5kIHNlbGYgYWNjZXB0ZWQgbW9kdWxlIGxvYWRcblx0XHRpZiAoZXJyb3IpIHtcblx0XHRcdHJldHVybiBzZXRTdGF0dXMoXCJmYWlsXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0aHJvdyBlcnJvcjtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGlmIChxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMpIHtcblx0XHRcdHJldHVybiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKGxpc3QpIHtcblx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdFx0aWYgKGxpc3QuaW5kZXhPZihtb2R1bGVJZCkgPCAwKSBsaXN0LnB1c2gobW9kdWxlSWQpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIGxpc3Q7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gc2V0U3RhdHVzKFwiaWRsZVwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBvdXRkYXRlZE1vZHVsZXM7XG5cdFx0fSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhcHBseUludmFsaWRhdGVkTW9kdWxlcygpIHtcblx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdGlmICghY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMpIGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHQpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzID0gdW5kZWZpbmVkO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG59IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGNodW5rc1xuLy8gXCIxXCIgbWVhbnMgXCJsb2FkZWRcIiwgb3RoZXJ3aXNlIG5vdCBsb2FkZWQgeWV0XG52YXIgaW5zdGFsbGVkQ2h1bmtzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX3JlcXVpcmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtclNfcmVxdWlyZSB8fCB7XG5cdDcxNTogMVxufTtcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBjaHVuayBpbnN0YWxsIGZ1bmN0aW9uIG5lZWRlZFxuXG4vLyBubyBjaHVuayBsb2FkaW5nXG5cbi8vIG5vIGV4dGVybmFsIGluc3RhbGwgY2h1bmtcblxuZnVuY3Rpb24gbG9hZFVwZGF0ZUNodW5rKGNodW5rSWQsIHVwZGF0ZWRNb2R1bGVzTGlzdCkge1xuXHR2YXIgdXBkYXRlID0gcmVxdWlyZShcIi4vXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmh1KGNodW5rSWQpKTtcblx0dmFyIHVwZGF0ZWRNb2R1bGVzID0gdXBkYXRlLm1vZHVsZXM7XG5cdHZhciBydW50aW1lID0gdXBkYXRlLnJ1bnRpbWU7XG5cdGZvcih2YXIgbW9kdWxlSWQgaW4gdXBkYXRlZE1vZHVsZXMpIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8odXBkYXRlZE1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSB1cGRhdGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHRpZih1cGRhdGVkTW9kdWxlc0xpc3QpIHVwZGF0ZWRNb2R1bGVzTGlzdC5wdXNoKG1vZHVsZUlkKTtcblx0XHR9XG5cdH1cblx0aWYocnVudGltZSkgY3VycmVudFVwZGF0ZVJ1bnRpbWUucHVzaChydW50aW1lKTtcbn1cblxudmFyIGN1cnJlbnRVcGRhdGVDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZTtcbnZhciBjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcztcbnZhciBjdXJyZW50VXBkYXRlUnVudGltZTtcbmZ1bmN0aW9uIGFwcGx5SGFuZGxlcihvcHRpb25zKSB7XG5cdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmYpIGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmYucmVxdWlyZUhtcjtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHVuZGVmaW5lZDtcblx0ZnVuY3Rpb24gZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzKHVwZGF0ZU1vZHVsZUlkKSB7XG5cdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFt1cGRhdGVNb2R1bGVJZF07XG5cdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cblx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMubWFwKGZ1bmN0aW9uIChpZCkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y2hhaW46IFtpZF0sXG5cdFx0XHRcdGlkOiBpZFxuXHRcdFx0fTtcblx0XHR9KTtcblx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuXHRcdFx0dmFyIHF1ZXVlSXRlbSA9IHF1ZXVlLnBvcCgpO1xuXHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xuXHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xuXHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cdFx0XHRpZiAoXG5cdFx0XHRcdCFtb2R1bGUgfHxcblx0XHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCAmJiAhbW9kdWxlLmhvdC5fc2VsZkludmFsaWRhdGVkKVxuXHRcdFx0KVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdGlmIChtb2R1bGUuaG90Ll9zZWxmRGVjbGluZWQpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiBcInNlbGYtZGVjbGluZWRcIixcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRpZiAobW9kdWxlLmhvdC5fbWFpbikge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHR5cGU6IFwidW5hY2NlcHRlZFwiLFxuXHRcdFx0XHRcdGNoYWluOiBjaGFpbixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlLnBhcmVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0dmFyIHBhcmVudElkID0gbW9kdWxlLnBhcmVudHNbaV07XG5cdFx0XHRcdHZhciBwYXJlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbcGFyZW50SWRdO1xuXHRcdFx0XHRpZiAoIXBhcmVudCkgY29udGludWU7XG5cdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcblx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0dHlwZTogXCJkZWNsaW5lZFwiLFxuXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcblx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdHBhcmVudElkOiBwYXJlbnRJZFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG91dGRhdGVkTW9kdWxlcy5pbmRleE9mKHBhcmVudElkKSAhPT0gLTEpIGNvbnRpbnVlO1xuXHRcdFx0XHRpZiAocGFyZW50LmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG5cdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0pXG5cdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0gPSBbXTtcblx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0sIFttb2R1bGVJZF0pO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF07XG5cdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHBhcmVudElkKTtcblx0XHRcdFx0cXVldWUucHVzaCh7XG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcblx0XHRcdFx0XHRpZDogcGFyZW50SWRcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdHR5cGU6IFwiYWNjZXB0ZWRcIixcblx0XHRcdG1vZHVsZUlkOiB1cGRhdGVNb2R1bGVJZCxcblx0XHRcdG91dGRhdGVkTW9kdWxlczogb3V0ZGF0ZWRNb2R1bGVzLFxuXHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXM6IG91dGRhdGVkRGVwZW5kZW5jaWVzXG5cdFx0fTtcblx0fVxuXG5cdGZ1bmN0aW9uIGFkZEFsbFRvU2V0KGEsIGIpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gYltpXTtcblx0XHRcdGlmIChhLmluZGV4T2YoaXRlbSkgPT09IC0xKSBhLnB1c2goaXRlbSk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gYXQgYmVnaW4gYWxsIHVwZGF0ZXMgbW9kdWxlcyBhcmUgb3V0ZGF0ZWRcblx0Ly8gdGhlIFwib3V0ZGF0ZWRcIiBzdGF0dXMgY2FuIHByb3BhZ2F0ZSB0byBwYXJlbnRzIGlmIHRoZXkgZG9uJ3QgYWNjZXB0IHRoZSBjaGlsZHJlblxuXHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHR2YXIgYXBwbGllZFVwZGF0ZSA9IHt9O1xuXG5cdHZhciB3YXJuVW5leHBlY3RlZFJlcXVpcmUgPSBmdW5jdGlvbiB3YXJuVW5leHBlY3RlZFJlcXVpcmUobW9kdWxlKSB7XG5cdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyBtb2R1bGUuaWQgKyBcIikgdG8gZGlzcG9zZWQgbW9kdWxlXCJcblx0XHQpO1xuXHR9O1xuXG5cdGZvciAodmFyIG1vZHVsZUlkIGluIGN1cnJlbnRVcGRhdGUpIHtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGUsIG1vZHVsZUlkKSkge1xuXHRcdFx0dmFyIG5ld01vZHVsZUZhY3RvcnkgPSBjdXJyZW50VXBkYXRlW21vZHVsZUlkXTtcblx0XHRcdC8qKiBAdHlwZSB7VE9ET30gKi9cblx0XHRcdHZhciByZXN1bHQ7XG5cdFx0XHRpZiAobmV3TW9kdWxlRmFjdG9yeSkge1xuXHRcdFx0XHRyZXN1bHQgPSBnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHMobW9kdWxlSWQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmVzdWx0ID0ge1xuXHRcdFx0XHRcdHR5cGU6IFwiZGlzcG9zZWRcIixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdC8qKiBAdHlwZSB7RXJyb3J8ZmFsc2V9ICovXG5cdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xuXHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcblx0XHRcdHZhciBkb0Rpc3Bvc2UgPSBmYWxzZTtcblx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xuXHRcdFx0aWYgKHJlc3VsdC5jaGFpbikge1xuXHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XG5cdFx0XHR9XG5cdFx0XHRzd2l0Y2ggKHJlc3VsdC50eXBlKSB7XG5cdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcblx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuXHRcdFx0XHRcdFx0XHRcdFwiIGluIFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQucGFyZW50SWQgK1xuXHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vblVuYWNjZXB0ZWQpIG9wdGlvbnMub25VbmFjY2VwdGVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uQWNjZXB0ZWQpIG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRpc3Bvc2VkKSBvcHRpb25zLm9uRGlzcG9zZWQocmVzdWx0KTtcblx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoYWJvcnRFcnJvcikge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdGVycm9yOiBhYm9ydEVycm9yXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRpZiAoZG9BcHBseSkge1xuXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IG5ld01vZHVsZUZhY3Rvcnk7XG5cdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgcmVzdWx0Lm91dGRhdGVkTW9kdWxlcyk7XG5cdFx0XHRcdGZvciAobW9kdWxlSWQgaW4gcmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xuXHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQoXG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSxcblx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChkb0Rpc3Bvc2UpIHtcblx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCBbcmVzdWx0Lm1vZHVsZUlkXSk7XG5cdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRjdXJyZW50VXBkYXRlID0gdW5kZWZpbmVkO1xuXG5cdC8vIFN0b3JlIHNlbGYgYWNjZXB0ZWQgb3V0ZGF0ZWQgbW9kdWxlcyB0byByZXF1aXJlIHRoZW0gbGF0ZXIgYnkgdGhlIG1vZHVsZSBzeXN0ZW1cblx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xuXHRmb3IgKHZhciBqID0gMDsgaiA8IG91dGRhdGVkTW9kdWxlcy5sZW5ndGg7IGorKykge1xuXHRcdHZhciBvdXRkYXRlZE1vZHVsZUlkID0gb3V0ZGF0ZWRNb2R1bGVzW2pdO1xuXHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0aWYgKFxuXHRcdFx0bW9kdWxlICYmXG5cdFx0XHQobW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkIHx8IG1vZHVsZS5ob3QuX21haW4pICYmXG5cdFx0XHQvLyByZW1vdmVkIHNlbGYtYWNjZXB0ZWQgbW9kdWxlcyBzaG91bGQgbm90IGJlIHJlcXVpcmVkXG5cdFx0XHRhcHBsaWVkVXBkYXRlW291dGRhdGVkTW9kdWxlSWRdICE9PSB3YXJuVW5leHBlY3RlZFJlcXVpcmUgJiZcblx0XHRcdC8vIHdoZW4gY2FsbGVkIGludmFsaWRhdGUgc2VsZi1hY2NlcHRpbmcgaXMgbm90IHBvc3NpYmxlXG5cdFx0XHQhbW9kdWxlLmhvdC5fc2VsZkludmFsaWRhdGVkXG5cdFx0KSB7XG5cdFx0XHRvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMucHVzaCh7XG5cdFx0XHRcdG1vZHVsZTogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0cmVxdWlyZTogbW9kdWxlLmhvdC5fcmVxdWlyZVNlbGYsXG5cdFx0XHRcdGVycm9ySGFuZGxlcjogbW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkXG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHR2YXIgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXM7XG5cblx0cmV0dXJuIHtcblx0XHRkaXNwb3NlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0XHRcdGRlbGV0ZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG5cdFx0XHR9KTtcblx0XHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gdW5kZWZpbmVkO1xuXG5cdFx0XHR2YXIgaWR4O1xuXHRcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCk7XG5cdFx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuXHRcdFx0XHR2YXIgbW9kdWxlSWQgPSBxdWV1ZS5wb3AoKTtcblx0XHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cdFx0XHRcdGlmICghbW9kdWxlKSBjb250aW51ZTtcblxuXHRcdFx0XHR2YXIgZGF0YSA9IHt9O1xuXG5cdFx0XHRcdC8vIENhbGwgZGlzcG9zZSBoYW5kbGVyc1xuXHRcdFx0XHR2YXIgZGlzcG9zZUhhbmRsZXJzID0gbW9kdWxlLmhvdC5fZGlzcG9zZUhhbmRsZXJzO1xuXHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0ZGlzcG9zZUhhbmRsZXJzW2pdLmNhbGwobnVsbCwgZGF0YSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJEW21vZHVsZUlkXSA9IGRhdGE7XG5cblx0XHRcdFx0Ly8gZGlzYWJsZSBtb2R1bGUgKHRoaXMgZGlzYWJsZXMgcmVxdWlyZXMgZnJvbSB0aGlzIG1vZHVsZSlcblx0XHRcdFx0bW9kdWxlLmhvdC5hY3RpdmUgPSBmYWxzZTtcblxuXHRcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcblx0XHRcdFx0ZGVsZXRlIF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cblx0XHRcdFx0Ly8gd2hlbiBkaXNwb3NpbmcgdGhlcmUgaXMgbm8gbmVlZCB0byBjYWxsIGRpc3Bvc2UgaGFuZGxlclxuXHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xuXG5cdFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXG5cdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGUuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHR2YXIgY2hpbGQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlLmNoaWxkcmVuW2pdXTtcblx0XHRcdFx0XHRpZiAoIWNoaWxkKSBjb250aW51ZTtcblx0XHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xuXHRcdFx0XHRcdGlmIChpZHggPj0gMCkge1xuXHRcdFx0XHRcdFx0Y2hpbGQucGFyZW50cy5zcGxpY2UoaWR4LCAxKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cblx0XHRcdHZhciBkZXBlbmRlbmN5O1xuXHRcdFx0Zm9yICh2YXIgb3V0ZGF0ZWRNb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBvdXRkYXRlZE1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRpZiAobW9kdWxlKSB7XG5cdFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9XG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcblx0XHRcdFx0XHRcdFx0aWR4ID0gbW9kdWxlLmNoaWxkcmVuLmluZGV4T2YoZGVwZW5kZW5jeSk7XG5cdFx0XHRcdFx0XHRcdGlmIChpZHggPj0gMCkgbW9kdWxlLmNoaWxkcmVuLnNwbGljZShpZHgsIDEpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0YXBwbHk6IGZ1bmN0aW9uIChyZXBvcnRFcnJvcikge1xuXHRcdFx0Ly8gaW5zZXJ0IG5ldyBjb2RlXG5cdFx0XHRmb3IgKHZhciB1cGRhdGVNb2R1bGVJZCBpbiBhcHBsaWVkVXBkYXRlKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8oYXBwbGllZFVwZGF0ZSwgdXBkYXRlTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW3VwZGF0ZU1vZHVsZUlkXSA9IGFwcGxpZWRVcGRhdGVbdXBkYXRlTW9kdWxlSWRdO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHJ1biBuZXcgcnVudGltZSBtb2R1bGVzXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJlbnRVcGRhdGVSdW50aW1lLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVSdW50aW1lW2ldKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBjYWxsIGFjY2VwdCBoYW5kbGVyc1xuXHRcdFx0Zm9yICh2YXIgb3V0ZGF0ZWRNb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBvdXRkYXRlZE1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuXHRcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcblx0XHRcdFx0XHRcdHZhciBlcnJvckhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0XHR2YXIgZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzID0gW107XG5cdFx0XHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG5cdFx0XHRcdFx0XHRcdHZhciBhY2NlcHRDYWxsYmFjayA9XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XG5cdFx0XHRcdFx0XHRcdHZhciBlcnJvckhhbmRsZXIgPVxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5ob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBlbmRlbmN5XTtcblx0XHRcdFx0XHRcdFx0aWYgKGFjY2VwdENhbGxiYWNrKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGNhbGxiYWNrcy5pbmRleE9mKGFjY2VwdENhbGxiYWNrKSAhPT0gLTEpIGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0XHRcdGNhbGxiYWNrcy5wdXNoKGFjY2VwdENhbGxiYWNrKTtcblx0XHRcdFx0XHRcdFx0XHRlcnJvckhhbmRsZXJzLnB1c2goZXJyb3JIYW5kbGVyKTtcblx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MucHVzaChkZXBlbmRlbmN5KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Zm9yICh2YXIgayA9IDA7IGsgPCBjYWxsYmFja3MubGVuZ3RoOyBrKyspIHtcblx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRjYWxsYmFja3Nba10uY2FsbChudWxsLCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyk7XG5cdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRcdFx0XHRcdGlmICh0eXBlb2YgZXJyb3JIYW5kbGVyc1trXSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvckhhbmRsZXJzW2tdKGVyciwge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyMikge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba10sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyMik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9hZCBzZWxmIGFjY2VwdGVkIG1vZHVsZXNcblx0XHRcdGZvciAodmFyIG8gPSAwOyBvIDwgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLmxlbmd0aDsgbysrKSB7XG5cdFx0XHRcdHZhciBpdGVtID0gb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzW29dO1xuXHRcdFx0XHR2YXIgbW9kdWxlSWQgPSBpdGVtLm1vZHVsZTtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRpdGVtLnJlcXVpcmUobW9kdWxlSWQpO1xuXHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRpZiAodHlwZW9mIGl0ZW0uZXJyb3JIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVyciwge1xuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGU6IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF1cblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcblx0XHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyMik7XG5cdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG91dGRhdGVkTW9kdWxlcztcblx0XHR9XG5cdH07XG59XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkucmVxdWlyZSA9IGZ1bmN0aW9uIChtb2R1bGVJZCwgYXBwbHlIYW5kbGVycykge1xuXHRpZiAoIWN1cnJlbnRVcGRhdGUpIHtcblx0XHRjdXJyZW50VXBkYXRlID0ge307XG5cdFx0Y3VycmVudFVwZGF0ZVJ1bnRpbWUgPSBbXTtcblx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IFtdO1xuXHRcdGFwcGx5SGFuZGxlcnMucHVzaChhcHBseUhhbmRsZXIpO1xuXHR9XG5cdGlmICghX193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGUsIG1vZHVsZUlkKSkge1xuXHRcdGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdID0gX193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXTtcblx0fVxufTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1yQy5yZXF1aXJlID0gZnVuY3Rpb24gKFxuXHRjaHVua0lkcyxcblx0cmVtb3ZlZENodW5rcyxcblx0cmVtb3ZlZE1vZHVsZXMsXG5cdHByb21pc2VzLFxuXHRhcHBseUhhbmRsZXJzLFxuXHR1cGRhdGVkTW9kdWxlc0xpc3Rcbikge1xuXHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHt9O1xuXHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHJlbW92ZWRDaHVua3M7XG5cdGN1cnJlbnRVcGRhdGUgPSByZW1vdmVkTW9kdWxlcy5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG5cdFx0b2JqW2tleV0gPSBmYWxzZTtcblx0XHRyZXR1cm4gb2JqO1xuXHR9LCB7fSk7XG5cdGN1cnJlbnRVcGRhdGVSdW50aW1lID0gW107XG5cdGNodW5rSWRzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRpZiAoXG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHQpIHtcblx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQsIHVwZGF0ZWRNb2R1bGVzTGlzdCkpO1xuXHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSBmYWxzZTtcblx0XHR9XG5cdH0pO1xuXHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5mKSB7XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5mLnJlcXVpcmVIbXIgPSBmdW5jdGlvbiAoY2h1bmtJZCwgcHJvbWlzZXMpIHtcblx0XHRcdGlmIChcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rcyAmJlxuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZUNodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0IWN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF1cblx0XHRcdCkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSk7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yTSA9IGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gcmVxdWlyZShcIi4vXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckYoKSk7XG5cdH0pWydjYXRjaCddKGZ1bmN0aW9uKGVycikgeyBpZihlcnIuY29kZSAhPT0gJ01PRFVMRV9OT1RfRk9VTkQnKSB0aHJvdyBlcnI7IH0pO1xufSIsIi8vIG1vZHVsZSBjYWNoZSBhcmUgdXNlZCBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNzc4MSk7XG4iXSwibmFtZXMiOlsiaXNBbmRyb2lkIiwid2luZG93IiwiTXVzaW5zYUFwcEludGVyZmFjZSIsImlzSU9TIiwid2Via2l0IiwibWVzc2FnZUhhbmRsZXJzIiwiZGV2aWNlQ2FsbEFwcCIsImRldmljZSIsInBhcmFtZXRlciIsImNhbGxBcHAiLCJhbmRyb2lkIiwidiIsIm1lc3NhZ2UiLCJuYW1lIiwiQXJyYXkiLCJpc0FycmF5IiwicGFyYW0iLCJpb3MiLCJwb3N0TWVzc2FnZSIsIm5vdE1vYmlsZSIsInJvdXRlciIsImN1cnJlbnREZXZpY2UiLCJkZXZpY2VDaGVjayIsInRoaXMiLCJpc1Byb2QiLCJvcmlnaW4iLCJVUkwiLCJsb2NhdGlvbiIsImhyZWYiLCJtYXAiLCJpIiwiaW5jbHVkZXMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJlIiwiY29uc29sZSIsIndhcm4iLCJkZWZhdWx0IiwiaXNTdHJpbmdpZnkiLCJ2YWxpZGF0aW9uIiwiYmVmb3JlQ2FsbGJhY2siLCJ1bmRlZmluZWQiLCJkYXRhIiwiY29tbWFuZCIsInBhcmFtZXRlcnMiLCJldmVudEJhbm5lciIsIkFwcEludGVyZmFjZSIsImdldEV2ZW50QmFubmVyIiwiSlNPTiIsInN0cmluZ2lmeSIsInNlbmRUcmFuc2l0aW9uR2xvYmFsRmlsdGVyVmlldyIsInNldEdsb2JhbEZpbHRlciIsInZhbGlkYXRlIiwicm9vdE9iaiIsIl9BcHBJbmZvIiwidmFsaWRhdGVHZiIsInR5cGUiLCJyZXN1bHQiLCJwb3BPcGVuZWQiLCJtZXNzYWdlTmFtZSIsInZhbHVlIiwibG9nIiwicG9wQ2xvc2VkIiwicG9wQ2xvc2VkVjIiLCJjdXJyZW50VXJsIiwiaG9zdCIsInBhdGhuYW1lIiwiaGlzdG9yeUJhY2siLCJoaXN0b3J5IiwiYmFjayIsImNsb3NlIiwic2VsZkNsb3NlIiwic2VsZiIsImNsb3NlUG9wdXAiLCJyZWZyZXNoIiwicmVmZXJlciIsImNsZWFyV2l0aFVybCIsInVybCIsImxvZ291dGVkIiwic2hvd1NoYXJlIiwic2hvd0FwcFJhdGluZyIsInZpYnJhdGUiLCJfaXNBcHAiLCJhcHBzZmx5ZXJDYWxsIiwic3RyUGFyYW1zIiwicGFyYW1zIiwiZXZlbnRJZCIsInNob3dOYXRpdmUiLCJhcHBTY2hlbWUiLCJzaG93U2hhcmVNZXRhIiwidGl0bGUiLCJpbWFnZSIsImRlc2NyaXB0aW9uIiwianNvblN0cmluZyIsInNldENvb2tpZXMiLCJhbXBsaXR1ZGVFdmVudExvZyIsInBhcnNlIiwiZXZlbnROYW1lIiwicHJvcGVydGllcyIsImFtcGxpdHVkZVVzZXJJZGVudGlmeSIsImtleSIsImNoZWNrTm90aWZpY2F0aW9ucyIsIm1vdmVEZXZpY2VOb3RpZmljYXRpb25zIiwic2hvd1RvYXN0IiwicmVxdWVzdEFwcHNGbHllckNsaWVudERhdGEiLCJteVBob25lTnVtYmVycyIsInJlcXVlc3RBbXBsaXR1ZGVWYXJpYW50Iiwic2hvd09mZmxpbmVFZGl0b3JpYWxTaG9wUVJTY2FuVmlldyIsImNoZWNrQWRkb25zIiwiZnVuY05hbWUiLCJvcmlnaW5GdW5jIiwiYXJncyIsIkFwcEludGVyZmFjZUFkZG9ucyIsInVuc2hpZnQiLCJhcHBseSIsInNldEJvdHRvbU1lbnUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJhcmd1bWVudHMiLCJldmVudEJhbm5lclYyIiwiY2xvc2VTY3JpcHQiLCJVcHBlclZlcnNpb24iLCJfb3MiLCJzZW5kRXZlbnQiLCJzZW5kUHVyY2hhc2VFdmVudCIsInNlbmRTY3JlZW5FdmVudCIsInNjcmVlbk5hbWUiLCJpZGVudGlmeVVzZXIiLCJvYmplY3RNZXJnZSIsImFjYyIsImN1ciIsImFzc2lnbiIsIm1ha2VQYXJhbWV0ZXIiLCJyb290UGFyYW1NZXJnZSIsImNhbGwiLCJpbnRlcmZhY2VWYWxpZGF0b3IiLCJnZXRTY3JlZW5OYW1lIiwic2VhcmNoUGFyYW1zIiwic2NyZWVucyIsInNjcmVlbk1hcCIsInJlZyIsInJlZ1Jlc3VsdCIsIlJlZ0V4cCIsImV4ZWMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJncm91cHMiLCJzZXRDb29raWUiLCJleHBpcmUiLCJjb29raWVEYXRlIiwiRGF0ZSIsInNldERhdGUiLCJnZXREYXRlIiwicGFyc2VJbnQiLCJkb2N1bWVudCIsImNvb2tpZSIsImVzY2FwZSIsInRvVVRDU3RyaW5nIiwiZ2V0Q29va2llIiwibWF0Y2giLCJnZXRNZXRhIiwicXVlcnlTZWxlY3RvciIsImdldEF0dHJpYnV0ZSIsInNuc0FjdGlvbkdldFRpdGxlIiwidGV4dENvbnRlbnQiLCJzbnNBY3Rpb25HZXRJbWFnZVVybCIsImdldEFic1VSTCIsImluZGV4T2YiLCJwcm90b2NvbCIsImpvaW4iLCJyZXBsYWNlIiwidGVzdCIsImdldEV4cGlyZXMiLCJleHBpcmVzIiwiZGF0ZUFycmF5IiwiZ2V0VGltZSIsImdldE9wZW5HcmFwaEluZm8iLCJwcmljZSIsImlzR29vZHNEZXRhaWxQYWdlIiwiY29tbW9uU25zQWN0aW9uR2V0VXJsIiwiYnJhbmQiLCJjdXJyZW5jeSIsIm5vcm1hbF9wcmljZSIsInNhbGVfcmF0ZSIsInNob3dfc2hhcmVfYnV0dG9uX3luIiwiY29tbW9uTGF5b3V0Iiwic2hhcmVPcHRpb25zIiwiaXNTaG93U2hhcmVCdXR0b24iLCJzZW5kX3NoYXJlX2FuYWx5dGljc195biIsImlzTmVlZFNob3J0TGluayIsImNoYW5nZUdsb2JhbEZpbHRlclR5cGUiLCJnZiIsInNldEdmIiwicmVsb2FkRm9yQ2hhbmdlRmlsdGVyVHlwZSIsInNlbmRDdXJyZW50R2xvYmFsRmlsdGVyVHlwZSIsImN1cnJlbnRHZiIsImdldEdmIiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50Iiwic2VuZERldmljZU5vdGlmaWNhdGlvbiIsInN0YXR1cyIsImRldGFpbCIsInNlbmRBcHBzRmx5ZXJDbGllbnREYXRhIiwiY2xpZW50RGF0YSIsInNlbmRBbXBsaXR1ZGVWYXJpYW50IiwicGF5bG9hZCIsInBheWxvYWRQYXJzaW5nRGF0YSIsInVwbG9hZE15UGhvbmVOdW1iZXJzIiwicGhvbmVJbmZvIiwiZGlkUHJlc3NTZW5kTWVzc2FnZUJ1dHRvbiIsImNhbGxXZWIiLCJBcHBJbmZvIiwiVEhJU19QQUdFX0dGIiwidXNlckFnZW50IiwibmF2aWdhdG9yIiwidG9Mb3dlckNhc2UiLCJhcHBWZXJzaW9uSW5kZXgiLCJzdWJzdHIiLCJzcGxpdCIsIm9zIiwidmVyc2lvbiIsIl92ZXJzaW9uIiwiX2dmIiwiaXNWYWxpZEdmIiwiX3ZhbGlkR2ZzIiwidmVyc2lvbkNvbXBhcmUiLCJ2MSIsInYyIiwib3B0aW9ucyIsImxleGljb2dyYXBoaWNhbCIsInplcm9FeHRlbmQiLCJ2MXBhcnRzIiwidjJwYXJ0cyIsImlzVmFsaWRQYXJ0IiwieCIsImV2ZXJ5IiwiTmFOIiwicHVzaCIsIk51bWJlciIsImNvbXBhcmVWZXJzaW9uIiwiTG93ZXJWZXJzaW9uIiwic2V0RXZlbnRCYW5uZXIiLCJpZHgiLCJsaW5rVVJMIiwiaW1hZ2VVUkwiLCJzdWJqZWN0IiwiY29udGVudCIsInZpc2libGUiLCJldmVudEJhbm5lckRhdGEiLCJTdHJpbmciLCJ0cmltIiwiY2xlYXJFdmVudEJhbm5lciIsIndpdGhBcHBMb2FkaW5nU3RhcnRFdmVudCIsImlzUmVsb2FkV29ya2luZyIsInNjcm9sbFRvIiwidG9wIiwicmVsb2FkIiwiY2hlY2tSZWxvYWRGb3JHbG9iYWxGaWx0ZXIiLCJjYWxsVXRpbHMiLCJyZW1vdmVHZlBhcmFtZXRlciIsIm5ld1F1ZXJ5U3RyaW5nIiwicmVwbGFjZVF1ZXJ5UGFyYW0iLCJuZXdWYWwiLCJzZWFyY2giLCJyZWdleCIsIl8iLCJwMSIsInAyIiwicmVwbGFjZVN0YXRlIiwiaGFzaCIsIm9wZW5XZWJ2aWV3IiwiZXZlbnQiLCJldiIsImN1cnJlbnRUYXJnZXQiLCJzZXRBdHRyaWJ1dGUiLCJ0aHJvd0Vycm9yIiwibXNnIiwiRXJyb3IiLCJBbXBsaXR1ZGUiLCJzdWJ0cmVlIiwiY2hpbGRMaXN0IiwiYXR0cmlidXRlcyIsInByb3BzIiwiZGF0YXNldCIsImFtcEV2ZW50VHlwZSIsImFtcEV2ZW50TmFtZSIsImFtcFByb3BlcnRpZXMiLCJlcnIiLCJQUkVGSVgiLCJmcm9tIiwiZnJvbVNjcmVlbiIsInRhZ05hbWUiLCJ0byIsInN0YXJ0c1dpdGgiLCJ0b1NjcmVlbiIsImluaXQiLCJiaW5kQ2xpY2tFdmVudCIsImJpbmRNdXRhdGlvbk9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsImNiTXV0YXRpb24iLCJiaW5kIiwib2JzZXJ2ZSIsImJvZHkiLCJtdXRhdGlvbkNvbmZpZyIsIm11dGF0aW9uUmVjb3JkIiwiYWRkZWROb2RlcyIsInRhcmdldCIsImZvckVhY2giLCJlbCIsIkhUTUxFbGVtZW50IiwiYW1wRGlydHkiLCJjbGlja0VsZW1zIiwicXVlcnlTZWxlY3RvckFsbCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZW5kQ2xpY2tFdmVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXREYXRhc2V0IiwiZWxlbSIsInJlZHVjZSIsIkdMT0JBTF9GSUxURVJfS0VZIiwiR0xPQkFMX0ZJTFRFUl9DT09LSUVfS0VZIiwiR0VOREVSX0tFWSIsIkEiLCJNIiwiRiIsInNldEdlbmRlciIsInNldENvb2tpZVRvVW5kZXJCYXJHbG9iYWxGaWx0ZXJHZiIsInNldEFwcEluZm9HZiIsInNldEludmFsaWRHbG9iYWxGaWx0ZXJUb0dlbmRlclZhbHVlIiwiaXNJbnZhbGlkR2VuZGVyIiwic3luY0dlbmRlclF1ZXJ5VG9Db29raWUiLCJVUkxTZWFyY2hQYXJhbXMiLCJoYXMiLCJnZXQiLCJ1bmRlckJhckdsb2JhbEZpbHRlckdmIiwiZ2V0UXVlcnlVbmRlckJhckdsb2JhbEZpbHRlckdmIiwiY29va2llVW5kZXJCYXJHbG9iYWxGaWx0ZXJHZiIsImdlbmRlclZhbHVlIiwiZGVsZXRlIiwic2V0IiwidG9TdHJpbmciLCJjYWxsQXBwQXBwSW50ZXJmYWNlIiwiY2FsbFdlYkFwcEludGVyZmFjZSIsInV0aWxzQXBwSW50ZXJmYWNlIiwiX2NhbGxBcHAiLCJzdGF0ZSIsImNvbW1vbkludGVyZmFjZSIsIm9iaiIsImNvbW1vbldlYkludGVyZmFjZSIsIlV0aWxzIiwiX19NU1NfRkVfXyIsImNvbmZpZyIsImdlbmRlciIsInN5bmNRdWVyeVRvQ29va2llIiwiYW1wbGl0dWRlIiwiaXNDYWxsYWJsZSIsInRyeVRvU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsImFyZ3VtZW50IiwiVHlwZUVycm9yIiwiaXNDb25zdHJ1Y3RvciIsIndlbGxLbm93blN5bWJvbCIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5TW9kdWxlIiwiVU5TQ09QQUJMRVMiLCJBcnJheVByb3RvdHlwZSIsInByb3RvdHlwZSIsImYiLCJjb25maWd1cmFibGUiLCJjaGFyQXQiLCJTIiwiaW5kZXgiLCJ1bmljb2RlIiwiaXQiLCJDb25zdHJ1Y3RvciIsImlzT2JqZWN0IiwiJGZvckVhY2giLCJTVFJJQ1RfTUVUSE9EIiwiYXJyYXlNZXRob2RJc1N0cmljdCIsImNhbGxiYWNrZm4iLCJ0b09iamVjdCIsImNhbGxXaXRoU2FmZUl0ZXJhdGlvbkNsb3NpbmciLCJpc0FycmF5SXRlcmF0b3JNZXRob2QiLCJsZW5ndGhPZkFycmF5TGlrZSIsImNyZWF0ZVByb3BlcnR5IiwiZ2V0SXRlcmF0b3IiLCJnZXRJdGVyYXRvck1ldGhvZCIsImFycmF5TGlrZSIsIk8iLCJJU19DT05TVFJVQ1RPUiIsImFyZ3VtZW50c0xlbmd0aCIsIm1hcGZuIiwibWFwcGluZyIsInN0ZXAiLCJpdGVyYXRvciIsIm5leHQiLCJpdGVyYXRvck1ldGhvZCIsImRvbmUiLCJ0b0luZGV4ZWRPYmplY3QiLCJ0b0Fic29sdXRlSW5kZXgiLCJjcmVhdGVNZXRob2QiLCJJU19JTkNMVURFUyIsIiR0aGlzIiwiZnJvbUluZGV4IiwiSW5kZXhlZE9iamVjdCIsImFycmF5U3BlY2llc0NyZWF0ZSIsIlRZUEUiLCJJU19NQVAiLCJJU19GSUxURVIiLCJJU19TT01FIiwiSVNfRVZFUlkiLCJJU19GSU5EX0lOREVYIiwiSVNfRklMVEVSX1JFSkVDVCIsIk5PX0hPTEVTIiwidGhhdCIsInNwZWNpZmljQ3JlYXRlIiwiYm91bmRGdW5jdGlvbiIsInNvbWUiLCJmaW5kIiwiZmluZEluZGV4IiwiZmlsdGVyUmVqZWN0IiwiZmFpbHMiLCJWOF9WRVJTSU9OIiwiU1BFQ0lFUyIsIk1FVEhPRF9OQU1FIiwiYXJyYXkiLCJjb25zdHJ1Y3RvciIsImZvbyIsIkJvb2xlYW4iLCJtZXRob2QiLCJvcmlnaW5hbEFycmF5IiwiQyIsImFycmF5U3BlY2llc0NvbnN0cnVjdG9yIiwiYW5PYmplY3QiLCJpdGVyYXRvckNsb3NlIiwiZm4iLCJFTlRSSUVTIiwiZXJyb3IiLCJJVEVSQVRPUiIsIlNBRkVfQ0xPU0lORyIsImNhbGxlZCIsIml0ZXJhdG9yV2l0aFJldHVybiIsIlNLSVBfQ0xPU0lORyIsIklURVJBVElPTl9TVVBQT1JUIiwib2JqZWN0Iiwic2xpY2UiLCJUT19TVFJJTkdfVEFHX1NVUFBPUlQiLCJjbGFzc29mUmF3IiwiVE9fU1RSSU5HX1RBRyIsIkNPUlJFQ1RfQVJHVU1FTlRTIiwidGFnIiwidHJ5R2V0IiwiY2FsbGVlIiwiaGFzT3duIiwib3duS2V5cyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZSIsInNvdXJjZSIsImtleXMiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIk1BVENIIiwicmVnZXhwIiwiZXJyb3IxIiwiZXJyb3IyIiwiZ2V0UHJvdG90eXBlT2YiLCJJdGVyYXRvclByb3RvdHlwZSIsImNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciIsInNldFRvU3RyaW5nVGFnIiwiSXRlcmF0b3JzIiwicmV0dXJuVGhpcyIsIkl0ZXJhdG9yQ29uc3RydWN0b3IiLCJOQU1FIiwiREVTQ1JJUFRPUlMiLCJiaXRtYXAiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJ0b1Byb3BlcnR5S2V5IiwicHJvcGVydHlLZXkiLCIkIiwiSVNfUFVSRSIsIkZ1bmN0aW9uTmFtZSIsImNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IiLCJzZXRQcm90b3R5cGVPZiIsImNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSIsInJlZGVmaW5lIiwiSXRlcmF0b3JzQ29yZSIsIlBST1BFUl9GVU5DVElPTl9OQU1FIiwiUFJPUEVSIiwiQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUiLCJDT05GSUdVUkFCTEUiLCJCVUdHWV9TQUZBUklfSVRFUkFUT1JTIiwiS0VZUyIsIlZBTFVFUyIsIkl0ZXJhYmxlIiwiREVGQVVMVCIsIklTX1NFVCIsIkZPUkNFRCIsIkN1cnJlbnRJdGVyYXRvclByb3RvdHlwZSIsIm1ldGhvZHMiLCJLRVkiLCJnZXRJdGVyYXRpb25NZXRob2QiLCJLSU5EIiwiZGVmYXVsdEl0ZXJhdG9yIiwiSXRlcmFibGVQcm90b3R5cGUiLCJlbnRyaWVzIiwiSU5DT1JSRUNUX1ZBTFVFU19OQU1FIiwibmF0aXZlSXRlcmF0b3IiLCJhbnlOYXRpdmVJdGVyYXRvciIsInByb3RvIiwiZm9yY2VkIiwicGF0aCIsIndyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUiLCJTeW1ib2wiLCJnbG9iYWwiLCJFWElTVFMiLCJjcmVhdGVFbGVtZW50IiwiQ1NTUnVsZUxpc3QiLCJDU1NTdHlsZURlY2xhcmF0aW9uIiwiQ1NTVmFsdWVMaXN0IiwiQ2xpZW50UmVjdExpc3QiLCJET01SZWN0TGlzdCIsIkRPTVN0cmluZ0xpc3QiLCJET01Ub2tlbkxpc3QiLCJEYXRhVHJhbnNmZXJJdGVtTGlzdCIsIkZpbGVMaXN0IiwiSFRNTEFsbENvbGxlY3Rpb24iLCJIVE1MQ29sbGVjdGlvbiIsIkhUTUxGb3JtRWxlbWVudCIsIkhUTUxTZWxlY3RFbGVtZW50IiwiTWVkaWFMaXN0IiwiTWltZVR5cGVBcnJheSIsIk5hbWVkTm9kZU1hcCIsIk5vZGVMaXN0IiwiUGFpbnRSZXF1ZXN0TGlzdCIsIlBsdWdpbiIsIlBsdWdpbkFycmF5IiwiU1ZHTGVuZ3RoTGlzdCIsIlNWR051bWJlckxpc3QiLCJTVkdQYXRoU2VnTGlzdCIsIlNWR1BvaW50TGlzdCIsIlNWR1N0cmluZ0xpc3QiLCJTVkdUcmFuc2Zvcm1MaXN0IiwiU291cmNlQnVmZmVyTGlzdCIsIlN0eWxlU2hlZXRMaXN0IiwiVGV4dFRyYWNrQ3VlTGlzdCIsIlRleHRUcmFja0xpc3QiLCJUb3VjaExpc3QiLCJjbGFzc0xpc3QiLCJkb2N1bWVudENyZWF0ZUVsZW1lbnQiLCJET01Ub2tlbkxpc3RQcm90b3R5cGUiLCJnZXRCdWlsdEluIiwicHJvY2VzcyIsIkRlbm8iLCJ2ZXJzaW9ucyIsInY4Iiwic2V0R2xvYmFsIiwiY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyIsImlzRm9yY2VkIiwidGFyZ2V0UHJvcGVydHkiLCJzb3VyY2VQcm9wZXJ0eSIsImRlc2NyaXB0b3IiLCJUQVJHRVQiLCJHTE9CQUwiLCJTVEFUSUMiLCJzdGF0Iiwibm9UYXJnZXRHZXQiLCJzaGFtIiwicmVnZXhwRXhlYyIsIlJlZ0V4cFByb3RvdHlwZSIsIlNIQU0iLCJTWU1CT0wiLCJERUxFR0FURVNfVE9fU1lNQk9MIiwiREVMRUdBVEVTX1RPX0VYRUMiLCJleGVjQ2FsbGVkIiwicmUiLCJmbGFncyIsIm5hdGl2ZVJlZ0V4cE1ldGhvZCIsIm5hdGl2ZU1ldGhvZCIsInN0ciIsImFyZzIiLCJmb3JjZVN0cmluZ01ldGhvZCIsIiRleGVjIiwiYUNhbGxhYmxlIiwiYSIsImIiLCJjIiwiRnVuY3Rpb25Qcm90b3R5cGUiLCJGdW5jdGlvbiIsImdldERlc2NyaXB0b3IiLCJzb21ldGhpbmciLCJuYW1lc3BhY2UiLCJjbGFzc29mIiwiZ2V0TWV0aG9kIiwidXNpbmdJdGVyYXRvciIsIlYiLCJQIiwiZnVuYyIsImZsb29yIiwiTWF0aCIsIlNVQlNUSVRVVElPTl9TWU1CT0xTIiwiU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQiLCJtYXRjaGVkIiwicG9zaXRpb24iLCJjYXB0dXJlcyIsIm5hbWVkQ2FwdHVyZXMiLCJyZXBsYWNlbWVudCIsInRhaWxQb3MiLCJtIiwic3ltYm9scyIsImNoIiwiY2FwdHVyZSIsIm4iLCJjaGVjayIsImdsb2JhbFRoaXMiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiZHVtbXkiLCJXcmFwcGVyIiwiTmV3VGFyZ2V0IiwiTmV3VGFyZ2V0UHJvdG90eXBlIiwic3RvcmUiLCJmdW5jdGlvblRvU3RyaW5nIiwiaW5zcGVjdFNvdXJjZSIsIk5BVElWRV9XRUFLX01BUCIsInNoYXJlZCIsInNoYXJlZEtleSIsImhpZGRlbktleXMiLCJPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCIsIldlYWtNYXAiLCJ3bWdldCIsIndtaGFzIiwid21zZXQiLCJtZXRhZGF0YSIsImZhY2FkZSIsIlNUQVRFIiwiZW5mb3JjZSIsImdldHRlckZvciIsImVtcHR5IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3JSZWdFeHAiLCJJTkNPUlJFQ1RfVE9fU1RSSU5HIiwiaXNDb25zdHJ1Y3Rvck1vZGVybiIsImZlYXR1cmUiLCJkZXRlY3Rpb24iLCJub3JtYWxpemUiLCJQT0xZRklMTCIsIk5BVElWRSIsInN0cmluZyIsImlzUmVnRXhwIiwiVVNFX1NZTUJPTF9BU19VSUQiLCIkU3ltYm9sIiwia2luZCIsImlubmVyUmVzdWx0IiwiaW5uZXJFcnJvciIsIlByb3RvdHlwZU9mQXJyYXlJdGVyYXRvclByb3RvdHlwZSIsImFycmF5SXRlcmF0b3IiLCJ0b0xlbmd0aCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbCIsInRvSlNPTiIsInNvcnQiLCJ1c2VybmFtZSIsIm9iamVjdEtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSIsIiRhc3NpZ24iLCJCIiwiYWxwaGFiZXQiLCJjaHIiLCJUIiwiY29uY2F0IiwiaiIsImFjdGl2ZVhEb2N1bWVudCIsImRlZmluZVByb3BlcnRpZXMiLCJlbnVtQnVnS2V5cyIsImh0bWwiLCJQUk9UT1RZUEUiLCJTQ1JJUFQiLCJJRV9QUk9UTyIsIkVtcHR5Q29uc3RydWN0b3IiLCJzY3JpcHRUYWciLCJMVCIsIk51bGxQcm90b09iamVjdFZpYUFjdGl2ZVgiLCJ3cml0ZSIsInRlbXAiLCJwYXJlbnRXaW5kb3ciLCJOdWxsUHJvdG9PYmplY3QiLCJBY3RpdmVYT2JqZWN0IiwiZG9tYWluIiwiaWZyYW1lRG9jdW1lbnQiLCJpZnJhbWUiLCJKUyIsInN0eWxlIiwiZGlzcGxheSIsImFwcGVuZENoaWxkIiwic3JjIiwiY29udGVudFdpbmRvdyIsIm9wZW4iLCJOdWxsUHJvdG9PYmplY3RWaWFJRnJhbWUiLCJQcm9wZXJ0aWVzIiwiSUU4X0RPTV9ERUZJTkUiLCIkZGVmaW5lUHJvcGVydHkiLCJBdHRyaWJ1dGVzIiwiJGdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIiRnZXRPd25Qcm9wZXJ0eU5hbWVzIiwid2luZG93TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0V2luZG93TmFtZXMiLCJpbnRlcm5hbE9iamVjdEtleXMiLCJDT1JSRUNUX1BST1RPVFlQRV9HRVRURVIiLCJPYmplY3RQcm90b3R5cGUiLCJuYW1lcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIk5BU0hPUk5fQlVHIiwiYVBvc3NpYmxlUHJvdG90eXBlIiwic2V0dGVyIiwiQ09SUkVDVF9TRVRURVIiLCJfX3Byb3RvX18iLCJUT19FTlRSSUVTIiwiaW5wdXQiLCJwcmVmIiwidmFsIiwidmFsdWVPZiIsImdldE93blByb3BlcnR5TmFtZXNNb2R1bGUiLCJJbnRlcm5hbFN0YXRlTW9kdWxlIiwiZ2V0SW50ZXJuYWxTdGF0ZSIsImVuZm9yY2VJbnRlcm5hbFN0YXRlIiwiVEVNUExBVEUiLCJ1bnNhZmUiLCJzaW1wbGUiLCJSIiwicmVnZXhwRmxhZ3MiLCJzdGlja3lIZWxwZXJzIiwiVU5TVVBQT1JURURfRE9UX0FMTCIsIlVOU1VQUE9SVEVEX05DRyIsIm5hdGl2ZUV4ZWMiLCJuYXRpdmVSZXBsYWNlIiwicGF0Y2hlZEV4ZWMiLCJVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkciLCJyZTEiLCJyZTIiLCJsYXN0SW5kZXgiLCJVTlNVUFBPUlRFRF9ZIiwiQlJPS0VOX0NBUkVUIiwiTlBDR19JTkNMVURFRCIsInJlQ29weSIsImdyb3VwIiwicmF3Iiwic3RpY2t5IiwiY2hhcnNBZGRlZCIsInN0ckNvcHkiLCJtdWx0aWxpbmUiLCJpZ25vcmVDYXNlIiwiZG90QWxsIiwiJFJlZ0V4cCIsImlzIiwieSIsIkNPTlNUUlVDVE9SX05BTUUiLCJUQUciLCJ1aWQiLCJTSEFSRUQiLCJtb2RlIiwiY29weXJpZ2h0IiwiYUNvbnN0cnVjdG9yIiwiZGVmYXVsdENvbnN0cnVjdG9yIiwidG9JbnRlZ2VyT3JJbmZpbml0eSIsInJlcXVpcmVPYmplY3RDb2VyY2libGUiLCJDT05WRVJUX1RPX1NUUklORyIsInBvcyIsImZpcnN0Iiwic2Vjb25kIiwic2l6ZSIsImNoYXJDb2RlQXQiLCJjb2RlQXQiLCJtYXhJbnQiLCJyZWdleE5vbkFTQ0lJIiwicmVnZXhTZXBhcmF0b3JzIiwiT1ZFUkZMT1dfRVJST1IiLCJzdHJpbmdGcm9tQ2hhckNvZGUiLCJmcm9tQ2hhckNvZGUiLCJkaWdpdFRvQmFzaWMiLCJkaWdpdCIsImFkYXB0IiwiZGVsdGEiLCJudW1Qb2ludHMiLCJmaXJzdFRpbWUiLCJrIiwiYmFzZU1pbnVzVE1pbiIsImJhc2UiLCJlbmNvZGUiLCJvdXRwdXQiLCJjb3VudGVyIiwiZXh0cmEiLCJ1Y3MyZGVjb2RlIiwiY3VycmVudFZhbHVlIiwiaW5wdXRMZW5ndGgiLCJiaWFzIiwiYmFzaWNMZW5ndGgiLCJoYW5kbGVkQ1BDb3VudCIsImhhbmRsZWRDUENvdW50UGx1c09uZSIsIlJhbmdlRXJyb3IiLCJxIiwidCIsInFNaW51c1QiLCJiYXNlTWludXNUIiwibGFiZWwiLCJlbmNvZGVkIiwibGFiZWxzIiwid2hpdGVzcGFjZXMiLCJ3aGl0ZXNwYWNlIiwibHRyaW0iLCJydHJpbSIsInN0YXJ0IiwiZW5kIiwibWF4IiwibWluIiwiaW50ZWdlciIsImNlaWwiLCJudW1iZXIiLCJpc1N5bWJvbCIsIm9yZGluYXJ5VG9QcmltaXRpdmUiLCJUT19QUklNSVRJVkUiLCJleG90aWNUb1ByaW0iLCJ0b1ByaW1pdGl2ZSIsImlkIiwicG9zdGZpeCIsInJhbmRvbSIsIk5BVElWRV9TWU1CT0wiLCJXZWxsS25vd25TeW1ib2xzU3RvcmUiLCJjcmVhdGVXZWxsS25vd25TeW1ib2wiLCJ3aXRob3V0U2V0dGVyIiwiYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCIsIklTX0NPTkNBVF9TUFJFQURBQkxFIiwiTUFYX1NBRkVfSU5URUdFUiIsIk1BWElNVU1fQUxMT1dFRF9JTkRFWF9FWENFRURFRCIsIklTX0NPTkNBVF9TUFJFQURBQkxFX1NVUFBPUlQiLCJTUEVDSUVTX1NVUFBPUlQiLCJpc0NvbmNhdFNwcmVhZGFibGUiLCJzcHJlYWRhYmxlIiwiYXJnIiwibGVuIiwiRSIsIiRmaWx0ZXIiLCJjaGVja0NvcnJlY3RuZXNzT2ZJdGVyYXRpb24iLCJpdGVyYWJsZSIsIiRpbmNsdWRlcyIsImFkZFRvVW5zY29wYWJsZXMiLCJkZWZpbmVJdGVyYXRvciIsIkFSUkFZX0lURVJBVE9SIiwic2V0SW50ZXJuYWxTdGF0ZSIsIml0ZXJhdGVkIiwiQXJndW1lbnRzIiwibmF0aXZlSm9pbiIsIkVTM19TVFJJTkdTIiwic2VwYXJhdG9yIiwiJG1hcCIsIkhBU19TUEVDSUVTX1NVUFBPUlQiLCJuYXRpdmVTbGljZSIsImZpbiIsIkZVTkNUSU9OX05BTUVfRVhJU1RTIiwiRnVuY3Rpb25Qcm90b3R5cGVUb1N0cmluZyIsIm5hbWVSRSIsImluaGVyaXRJZlJlcXVpcmVkIiwidGhpc051bWJlclZhbHVlIiwiTlVNQkVSIiwiTmF0aXZlTnVtYmVyIiwiTnVtYmVyUHJvdG90eXBlIiwidG9OdW1iZXIiLCJ0aGlyZCIsInJhZGl4IiwibWF4Q29kZSIsImRpZ2l0cyIsImNvZGUiLCJOdW1iZXJXcmFwcGVyIiwicHJpbVZhbHVlIiwidG9OdW1lcmljIiwibmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiRkFJTFNfT05fUFJJTUlUSVZFUyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJuYXRpdmVLZXlzIiwiJHZhbHVlcyIsImdldEZsYWdzIiwic2V0U3BlY2llcyIsIk5hdGl2ZVJlZ0V4cCIsIklTX05DRyIsIkNPUlJFQ1RfTkVXIiwiQkFTRV9GT1JDRUQiLCJSZWdFeHBXcmFwcGVyIiwicGF0dGVybiIsInJhd0ZsYWdzIiwiaGFuZGxlZCIsInRoaXNJc1JlZ0V4cCIsInBhdHRlcm5Jc1JlZ0V4cCIsImZsYWdzQXJlVW5kZWZpbmVkIiwicmF3UGF0dGVybiIsIm5hbWVkIiwiYnJhY2tldHMiLCJuY2ciLCJncm91cGlkIiwiZ3JvdXBuYW1lIiwiU3ludGF4RXJyb3IiLCJoYW5kbGVOQ0ciLCJoYW5kbGVEb3RBbGwiLCJwcm94eSIsIiR0b1N0cmluZyIsIlRPX1NUUklORyIsIm5hdGl2ZVRvU3RyaW5nIiwiTk9UX0dFTkVSSUMiLCJJTkNPUlJFQ1RfTkFNRSIsInAiLCJyZiIsIm5vdEFSZWdFeHAiLCJjb3JyZWN0SXNSZWdFeHBMb2dpYyIsInNlYXJjaFN0cmluZyIsIlNUUklOR19JVEVSQVRPUiIsInBvaW50IiwiZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMiLCJhZHZhbmNlU3RyaW5nSW5kZXgiLCJyZWdFeHBFeGVjIiwibmF0aXZlTWF0Y2giLCJtYXliZUNhbGxOYXRpdmUiLCJtYXRjaGVyIiwicngiLCJyZXMiLCJmdWxsVW5pY29kZSIsIm1hdGNoU3RyIiwiZ2V0U3Vic3RpdHV0aW9uIiwiUkVQTEFDRSIsIlJFUExBQ0VfS0VFUFNfJDAiLCJSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSIsIlVOU0FGRV9TVUJTVElUVVRFIiwic2VhcmNoVmFsdWUiLCJyZXBsYWNlVmFsdWUiLCJyZXBsYWNlciIsImZ1bmN0aW9uYWxSZXBsYWNlIiwicmVzdWx0cyIsImFjY3VtdWxhdGVkUmVzdWx0IiwibmV4dFNvdXJjZVBvc2l0aW9uIiwicmVwbGFjZXJBcmdzIiwic2FtZVZhbHVlIiwiU0VBUkNIIiwibmF0aXZlU2VhcmNoIiwic2VhcmNoZXIiLCJwcmV2aW91c0xhc3RJbmRleCIsInNwZWNpZXNDb25zdHJ1Y3RvciIsImNhbGxSZWdFeHBFeGVjIiwiYXJyYXlQdXNoIiwiTUFYX1VJTlQzMiIsIlNQTElUIiwibmF0aXZlU3BsaXQiLCJpbnRlcm5hbFNwbGl0IiwibGltaXQiLCJsaW0iLCJsYXN0TGVuZ3RoIiwibGFzdExhc3RJbmRleCIsInNlcGFyYXRvckNvcHkiLCJzcGxpdHRlciIsInVuaWNvZGVNYXRjaGluZyIsInoiLCJvcmlnaW5hbEV4ZWMiLCIkc3RhcnRzV2l0aCIsIkNPUlJFQ1RfSVNfUkVHRVhQX0xPR0lDIiwiJHRyaW0iLCJmb3JjZWRTdHJpbmdUcmltTWV0aG9kIiwiTmF0aXZlU3ltYm9sIiwiRW1wdHlTdHJpbmdEZXNjcmlwdGlvblN0b3JlIiwiU3ltYm9sV3JhcHBlciIsInN5bWJvbFByb3RvdHlwZSIsInN5bWJvbFRvU3RyaW5nIiwibmF0aXZlU3ltYm9sIiwiZGVzYyIsImRlZmluZVdlbGxLbm93blN5bWJvbCIsIm5hdGl2ZU9iamVjdENyZWF0ZSIsImdldE93blByb3BlcnR5TmFtZXNFeHRlcm5hbCIsIkhJRERFTiIsIiRzdHJpbmdpZnkiLCJuYXRpdmVEZWZpbmVQcm9wZXJ0eSIsIm5hdGl2ZUdldE93blByb3BlcnR5TmFtZXMiLCJuYXRpdmVQcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkFsbFN5bWJvbHMiLCJPYmplY3RQcm90b3R5cGVTeW1ib2xzIiwiU3RyaW5nVG9TeW1ib2xSZWdpc3RyeSIsIlN5bWJvbFRvU3RyaW5nUmVnaXN0cnkiLCJRT2JqZWN0IiwiVVNFX1NFVFRFUiIsImZpbmRDaGlsZCIsInNldFN5bWJvbERlc2NyaXB0b3IiLCJPYmplY3RQcm90b3R5cGVEZXNjcmlwdG9yIiwid3JhcCIsIiRkZWZpbmVQcm9wZXJ0aWVzIiwiJGdldE93blByb3BlcnR5U3ltYm9scyIsIklTX09CSkVDVF9QUk9UT1RZUEUiLCJrZXlGb3IiLCJzeW0iLCJ1c2VTZXR0ZXIiLCJ1c2VTaW1wbGUiLCJzcGFjZSIsIiRyZXBsYWNlciIsIkRPTUl0ZXJhYmxlcyIsImhhbmRsZVByb3RvdHlwZSIsIkNvbGxlY3Rpb25Qcm90b3R5cGUiLCJDT0xMRUNUSU9OX05BTUUiLCJBcnJheUl0ZXJhdG9yTWV0aG9kcyIsIkFycmF5VmFsdWVzIiwiVVNFX05BVElWRV9VUkwiLCJyZWRlZmluZUFsbCIsImFuSW5zdGFuY2UiLCJuYXRpdmVGZXRjaCIsIk5hdGl2ZVJlcXVlc3QiLCJSZXF1ZXN0UHJvdG90eXBlIiwiSGVhZGVycyIsIlVSTF9TRUFSQ0hfUEFSQU1TIiwiVVJMX1NFQVJDSF9QQVJBTVNfSVRFUkFUT1IiLCJnZXRJbnRlcm5hbFBhcmFtc1N0YXRlIiwiZ2V0SW50ZXJuYWxJdGVyYXRvclN0YXRlIiwicGx1cyIsInNlcXVlbmNlcyIsInBlcmNlbnRTZXF1ZW5jZSIsImJ5dGVzIiwicGVyY2VudERlY29kZSIsInNlcXVlbmNlIiwiZGVzZXJpYWxpemUiLCJzZXJpYWxpemUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJwYXJzZVNlYXJjaFBhcmFtcyIsInF1ZXJ5IiwiYXR0cmlidXRlIiwiZW50cnkiLCJzaGlmdCIsInVwZGF0ZVNlYXJjaFBhcmFtcyIsInZhbGlkYXRlQXJndW1lbnRzTGVuZ3RoIiwicGFzc2VkIiwicmVxdWlyZWQiLCJVUkxTZWFyY2hQYXJhbXNJdGVyYXRvciIsIkl0ZXJhdG9yIiwiVVJMU2VhcmNoUGFyYW1zQ29uc3RydWN0b3IiLCJlbnRyeUl0ZXJhdG9yIiwiZW50cnlOZXh0IiwidXBkYXRlVVJMIiwiVVJMU2VhcmNoUGFyYW1zUHJvdG90eXBlIiwiYXBwZW5kIiwic3BsaWNlIiwiZ2V0QWxsIiwiZm91bmQiLCJlbnRyaWVzSW5kZXgiLCJzbGljZUluZGV4IiwiY2FsbGJhY2siLCJ3cmFwUmVxdWVzdE9wdGlvbnMiLCJoZWFkZXJzIiwiZmV0Y2giLCJSZXF1ZXN0Q29uc3RydWN0b3IiLCJSZXF1ZXN0IiwiZ2V0U3RhdGUiLCJFT0YiLCJhcnJheUZyb20iLCJ0b0FTQ0lJIiwiVVJMU2VhcmNoUGFyYW1zTW9kdWxlIiwiTmF0aXZlVVJMIiwiZ2V0SW50ZXJuYWxTZWFyY2hQYXJhbXNTdGF0ZSIsImdldEludGVybmFsVVJMU3RhdGUiLCJwb3ciLCJJTlZBTElEX1NDSEVNRSIsIklOVkFMSURfSE9TVCIsIklOVkFMSURfUE9SVCIsIkFMUEhBIiwiQUxQSEFOVU1FUklDIiwiRElHSVQiLCJIRVhfU1RBUlQiLCJPQ1QiLCJERUMiLCJIRVgiLCJGT1JCSURERU5fSE9TVF9DT0RFX1BPSU5UIiwiRk9SQklEREVOX0hPU1RfQ09ERV9QT0lOVF9FWENMVURJTkdfUEVSQ0VOVCIsIkxFQURJTkdfQU5EX1RSQUlMSU5HX0MwX0NPTlRST0xfT1JfU1BBQ0UiLCJUQUJfQU5EX05FV19MSU5FIiwicGFyc2VIb3N0IiwiY29kZVBvaW50cyIsInBhcnNlSVB2NiIsImlzU3BlY2lhbCIsInBhcnNlSVB2NCIsInBlcmNlbnRFbmNvZGUiLCJDMENvbnRyb2xQZXJjZW50RW5jb2RlU2V0IiwicGFydHNMZW5ndGgiLCJudW1iZXJzIiwicGFydCIsImlwdjQiLCJwYXJ0cyIsInBvcCIsIm51bWJlcnNTZWVuIiwiaXB2NFBpZWNlIiwic3dhcHMiLCJzd2FwIiwiYWRkcmVzcyIsInBpZWNlSW5kZXgiLCJjb21wcmVzcyIsInBvaW50ZXIiLCJzZXJpYWxpemVIb3N0IiwiaWdub3JlMCIsImlwdjYiLCJtYXhJbmRleCIsIm1heExlbmd0aCIsImN1cnJTdGFydCIsImN1cnJMZW5ndGgiLCJmaW5kTG9uZ2VzdFplcm9TZXF1ZW5jZSIsImZyYWdtZW50UGVyY2VudEVuY29kZVNldCIsInBhdGhQZXJjZW50RW5jb2RlU2V0IiwidXNlcmluZm9QZXJjZW50RW5jb2RlU2V0Iiwic3BlY2lhbFNjaGVtZXMiLCJmdHAiLCJmaWxlIiwiaHR0cCIsImh0dHBzIiwid3MiLCJ3c3MiLCJzY2hlbWUiLCJpbmNsdWRlc0NyZWRlbnRpYWxzIiwicGFzc3dvcmQiLCJjYW5ub3RIYXZlVXNlcm5hbWVQYXNzd29yZFBvcnQiLCJjYW5ub3RCZUFCYXNlVVJMIiwiaXNXaW5kb3dzRHJpdmVMZXR0ZXIiLCJub3JtYWxpemVkIiwic3RhcnRzV2l0aFdpbmRvd3NEcml2ZUxldHRlciIsInNob3J0ZW5VUkxzUGF0aCIsInBhdGhTaXplIiwiaXNTaW5nbGVEb3QiLCJzZWdtZW50IiwiU0NIRU1FX1NUQVJUIiwiU0NIRU1FIiwiTk9fU0NIRU1FIiwiU1BFQ0lBTF9SRUxBVElWRV9PUl9BVVRIT1JJVFkiLCJQQVRIX09SX0FVVEhPUklUWSIsIlJFTEFUSVZFIiwiUkVMQVRJVkVfU0xBU0giLCJTUEVDSUFMX0FVVEhPUklUWV9TTEFTSEVTIiwiU1BFQ0lBTF9BVVRIT1JJVFlfSUdOT1JFX1NMQVNIRVMiLCJBVVRIT1JJVFkiLCJIT1NUIiwiSE9TVE5BTUUiLCJQT1JUIiwiRklMRSIsIkZJTEVfU0xBU0giLCJGSUxFX0hPU1QiLCJQQVRIX1NUQVJUIiwiUEFUSCIsIkNBTk5PVF9CRV9BX0JBU0VfVVJMX1BBVEgiLCJRVUVSWSIsIkZSQUdNRU5UIiwicGFyc2VVUkwiLCJzdGF0ZU92ZXJyaWRlIiwiYnVmZmVyQ29kZVBvaW50cyIsImZhaWx1cmUiLCJidWZmZXIiLCJzZWVuQXQiLCJzZWVuQnJhY2tldCIsInNlZW5QYXNzd29yZFRva2VuIiwicG9ydCIsImZyYWdtZW50IiwiY29kZVBvaW50IiwiZW5jb2RlZENvZGVQb2ludHMiLCJVUkxDb25zdHJ1Y3RvciIsImJhc2VTdGF0ZSIsInVybFN0cmluZyIsInNlYXJjaFBhcmFtc1N0YXRlIiwic2VyaWFsaXplVVJMIiwiZ2V0T3JpZ2luIiwiZ2V0UHJvdG9jb2wiLCJnZXRVc2VybmFtZSIsImdldFBhc3N3b3JkIiwiZ2V0SG9zdCIsImhvc3RuYW1lIiwiZ2V0SG9zdG5hbWUiLCJnZXRQb3J0IiwiZ2V0UGF0aG5hbWUiLCJnZXRTZWFyY2giLCJnZXRTZWFyY2hQYXJhbXMiLCJnZXRIYXNoIiwiVVJMUHJvdG90eXBlIiwiYWNjZXNzb3JEZXNjcmlwdG9yIiwiZ2V0dGVyIiwibmF0aXZlQ3JlYXRlT2JqZWN0VVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwibmF0aXZlUmV2b2tlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiYmxvYiIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImV4ZWNPcHRpb25zIiwiZmFjdG9yeSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJyZXF1aXJlIiwiaGFuZGxlciIsImh1IiwiY2h1bmtJZCIsImgiLCJobXJGIiwibyIsInByb3AiLCJjdXJyZW50Q2hpbGRNb2R1bGUiLCJjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyIsInF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyIsImN1cnJlbnRNb2R1bGVEYXRhIiwiaW5zdGFsbGVkTW9kdWxlcyIsImN1cnJlbnRQYXJlbnRzIiwicmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzIiwiY3VycmVudFN0YXR1cyIsImJsb2NraW5nUHJvbWlzZXMiLCJibG9ja2luZ1Byb21pc2VzV2FpdGluZyIsInNldFN0YXR1cyIsIm5ld1N0YXR1cyIsIlByb21pc2UiLCJhbGwiLCJ1bmJsb2NrIiwidGhlbiIsImxpc3QiLCJob3RDaGVjayIsImFwcGx5T25VcGRhdGUiLCJobXJNIiwidXBkYXRlIiwidXBkYXRlZE1vZHVsZXMiLCJobXJDIiwicHJvbWlzZXMiLCJyIiwid2FpdEZvckJsb2NraW5nUHJvbWlzZXMiLCJyZXNvbHZlIiwiaW50ZXJuYWxBcHBseSIsImFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzIiwiaG90QXBwbHkiLCJlcnJvcnMiLCJkaXNwb3NlUHJvbWlzZSIsImRpc3Bvc2UiLCJhcHBseVByb21pc2UiLCJyZXBvcnRFcnJvciIsIm91dGRhdGVkTW9kdWxlcyIsIm1vZHVsZXMiLCJobXJJIiwiaG1yRCIsImNyZWF0ZVJlcXVpcmUiLCJtZSIsInJlcXVlc3QiLCJob3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiY2hpbGRyZW4iLCJ0cmFja0Jsb2NraW5nUHJvbWlzZSIsInByb21pc2UiLCJjcmVhdGVNb2R1bGVIb3RPYmplY3QiLCJfbWFpbiIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsIl9hY2NlcHRlZEVycm9ySGFuZGxlcnMiLCJfZGVjbGluZWREZXBlbmRlbmNpZXMiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsIl9zZWxmSW52YWxpZGF0ZWQiLCJfZGlzcG9zZUhhbmRsZXJzIiwiX3JlcXVpcmVTZWxmIiwiYWNjZXB0IiwiZGVwIiwiZXJyb3JIYW5kbGVyIiwiZGVjbGluZSIsImFkZERpc3Bvc2VIYW5kbGVyIiwicmVtb3ZlRGlzcG9zZUhhbmRsZXIiLCJpbnZhbGlkYXRlIiwibCIsImFkZFN0YXR1c0hhbmRsZXIiLCJyZW1vdmVTdGF0dXNIYW5kbGVyIiwiY3VycmVudFVwZGF0ZUNodW5rcyIsImN1cnJlbnRVcGRhdGUiLCJjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyIsImN1cnJlbnRVcGRhdGVSdW50aW1lIiwiaW5zdGFsbGVkQ2h1bmtzIiwiaG1yU19yZXF1aXJlIiwibG9hZFVwZGF0ZUNodW5rIiwidXBkYXRlZE1vZHVsZXNMaXN0IiwicnVudGltZSIsImFwcGx5SGFuZGxlciIsImdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyIsInVwZGF0ZU1vZHVsZUlkIiwib3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJxdWV1ZSIsImNoYWluIiwicXVldWVJdGVtIiwicGFyZW50SWQiLCJwYXJlbnQiLCJhZGRBbGxUb1NldCIsIml0ZW0iLCJyZXF1aXJlSG1yIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsIm5ld01vZHVsZUZhY3RvcnkiLCJhYm9ydEVycm9yIiwiZG9BcHBseSIsImRvRGlzcG9zZSIsImNoYWluSW5mbyIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwib3V0ZGF0ZWRNb2R1bGVJZCIsImRlcGVuZGVuY3kiLCJkaXNwb3NlSGFuZGxlcnMiLCJjaGlsZCIsImNhbGxiYWNrcyIsImVycm9ySGFuZGxlcnMiLCJkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MiLCJhY2NlcHRDYWxsYmFjayIsImRlcGVuZGVuY3lJZCIsImVycjIiLCJvbkVycm9yZWQiLCJvcmlnaW5hbEVycm9yIiwiaWdub3JlRXJyb3JlZCIsImFwcGx5SGFuZGxlcnMiLCJjaHVua0lkcyIsInJlbW92ZWRDaHVua3MiLCJyZW1vdmVkTW9kdWxlcyJdLCJzb3VyY2VSb290IjoiIn0=